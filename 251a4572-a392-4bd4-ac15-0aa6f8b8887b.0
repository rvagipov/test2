{3,
{46,0,1,0,0,1,0,0,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","График посещений"}
},0,0,1,1,1,0,1,0,
{2,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{9,06ee6a21-061e-47f8-81c5-92ae8b8f3b5d,198ea630-fda2-4cda-8a23-f999f4c67ee6,239f0103-8de9-4fdf-b485-eb5531da7e51,3772996b-41f4-4c47-a5a8-ea397db424ae,3f01ed62-97f8-465b-b4f7-6517ac2bc994,5174ad3f-0569-42fd-8adf-011d8206db6c,5d41082e-9619-42ec-b96f-98b082b3a2f0,71e0226e-ebb2-4e33-8745-0a94a01bbf15,d7e9e72c-8fa7-430c-a3e9-aeadfd57dfc7},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{41,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаКомандаОК",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{42,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаКомандаОКРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{43,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаОтмена",
{1,0},1,
{0,679b62d9-ff72-4329-bf3a-c0c32b311dd2},
{0},3,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{44,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаОтменаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{122,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},6,"ФормаГруппаПрочие",
{1,1,
{"ru","Форма группа прочие"}
},
{1,1,
{"ru","Форма группа прочие"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{115,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаОчистить",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{116,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаОчиститьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{124,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаВыбратьВсе",
{1,0},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{125,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаВыбратьВсеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{120,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаОбщееВремяПосещения",
{1,0},1,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{121,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаОбщееВремяПосещенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{123,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаГруппаПрочиеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,0,0,3,3},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{61,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаВремяПосещения",
{1,1,
{"ru","Время посещения"}
},
{1,1,
{"ru","Группа время посещения"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{48,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"УчитыватьВремяПосещения",4,0,
{1,0},
{1,1,
{"ru","Указать желательное время посещения торговой точки"}
},
{1,
{6}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"УчитыватьВремяПосещенияПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{49,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"УчитыватьВремяПосещенияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{50,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УчитыватьВремяПосещенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{117,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ДекорацияВставка",
{1,1,
{"ru","Декорация вставка"}
},
{1,0},1,1,1,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,0,
{0},"",-1,-1,1,0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{21,
{118,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияВставкаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Декорация вставка"}
},0},0,1,
{10,
{119,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияВставкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{45,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ПериодГрафика",1,0,
{1,0},
{1,0},
{1,
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,0,0,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,0,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},0,
{3,0,0},0,
{1,0},2,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ПериодПосещенияПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{46,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПериодГрафикаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{47,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПериодГрафикаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{62,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВремяПосещенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ВсегоПосещений",1,0,
{1,0},
{1,0},
{1,
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,2,60,
{-31},700,0,0,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,0,2,2,2,
{1,1,
{"ru","ЧН=0"}
},0,
{3,4,
{0}
},
{3,4,
{0}
},
{7,2,60,
{-31},700,0,0,0,1,100},2,
{0,1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},1,0,0,1,0},
{0,1,0},1,
{21,
{39,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВсегоПосещенийКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{40,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВсегоПосещенийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{113,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаГрафик",
{1,1,
{"ru","Группа график"}
},
{1,1,
{"ru","Группа график"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},0,1,0,1,
{10,
{114,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаГрафикРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0},"
#Область СовместимостьСПлатформой_8_3_5

// Подставляет параметры в строку. Максимально возможное число параметров - 5.
// Параметры в строке задаются как %<номер параметра>. Нумерация параметров начинается с единицы.
//
// Параметры:
//  СтрокаПодстановки  - Строка - шаблон строки с параметрами (вхождениями вида ""%ИмяПараметра"");
//  Параметр<n>        - Строка - подставляемый параметр.
//
// Возвращаемое значение:
//  Строка   - текстовая строка с подставленными параметрами.
//
&НаКлиентеНаСервереБезКонтекста
Функция СтрШаблон_(СтрокаПодстановки,
	Параметр1, Параметр2 = Неопределено, Параметр3 = Неопределено, Параметр4 = Неопределено, Параметр5 = Неопределено)
	
	Результат = СтрЗаменить(СтрокаПодстановки, ""%1"", Параметр1);
	Результат = СтрЗаменить(Результат, ""%2"", Параметр2);
	Результат = СтрЗаменить(Результат, ""%3"", Параметр3);
	Результат = СтрЗаменить(Результат, ""%4"", Параметр4);
	Результат = СтрЗаменить(Результат, ""%5"", Параметр5);
	
	Возврат Результат;
	
КонецФункции
	
// Разбивает строку на несколько строк по разделителю. Разделитель может иметь любую длину.
//
// Параметры:
//  Строка                 - Строка - текст с разделителями;
//  Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
//  ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
//    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
//     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
//       включаются в результат.
//     Е если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
//       случае разделителя-пробела результатом функции будет массив, содержащий одно значение """" (пустая строка), а
//       при других разделителях результатом функции будет пустой массив.
//  СокращатьНепечатаемыеСимволы - Булево - сокращать непечатаемые символы по краям каждой из найденных подстрок.
//
// Возвращаемое значение:
//  Массив - массив строк.
&НаКлиентеНаСервереБезКонтекста 
Функция СтрРазделить_(Знач Строка, Знач Разделитель = "","", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь)
	
	Результат = Новый Массив;
	
	// Для обеспечения обратной совместимости.
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = "" "", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = "" "" Тогда
				Результат.Добавить("""");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Строка));
		Иначе
			Результат.Добавить(Строка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

///  Объединяет строки из массива в строку с разделителями.
//
// Параметры:
//  Массив      - Массив - массив строк которые необходимо объединить в одну строку;
//  Разделитель - Строка - любой набор символов, который будет использован в качестве разделителя.
//
// Возвращаемое значение:
//  Строка - строка с разделителями.
// 
&НаКлиентеНаСервереБезКонтекста 
Функция СтрСоединить_(Массив, Разделитель = "","", СокращатьНепечатаемыеСимволы = Ложь)

	Результат = """";
	ТекРазделитель = """";
	
	Для Индекс = 0 По Массив.ВГраница() Цикл
		
		Подстрока = Массив[Индекс];
		
		Если СокращатьНепечатаемыеСимволы Тогда
			Подстрока = СокрЛП(Подстрока);
		КонецЕсли;
		
		Если ТипЗнч(Подстрока) <> Тип(""Строка"") Тогда
			Подстрока = Строка(Подстрока);
		КонецЕсли;
		
		Результат = Результат + ТекРазделитель + Подстрока;
		
		Если Индекс = 0 Тогда
			ТекРазделитель = Разделитель;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

// СовместимостьСПлатформой_8_3_5
#КонецОбласти

#Область Описание

// Описание параметров открытия формы:
// 		График - Структура - структура со свойствами:
// 			""Пn"" ... ""Пm"" - где 0 <= n <= m <= (МаксимумНедель * 7 - 1) - выбранные пункты графика. Не обязательно указывать пустые пункты.
// 				Значения свойств - Структура со свойствами:
// 					Выбран - Булево - выбран пункт графика
// 					Время - ДатаВремя (состав: Время) - время посещения
// 		МаксимумНедель 		- Число - максимально допустимое количество недель в графике.
// 		ПериодПоУмолчанию 	- Число - период графика по умолчанию.
// 		БлокироватьВремя 	- Булево - сделать недоступным на форме флажок ""Время посещения"".
// 		БлокироватьПериод 	- Булево - сделать недоступным на форме поле ""Период графика"".
// 		УбратьВсегоНедель	- Булево - в результате в свойстве ПредставлениеГрафика не выводить количество выбранных недель.

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СтррКонтекст = Новый Структура(""График,МаксимумНедель,ПериодПоУмолчанию,БлокироватьВремя,БлокироватьПериод,УбратьВсегоНедель,ИнтерфейсТакси"");
	ТекОбъект = РеквизитФормыВЗначение(""Объект"");		
	ТекОбъект.ИнициализироватьКонтекстФормы(СтррКонтекст, Параметры);
	ЭтаФорма.Заголовок = ?(Параметры.Свойство(""Заголовок""), Параметры.Заголовок, НСтр(""ru='График'""));
	
	СтррКонтекст.ИнтерфейсТакси = ТекОбъект.КонфигурацияРазмерностьЭлементовФормыДляТакси() 
		И ТекущийВариантИнтерфейсаКлиентскогоПриложения() = ВариантИнтерфейсаКлиентскогоПриложения.Такси;
	
	Если СтррКонтекст.МаксимумНедель = Неопределено Тогда
		СтррКонтекст.МаксимумНедель = 4; // максимальное количество недель в графике
	КонецЕсли; 
	
	Если ПериодГрафика = 0 Тогда
		ПериодГрафика = ?(ЗначениеЗаполнено(СтррКонтекст.ПериодПоУмолчанию), СтррКонтекст.ПериодПоУмолчанию, 7);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СисИнфо = Новый СистемнаяИнформация;
	Элементы.УчитыватьВремяПосещения.Доступность = (СтррКонтекст.БлокироватьВремя <> Истина);
	Элементы.ПериодГрафика.Доступность 			 = (СтррКонтекст.БлокироватьПериод <> Истина);
	
	Список = Элементы.ПериодГрафика.СписокВыбора;
	Для Неделя = 1 По СтррКонтекст.МаксимумНедель Цикл
		ПредставлениеНедели = ЧислоЦифрамиПредметИсчисленияПрописью(Неделя, НСтр(""ru = 'неделя, недели, недель'""));	
		Список.Добавить(Неделя * 7,	ПредставлениеНедели);
	КонецЦикла;
	
	ГрафикЗаполнитьПункты();
	ГрафикОбновитьЭлементы();
	
КонецПроцедуры

// ОбработчикиСобытийФормы
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	СтррПараметры = Новый Структура(""ПредставлениеГрафика,График"");
	ЗаполнитьЗначенияСвойств(СтррПараметры, СтррКонтекст);
	стррПараметры.ПредставлениеГрафика 	= ГрафикПолучитьПредставление();
	стррПараметры.График 				= ГрафикПолучитьПункты();
	Закрыть(СтррПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОчистить(Команда)
	
	ЗначениеВремени = ""00:00"" + Символы.ПС + ""00:00"";
	
	Для каждого СтрокаТ Из ГрафикПосещений Цикл
		Для День = 1 По 7 Цикл
			СтрДень = Строка(День);
			СтрокаТ[""Д""+СтрДень] 	 = Ложь;
			СтрокаТ[""Время""+СтрДень] = ЗначениеВремени;
		КонецЦикла; 
	КонецЦикла; 
	
	ГрафикОбновитьЭлементы();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбратьВсе(Команда)
	
	Для каждого СтрокаТ Из ГрафикПосещений Цикл
		Для День = 1 По 7 Цикл
			СтрокаТ[""Д""+Строка(День)] = Истина;
		КонецЦикла; 
	КонецЦикла; 
	
	ГрафикОбновитьЭлементы();

КонецПроцедуры

&НаКлиенте
Процедура УказатьОбщееВремяПосещения(Команда)
	
	Если ВсегоПосещений = 0 Тогда
		
		ПоказатьПредупреждение(Неопределено, НСтр(""ru='Сначала выберите дни посещений.'""));
		
	Иначе
		
		СтрИндекс = ""00"";
		СтрВремя  = ГрафикПолучитьВремяПервогоВыбранногоДня();
		
		ВремяНачала    = ПолучитьДатуИзСтрокиВремени(Лев(СтрВремя, 5));
		ВремяОкончания = ПолучитьДатуИзСтрокиВремени(Прав(СтрВремя, 5));

		СтррПараметры = Новый Структура(""Ключ,ВремяНачала,ВремяОкончания"", 
			СтрИндекс, ВремяНачала, ВремяОкончания);
		
		Оповещение = Новый ОписаниеОповещения(""ВыборВремениЗавершение"", ЭтотОбъект);
		ОткрытьФормуОбработки(""ВыборВремени"", СтррПараметры,, Оповещение);
		
	КонецЕсли; 
	
КонецПроцедуры

// ОбработчикиКомандФормы
#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодПосещенияПриИзменении(Элемент)
	ГрафикОбновитьЭлементы();
КонецПроцедуры

&НаКлиенте
Процедура УчитыватьВремяПосещенияПриИзменении(Элемент)
	ГрафикОбновитьЭлементы();
КонецПроцедуры

&НаКлиенте
Процедура ПриНажатииКнопкиГрафика(Команда)
	
	ЭлементКнопка 	= ЭтаФорма.ТекущийЭлемент;
	ЭлементВремя = Элементы.Найти(СтрЗаменить(ЭлементКнопка.Имя, ""Кнопка"", ""ЭлементВремя""));

	СтрИндекс 	= Прав(ЭлементКнопка.Имя, 2);
	СтрокаТ 	= ГрафикПосещений[Число(Лев(СтрИндекс, 1)) - 1];
	Поле 		= ""Д"" + Прав(СтрИндекс, 1);
	СтрокаТ[Поле] = Не СтрокаТ[Поле];
	
	ГрафикВыборДняКлиент(СтрокаТ[Поле], ЭлементКнопка, ЭлементВремя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриНажатииКнопкиВремениГрафика(Команда)
	
	ЭлементКнопка 	= ЭтаФорма.ТекущийЭлемент;
	ПриНажатииНаВремяГрафика(ЭлементКнопка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриНажатииНаВремяГрафика(Элемент)
	
	СтрИндекс = Прав(Элемент.Имя, 2);
	СтрокаТ   = ГрафикПосещений[Число(Лев(СтрИндекс, 1)) - 1];
	СтрВремя  = СтрокаТ[""Время"" + Прав(СтрИндекс, 1)];
	
	ВремяНачала    = ПолучитьДатуИзСтрокиВремени(Лев(СтрВремя, 5));
	ВремяОкончания = ПолучитьДатуИзСтрокиВремени(Прав(СтрВремя, 5));

	СтррПараметры = Новый Структура(""Ключ,ВремяНачала,ВремяОкончания"", 
		СтрИндекс, ВремяНачала, ВремяОкончания);
	
	Оповещение = Новый ОписаниеОповещения(""ВыборВремениЗавершение"", ЭтотОбъект);
	ОткрытьФормуОбработки(""ВыборВремени"", СтррПараметры,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборВремениЗавершение(СтррРезультат, ДополнительныеПараметры) Экспорт
    
	Если ТипЗнч(СтррРезультат) = Тип(""Структура"") И СтррРезультат.КодВозвратаДиалога = КодВозвратаДиалога.ОК Тогда
		
		СтрВремя = ПолучитьСтрокуВремениИзДаты(СтррРезультат.ВремяНачала) + Символы.ПС
			+ ПолучитьСтрокуВремениИзДаты(СтррРезультат.ВремяОкончания);
		СтрИндекс = СтррРезультат.Ключ;
		
		Если СтрИндекс <> ""00"" Тогда // указано время для конкретного дня
			
			СтрокаТ   = ГрафикПосещений[Число(Лев(СтрИндекс, 1)) - 1];
			СтрокаТ[""Время"" + Прав(СтрИндекс,1)] = СтрВремя;
			Если СтррКонтекст.ИнтерфейсТакси Тогда
				Элементы[""ЭлементВремя""+СтрИндекс].Заголовок = СтрВремя;
			Иначе
				Элементы[""ЭлементВремя""+СтрИндекс].ТекстНевыбраннойКартинки = СтрВремя;
			КонецЕсли; 
			
		Иначе // указано время для всех выбранных дней
			
			Для Каждого СтрокаТ Из ГрафикПосещений Цикл
				Для День = 1 По 7 Цикл
					СтрДень = Строка(День);
					Если СтрокаТ[""Д""+СтрДень] Тогда
						СтрокаТ[""Время""+СтрДень] = СтрВремя;
					КонецЕсли; 
				КонецЦикла; 		
			КонецЦикла; 
			
			ГрафикОбновитьЭлементы();
			
		КонецЕсли; 
		
	КонецЕсли;

КонецПроцедуры

// ОбработчикиСобытийЭлементовФормы
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункции_РаботаСФормой

&НаКлиенте
Процедура ОткрытьФормуОбработки(ИмяФормы, СтррПараметры = Неопределено, Уникальность = Неопределено, Оповещение = Неопределено)
	
	Если СтррПараметры = Неопределено Тогда
		СтррПараметры = Новый Структура;
	КонецЕсли; 
	СтррПараметры.Вставить(""ВХОбщиеПараметры"", СтррКонтекст.ВХОбщиеПараметры);
	ОткрытьФорму(СтррКонтекст.ПутьКФорме + ИмяФормы, СтррПараметры, ЭтаФорма, Уникальность,,, Оповещение);
	
КонецПроцедуры

// СлужебныеПроцедурыИФункции_РаботаСФормой
#КонецОбласти 


#Область СлужебныеПроцедурыИФункции_ПреобразованиеЗначений

&НаКлиентеНаСервереБезКонтекста
Функция СтрокуВЧисло(СтрЧисло)
	
	СтрРезультат = ""0"";
	
	Для Поз = 1 По СтрДлина(СтрЧисло) Цикл
		Символ = Сред(СтрЧисло, Поз, 1);
		Если КодСимвола(Символ) >= 48 И КодСимвола(Символ) <= 57 Тогда
			СтрРезультат = СтрРезультат + Символ;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Число(СтрРезультат);

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьДатуИзСтрокиВремени(СтрВремя)
	
	Часы 	= СтрокуВЧисло(Лев(СтрВремя, 2))  % 60;
	Минуты 	= СтрокуВЧисло(Прав(СтрВремя, 2)) % 60;
	
	Возврат Дата(1, 1, 1, Часы, Минуты, 0);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСтрокуВремениИзДаты(Дата)
	
	Возврат Прав(""0""+Строка(Час(Дата)), 2) + "":"" + Прав(""0""+Строка(Минута(Дата)), 2);
	
КонецФункции

// Возвращает текстовое представление числа с единицей измерения в правильном склонении и числе.
//
// Параметры:
//  Число                       - Число  - любое целое число.
//  ПараметрыПредметаИсчисления - Строка - варианты написания единицы измерения в родительном падеже для одной,
//                                         для двух и для пяти единиц, разделитель - запятая.
//
// Возвращаемое значение:
//  Строка - текстовое представление количества единиц, число записывается цифрами.
//
// Примеры:
//  ЧислоЦифрамиПредметИсчисленияПрописью(23,  ""минуту,минуты,минут"") = ""23 минуты"";
//  ЧислоЦифрамиПредметИсчисленияПрописью(15,  ""минуту,минуты,минут"") = ""15 минут"".
&НаКлиентеНаСервереБезКонтекста
Функция ЧислоЦифрамиПредметИсчисленияПрописью(Знач Число, Знач ПараметрыПредметаИсчисления,
	Знач ДобавлятьЧислоКРезультату = Истина)
	
	Результат = ?(ДобавлятьЧислоКРезультату, Формат(Число, ""ЧН=0"") + "" "", """");
	ПредставленияПредмета = Новый Массив;
	
	ПараметрыПредметаИсчисления = СтрРазделить_(ПараметрыПредметаИсчисления, "","");
	Для Каждого Параметр Из ПараметрыПредметаИсчисления Цикл
		ПредставленияПредмета.Добавить(СокрЛП(Параметр));
	КонецЦикла;
	
	Число = Число % 100;
	Если Число > 20 Тогда
		Число = Число % 10;
	КонецЕсли;
	
	Индекс = ?(Число = 1, 0, ?(Число > 1 И Число < 5, 1, 2));
	Результат = Результат + ПредставленияПредмета[Индекс];
	
	Возврат Результат;
	
КонецФункции

// СлужебныеПроцедурыИФункции_ПреобразованиеЗначений
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_График

&НаСервере
Процедура ГрафикОбновитьЭлементы()
	
	ГруппаГрафик = Элементы.ГруппаГрафик;
	
	ВсегоНедель = ПериодГрафика / 7;
	
	ЭтаФормаЭлементы = ЭтаФорма.Элементы;	
	
	ЭтаФормаЭлементы.ФормаОбщееВремяПосещения.Видимость = УчитыватьВремяПосещения;
	
	Для Неделя = 1 По СтррКонтекст.МаксимумНедель Цикл
		Элемент = Элементы.Найти(""ГруппаНеделя"" + Неделя);
		Если Элемент <> Неопределено Тогда
			ЭтаФормаЭлементы.Удалить(Элемент);
		КонецЕсли; 
	КонецЦикла; 		

	ГрафикДобавитьСтроки();
	
	ДниНеделиСтр = НСтр(""ru='пн,вт,ср,чт,пт,СБ,ВС'"");
	МассивДней = СтрРазделить_(ДниНеделиСтр, "","");
	
	ТипКнопка = Тип(""КнопкаФормы"");
	ТипГруппа = Тип(""ГруппаФормы"");
	ТипДекор  = Тип(""ДекорацияФормы"");
	
	ВсегоПосещений = 0;
	
	ЭлементВремя = Неопределено;
	стрПустоеЗначениеВремени = ""00:00"" + Символы.ПС + ""00:00"";
	
	ШиринаКолонкиДня = 5;
	
	ИнтерфейсТакси = СтррКонтекст.ИнтерфейсТакси;
	
	Для Неделя = 1 По ВсегоНедель Цикл
		
		СтрокаТ = ГрафикПосещений[Неделя-1];
		
		СтрНеделя = Строка(Неделя);
		
		Группа 		= ЭтаФормаЭлементы.Добавить(""ГруппаНеделя"" + СтрНеделя, ТипГруппа, ГруппаГрафик);
		Группа.Вид 	= ВидГруппыФормы.ОбычнаяГруппа;
		Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Группа.ОтображатьЗаголовок = Ложь;
		Группа.ЦветФона = стррКонтекст.Цвета.ФонРаздела;
		Надпись 	= ЭтаФормаЭлементы.Добавить(""Надпись"" + СтрНеделя, ТипДекор, Группа);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = НСтр(""ru='Неделя'"") + "" "" + СтрНеделя;
		
		Для День = 1 По 7 Цикл
			
			СтрДень 	= Строка(День);
			СтрИндекс 	= СтрНеделя + СтрДень;
			
			Если УчитыватьВремяПосещения Тогда // для каждого дня недели добавляем вертикальную групп
				ГруппаДень 		= ЭтаФормаЭлементы.Добавить(""ГруппаДень"" + СтрИндекс, ТипГруппа, Группа);
				ГруппаДень.Вид 	= ВидГруппыФормы.ОбычнаяГруппа;
				ГруппаДень.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
				ГруппаДень.ОтображатьЗаголовок = Ложь;
			Иначе
				ГруппаДень = Группа;
			КонецЕсли; 
			
			ЭлементКнопка 		= ЭтаФормаЭлементы.Добавить(""Кнопка"" + СтрИндекс, ТипКнопка, ГруппаДень);
			ЭлементКнопка.Вид 	= ВидКнопкиФормы.ОбычнаяКнопка;
			Если ИнтерфейсТакси Тогда
				ЭлементКнопка.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;			
			КонецЕсли; 

			ЭлементКнопка.ИмяКоманды = ""НажатиеКнопкиГрафика"";
			ЭлементКнопка.Заголовок = МассивДней[День-1];
			ЭлементКнопка.Ширина = ШиринаКолонкиДня;
			
			Если День > 5 Тогда
				ЭлементКнопка.ЦветТекста = стррКонтекст.Цвета.ТекстВнимание;    
			КонецЕсли; 
			
			Если УчитыватьВремяПосещения Тогда
				
				стрВремя = СтрокаТ[""Время""+СтрДень];
				Если ПустаяСтрока(стрВремя) Тогда
					стрВремя = стрПустоеЗначениеВремени;
				КонецЕсли; 
				
				ЭлементВремя 	  = ЭтаФормаЭлементы.Добавить(""ЭлементВремя"" + СтрИндекс, ТипДекор, ГруппаДень);				
				
				Если ИнтерфейсТакси Тогда
					ЭлементВремя.Вид  = ВидДекорацииФормы.Надпись;
					ЭлементВремя.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
					ЭлементВремя.УстановитьДействие(""Нажатие"", ""ПриНажатииНаВремяГрафика"");
					ЭлементВремя.Заголовок = стрВремя;
				Иначе
					ЭлементВремя.Вид 	= ВидДекорацииФормы.Картинка;
					ЭлементВремя.УстановитьДействие(""Нажатие"", ""ПриНажатииНаВремяГрафика"");
					ЭлементВремя.ТекстНевыбраннойКартинки = стрВремя;
				КонецЕсли; 
				
				ЭлементВремя.Ширина = ШиринаКолонкиДня;				
				ЭлементВремя.Высота = 2;
					
			КонецЕсли; 
			
			ГрафикВыборДняСервер(СтрокаТ[""Д""+СтрДень], ЭлементКнопка, ЭлементВремя);
			
		КонецЦикла; 
		
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Процедура ГрафикДобавитьСтроки()
	
	ВсегоНедель = ПериодГрафика / 7;
	
	Если ГрафикПосещений.Количество() >= ВсегоНедель Тогда
		Возврат;
	КонецЕсли; 
	
	ЗначениеВремени = ""00:00"" + Символы.ПС + ""00:00"";	
	ДобавитьСтрок = ВсегоНедель - ГрафикПосещений.Количество();
	
	Для Номер = 1 По ДобавитьСтрок Цикл
		СтрокаТ = ГрафикПосещений.Добавить();
		Для День = 1 По 7 Цикл
		    СтрокаТ[""Время""+Строка(День)] = ЗначениеВремени;
		КонецЦикла; 
	КонецЦикла; 
	
КонецПроцедуры

// Интерактивный выбор дня графика
&НаКлиенте
Процедура ГрафикВыборДняКлиент(ДеньВыбран, ЭлементКнопка, ЭлементВремя)
	
	ЭлементКнопка.ЦветФона = ?(ДеньВыбран, СтррКонтекст.Цвета.ФонЗеленый, СтррКонтекст.Цвета.Авто);
	Если ЭлементВремя <> Неопределено Тогда
		ЭлементВремя.Гиперссылка = ДеньВыбран;
		ЭлементВремя.ЦветТекста  = ?(ДеньВыбран,  СтррКонтекст.Цвета.ТекстОбычный, СтррКонтекст.Цвета.Белый);		
	КонецЕсли;

	ВсегоПосещений = ВсегоПосещений + ?(ДеньВыбран, 1, -1);
	
КонецПроцедуры

&НаСервере
Процедура ГрафикВыборДняСервер(ДеньВыбран, ЭлементКнопка, ЭлементВремя)
	
	Цвета = СтррКонтекст.Цвета;
	ЭлементКнопка.ЦветФона = ?(ДеньВыбран, Цвета.ФонЗеленый, Цвета.Авто);
	Если ЭлементВремя <> Неопределено Тогда
		ЭлементВремя.Гиперссылка = ДеньВыбран;
		ЭлементВремя.ЦветТекста  = ?(ДеньВыбран,  Цвета.ТекстОбычный, Цвета.Белый);		
	КонецЕсли;
	
	Если ДеньВыбран Тогда
		ВсегоПосещений = ВсегоПосещений + 1;
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Функция ГрафикПолучитьВремяПервогоВыбранногоДня()
	
	Результат = Неопределено;
	
	Для каждого СтрокаТ Из ГрафикПосещений Цикл
		Для День = 1 По 7 Цикл
			Если СтрокаТ[""Д""+Строка(День)] Тогда
				Результат = СтрокаТ[""Время""+Строка(День)];
				Прервать;
			КонецЕсли; 
		КонецЦикла;
		Если Результат <> Неопределено Тогда
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ГрафикПолучитьПредставление()
	
	Если ВсегоПосещений = 0 Тогда
		Возврат """";
	КонецЕсли; 
	
	мДниНедели = СтрРазделить_(НСтр(""ru='пн,вт,ср,чт,пт,СБ,ВС'""), "","");
	
	ВсегоНедель = Цел(ПериодГрафика / 7) + ?(ПериодГрафика % 7 <> 0, 1, 0);
	ПредыдущееПредставлениеНедели = Неопределено;
	ВыбраноНедель = 0;
	ВсеНеделиОдинаковы = Истина;
	ТекНеделя = -1;
	
	СтрРезультат = """";
	
	Для каждого СтрокаТ Из ГрафикПосещений Цикл
		ТекНеделя = ТекНеделя + 1; // недели нумеруются с 0
		СтрРабочиеДни = """"; РабочихДней = 0;
		СтрВыходные   = """";	Выходных 	= 0; 
		Для День = 1 По 7 Цикл
			Если СтрокаТ[""Д""+Строка(День)] Тогда
				Если День < 6 Тогда
					СтрРабочиеДни = СтрРабочиеДни + мДниНедели[День-1] + "", "";
					РабочихДней   = РабочихДней + 1;
				Иначе
					СтрВыходные = СтрВыходные + мДниНедели[День-1] + "", "";
					Выходных 	= Выходных + 1;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла;
		Если РабочихДней = 5 Тогда
			ПредставлениеНедели = ?(Выходных = 2, НСтр(""ru='все дни'""),	НСтр(""ru='по будням'"") + ?(Выходных = 0, """", "", "" + СтрВыходные));
		Иначе
			ПредставлениеНедели = СтрРабочиеДни + СтрВыходные;
		КонецЕсли;
		Если Прав(ПредставлениеНедели, 2) = "", "" Тогда
			ПредставлениеНедели = Лев(ПредставлениеНедели, СтрДлина(ПредставлениеНедели)-2);
		КонецЕсли;
		Если ВсеНеделиОдинаковы И ТекНеделя > 0 Тогда
			ВсеНеделиОдинаковы = (ПредыдущееПредставлениеНедели = ПредставлениеНедели);
		КонецЕсли; 
		Если ПредставлениеНедели <> """" Тогда
			СтрРезультат = СтрРезультат + ?(СтрРезультат = """", """", ""; "") + Строка(ТекНеделя+1) + "": "" + ПредставлениеНедели;		
		КонецЕсли; 
		ПредыдущееПредставлениеНедели = ПредставлениеНедели;
		ВыбраноНедель = ВыбраноНедель + 1; 
	КонецЦикла;
	
	Если ВсеНеделиОдинаковы И ВыбраноНедель = ВсегоНедель Тогда
		СтрРезультат = ПредставлениеНедели;
	КонецЕсли; 
	
	Если СтрРезультат <> """" Тогда
		Концовка = """"; 
		Если СтррКонтекст.УбратьВсегоНедель <> Истина И ВсегоНедель > 1 Тогда
		    Концовка = Концовка + Строка(ВсегоНедель) + "" "" + НСтр(""ru='нед.'"");
		КонецЕсли; 
		Если УчитыватьВремяПосещения Тогда
			Концовка = Концовка + ?(Концовка = """", """", "", "") + НСтр(""ru='время'"");
		КонецЕсли; 
		Если Концовка <> """" Тогда
			СтрРезультат = СтрРезультат + ?(ВсеНеделиОдинаковы, """", ""."") + "" ("" + Концовка + "")"";	
		КонецЕсли; 
	КонецЕсли; 
	
	Возврат СтрРезультат;

КонецФункции

&НаКлиенте
Функция ГрафикПолучитьПункты()
	
	стррРезультат = Новый Структура(""ПериодГрафика,УчитыватьВремяПосещения,Пункты"", ПериодГрафика, УчитыватьВремяПосещения);
	стррПункты = Новый Структура;
	
	Неделя = 0;
	Для каждого СтрокаТ Из ГрафикПосещений Цикл
		Неделя = Неделя + 1;
		Для День = 1 По 7 Цикл
			СтрДень = Строка(День);
			Если СтрокаТ[""Д""+СтрДень] Тогда
				Значение = Новый Структура(""Выбран"", Истина);
				Если УчитыватьВремяПосещения Тогда
					Значение.Вставить(""Время"", СтрокаТ[""Время""+СтрДень]);
				КонецЕсли; 
				стррПункты.Вставить(""П"" + Строка((Неделя-1)*7 + День - 1), Значение);
			КонецЕсли; 
		КонецЦикла;
	КонецЦикла;
	
	стррРезультат.Пункты = стррПункты;
	
	Возврат стррРезультат;

КонецФункции

&НаКлиенте
Процедура ГрафикЗаполнитьПункты()
	
	стррГрафик 		= СтррКонтекст.График;
	Если ТипЗнч(стррГрафик) <> Тип(""Структура"") Тогда
		Возврат;
	ИначеЕсли Не стррГрафик.Свойство(""ПериодГрафика"") Или Не стррГрафик.Свойство(""УчитыватьВремяПосещения"") Тогда
		Возврат;
	КонецЕсли; 
	ПериодГрафика 	= стррГрафик.ПериодГрафика;
	УчитыватьВремяПосещения = стррГрафик.УчитыватьВремяПосещения;
	стррПункты 		= стррГрафик.Пункты;
	
	// добаляем в график пустые строки (недели)
	ВсегоНедель = ПериодГрафика / 7;
	Для Неделя = 1 По ВсегоНедель Цикл
		ГрафикПосещений.Добавить();	
	КонецЦикла; 
	
	// заполняем строки (недели) значениями
	Для каждого Пункт Из стррПункты Цикл
		Если Лев(Пункт.Ключ, 1) <> ""П"" Тогда
			Продолжить;
		КонецЕсли; 
		НомерПункта = Число(Сред(Пункт.Ключ, 2));
		Неделя = Цел(НомерПункта / 7) + 1;
		Если Неделя > ВсегоНедель Тогда
			Продолжить;
		КонецЕсли; 
		СтрДень = Строка(НомерПункта % 7 + 1);
		СтрокаТ = ГрафикПосещений[Неделя-1];
		стррЗначение = Пункт.Значение;
		СтрокаТ[""Д""+СтрДень] = стррЗначение.Выбран;
		Если УчитыватьВремяПосещения Тогда
			СтрокаТ[""Время""+СтрДень] = стррЗначение.Время;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

// СлужебныеПроцедурыИФункции_График
#КонецОбласти 

// СлужебныеПроцедурыИФункции
#КонецОбласти",
{4,6,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",11aafdb3-24f5-4e79-b06e-d7029a5a8b30}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"СтррКонтекст",
{1,1,
{"ru","Стрр контекст"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"ВсегоПосещений",
{1,1,
{"ru","Всего посещений"}
},
{"Pattern",
{"N",2,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"ГрафикПосещений",
{1,1,
{"ru","График посещений"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,14,
{5,1,0,"Д1",
{1,1,
{"ru","Д1"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Д2",
{1,0},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Д3",
{1,1,
{"ru","Д3"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Д4",
{1,1,
{"ru","Д4"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"Д5",
{1,1,
{"ru","Д5"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"Д6",
{1,1,
{"ru","Д6"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"Д7",
{1,1,
{"ru","Д7"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,9,0,"Время1",
{1,0},
{"Pattern",
{"S",12,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,8,0,"Время2",
{1,0},
{"Pattern",
{"S",12,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,10,0,"Время3",
{1,0},
{"Pattern",
{"S",12,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,11,0,"Время4",
{1,0},
{"Pattern",
{"S",12,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,12,0,"Время5",
{1,0},
{"Pattern",
{"S",12,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,13,0,"Время6",
{1,0},
{"Pattern",
{"S",12,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,14,0,"Время7",
{1,0},
{"Pattern",
{"S",12,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{5},0,"ПериодГрафика",
{1,1,
{"ru","Период графика"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"УчитыватьВремяПосещения",
{1,1,
{"ru","Время посещения"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,6,
{8,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОК",
{1,1,
{"ru","ОК"}
},
{1,1,
{"ru","ОК"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаОК",3,0,0,
{0,0},1,0,1,0,0},
{8,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"НажатиеКнопкиГрафика",
{1,1,
{"ru","Нажатие кнопки графика"}
},
{1,1,
{"ru","Нажатие кнопки графика"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПриНажатииКнопкиГрафика",3,0,0,
{0,0},1,0,1,0,0},
{8,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Очистить",
{1,1,
{"ru","Очистить"}
},
{1,1,
{"ru","Очистиь все пункты графика"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаОчистить",3,0,0,
{0,0},1,0,1,0,0},
{8,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОбщееВремяПосещения",
{1,1,
{"ru","Общее время посещения..."}
},
{1,1,
{"ru","Указать общее время посещения"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"УказатьОбщееВремяПосещения",3,0,0,
{0,0},1,0,1,0,0},
{8,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыбратьВсе",
{1,1,
{"ru","Выбрать все"}
},
{1,1,
{"ru","Выбрать все"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаВыбратьВсе",3,0,0,
{0,0},1,0,1,0,0},
{8,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"НажатиеКнопкиВремениГрафика",
{1,1,
{"ru","Нажатие кнопки времени графика"}
},
{1,1,
{"ru","Нажатие кнопки времени графика"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПриНажатииКнопкиВремениГрафика",3,0,0,
{0,0},1,0,1,0,0}
},
{0,0},
{0,0},0,0}