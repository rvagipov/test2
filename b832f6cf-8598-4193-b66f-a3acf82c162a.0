{3,
{46,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,0,
{1,0},0,0,0,0,0,0,1,0,
{2,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},0,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0},"
#Область ГлобальныеПеременные

&НаКлиенте
Перем гМодульКарты;  // общий клиентский модуль работы с картами
&НаКлиенте
Перем гстррЦвета; // цвета для использования в диалоговой форме

// ГлобальныеПеременные
#КонецОбласти

#Область СовместимостьСПлатформой_8_3_5

&НаКлиентеНаСервереБезКонтекста 
Функция СтрРазделить_(Знач Строка, Знач Разделитель = "","", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь)
	
	Результат = Новый Массив;
	
	// Для обеспечения обратной совместимости.
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = "" "", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = "" "" Тогда
				Результат.Добавить("""");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Строка));
		Иначе
			Результат.Добавить(Строка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Подставляет параметры в строку. Максимально возможное число параметров - 5.
// Параметры в строке задаются как %<номер параметра>. Нумерация параметров начинается с единицы.
//
// Параметры:
//  СтрокаПодстановки  - Строка - шаблон строки с параметрами (вхождениями вида ""%ИмяПараметра"");
//  Параметр<n>        - Строка - подставляемый параметр.
//
// Возвращаемое значение:
//  Строка   - текстовая строка с подставленными параметрами.
//
&НаКлиентеНаСервереБезКонтекста
Функция СтрШаблон_(СтрокаПодстановки,
	Параметр1, Параметр2 = Неопределено, Параметр3 = Неопределено, Параметр4 = Неопределено, Параметр5 = Неопределено)
	
	Результат = СтрЗаменить(СтрокаПодстановки, ""%1"", Параметр1);
	Результат = СтрЗаменить(Результат, ""%2"", Параметр2);
	Результат = СтрЗаменить(Результат, ""%3"", Параметр3);
	Результат = СтрЗаменить(Результат, ""%4"", Параметр4);
	Результат = СтрЗаменить(Результат, ""%5"", Параметр5);
	
	Возврат Результат;
	
КонецФункции

// СовместимостьСПлатформой_8_3_5
#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекОбъект = РеквизитФормыВЗначение(""Объект"");
	ТекОбъект.ИнициализироватьКонтекстФормы(СтррКонтекст, Параметры);
	
	// Константа ""ПоказыватьАдресКоординат"" - признак: при выводе GPS-координат на формах получать из геосервиса адрес координат или нет?
	СтррКонтекст.Вставить(""ПоказыватьАдресКоординат"", Неопределено); 
	
КонецПроцедуры

// ОбработчикиСобытийФормы
#КонецОбласти

#Область РеквизитыМТНаФорме

&НаКлиенте
Процедура ФормаОбновитьАдресПартнера(Модуль) Экспорт
	
	стррАдрес = Новый Структура(""Адрес,Широта,Долгота"", Модуль.АдресОбъекта, Модуль.ШиротаОбъекта, Модуль.ДолготаОбъекта);
	ОбновитьАдресПартнераСервер(Модуль.Партнер, стррАдрес);
	Модуль.АдресОбъекта  	= стррАдрес.Адрес;
	Модуль.ШиротаОбъекта	= стррАдрес.Широта;
	Модуль.ДолготаОбъекта	= стррАдрес.Долгота;
	
	Если МодульКарты().ДействиеВДопустимойЗоне(Модуль.ШиротаОбъекта, Модуль.ДолготаОбъекта, Модуль.Широта, Модуль.Долгота) Тогда
		Модуль.Элементы.ИнфоМТКоординатыМестаСоздания.ЦветТекста = ВернутьЦвет(""Авто"");
	Иначе
	    Модуль.Элементы.ИнфоМТКоординатыМестаСоздания.ЦветТекста = ВернутьЦвет(""Ошибка"");
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьАдресПартнераСервер(Партнер, стррАдрес)
	
	стррАдрес.Широта  = 0;
	стррАдрес.Долгота = 0;
	Если Не ЗначениеЗаполнено(Партнер) Тогда
		стррАдрес.Адрес = """";
		Возврат;
	КонецЕсли; 
	
	АдресПартнера = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Партнер, Справочники.ВидыКонтактнойИнформации.АдресПартнера);	
	
	Если РеквизитФормыВЗначение(""Объект"").ПолучитьКоординатыПартнера(Партнер, стррАдрес) Тогда
		стррАдрес.Адрес = СтрШаблон_(НСтр(""ru = '%1 (ш/д: %2; %3)'""), АдресПартнера, стррАдрес.Широта, стррАдрес.Долгота);
	Иначе
		стррАдрес.Адрес = АдресПартнера;
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура ФормаСведенияИзМТОбновить(Модуль) Экспорт 
	
	ПустаяДата = Дата('00010101');
	Если Модуль.ДатаНачала = ПустаяДата И Модуль.ДатаОкончания = ПустаяДата Тогда
		Модуль.ИнфоВремяСоздания = НСтр(""ru = 'Не задано.'"");
	Иначе
		Модуль.ИнфоВремяСоздания = СтрШаблон_(НСтр(""ru = '%1 - %2'""), Модуль.ДатаНачала, Модуль.ДатаОкончания);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Модуль.Широта) И Не ЗначениеЗаполнено(Модуль.Долгота) Тогда
		Модуль.ИнфоКоординатыМестаСоздания = НСтр(""ru = 'Координаты не указаны.'"");
	Иначе
		
		Если СтррКонтекст.ПоказыватьАдресКоординат = Неопределено Тогда
			ПрочестьНастройкиИзХранилища();
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Модуль.АдресПоГеокодеру) И СтррКонтекст.ПоказыватьАдресКоординат Тогда
			стррКоординаты = Новый Структура(""Широта,Долгота"", Модуль.Широта, Модуль.Долгота);
			Модуль.АдресПоГеокодеру = МодульКарты().ПолучитьАдресПоКоординатамОтВебСервиса(стррКоординаты, Истина, Истина);
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(Модуль.АдресПоГеокодеру) Тогда
			Модуль.ИнфоКоординатыМестаСоздания = СтрШаблон_(НСтр(""ru = '%1 (ш/д: %2; %3)'""), Модуль.АдресПоГеокодеру, Модуль.Широта, Модуль.Долгота);
		Иначе
			Модуль.ИнфоКоординатыМестаСоздания = СтрШаблон_(НСтр(""ru = '(ш/д: %1; %2)'""), Модуль.Широта, Модуль.Долгота);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаСведенияИзМТРежимРедактированияОбновить(Модуль) Экспорт 
	
	РежимРедактирования = Модуль.СтррКонтекст.Свойство(""РедактироватьРеквизитыМТ"") И Модуль.СтррКонтекст.РедактироватьРеквизитыМТ = Истина;
	
	Если РежимРедактирования Тогда
		// можно редактировать реквизиты МТ
		Модуль.Элементы.ИнфоМТВремяСоздания.Гиперссылка  = Истина;
		Модуль.Элементы.ИнфоМТКоординатыМестаСоздания.Гиперссылка = Истина;
	Иначе // нельзя редактировать реквизиты МТ
		Модуль.Элементы.ИнфоМТВремяСоздания.Гиперссылка  = Ложь;
		Модуль.Элементы.ИнфоМТКоординатыМестаСоздания.Гиперссылка = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция РеквизитМТПриНажатииСсылки(Модуль, Элемент, СтандартнаяОбработка) Экспорт 
	
	Результат = Неопределено;
	
	СтандартнаяОбработка = Ложь;
	Период = Новый СтандартныйПериод; 
	Период.ДатаНачала 	 = Модуль.ДатаНачала;
	Период.ДатаОкончания = Модуль.ДатаОкончания;
	
	Если Элемент.Имя = ""ИнфоМТВремяСоздания"" Тогда // запрашиваем время создания
		
		стррПараметры = Новый Структура(""ДатаНачала,ДатаОкончания"", Модуль.ДатаНачала, Модуль.ДатаОкончания);
		Оповещение = Новый ОписаниеОповещения(""ВыборПериодаЗавершение"", ЭтотОбъект, Модуль);
		ОткрытьФормуОбработки(""ВыборПериода"", стррПараметры,, Оповещение);
		
	ИначеЕсли Элемент.Имя = ""ИнфоМТКоординатыМестаСоздания"" Тогда // показываем объект на карте, но если включено еще и редактирование
		
		РежимРедактирования = Модуль.СтррКонтекст.Свойство(""РедактироватьРеквизитыМТ"") И Модуль.СтррКонтекст.РедактироватьРеквизитыМТ = Истина;
		
		Если РежимРедактирования Тогда // предложить выбор - показать объект на карте или изменить координаты
			
			// нужно вернуть структуру, которая будет задействована в исходном модуле для выбора значения из меню			
			Меню = Новый СписокЗначений;
			Меню.Добавить(""ПоказатьНаКарте"",   НСтр(""ru = 'Показать на карте'""));			
			Меню.Добавить(""УказатьКоординаты"", НСтр(""ru = 'Указать координаты'""));
			Оповещение = Новый ОписаниеОповещения(""ВыборВариантаРаботыСКоординатамиЗавершение"", ЭтотОбъект, Модуль);
			Результат = Новый Структура(""Меню,Оповещение"", Меню, Оповещение); 
			
		Иначе // показываем объект на карте
			
			ПоказатьНаКарте(Модуль, ""Документ"");
			
		КонецЕсли;
	ИначеЕсли Элемент.Имя = ""ИнфоМТАдресОбъекта"" Тогда // показываем объект на карте, но если включено еще и редактирование		
		
		ПоказатьНаКарте(Модуль, ""Партнер"");
		
	Иначе
		Текст = СтрШаблон_(""Процедура РеквизитМТПриНажатииСсылки(): передано событие от неизвестного элемента формы (%1)."", Элемент.Имя);
		ВызватьИсключение(Текст);
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВыборПериодаЗавершение(стррРезультат, ДополнительныеПараметры) Экспорт

	Модуль = ДополнительныеПараметры;
	
	Если ТипЗнч(СтррРезультат) = Тип(""Структура"") И СтррРезультат.КодВозвратаДиалога = КодВозвратаДиалога.ОК Тогда
		Модуль.ДатаНачала 	 = стррРезультат.ДатаНачала;
		Модуль.ДатаОкончания = стррРезультат.ДатаОкончания;
		ФормаСведенияИзМТОбновить(Модуль);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборВариантаРаботыСКоординатамиЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Модуль = ДополнительныеПараметры;
	
	Если Результат <> Неопределено Тогда
		Если Результат.Значение = ""УказатьКоординаты"" Тогда
			
			стррПараметры = Новый Структура(""Широта,Долгота"", Модуль.Широта, Модуль.Долгота);
			Оповещение = Новый ОписаниеОповещения(""ВыборКоординатЗавершение"", ЭтотОбъект, Модуль);
			ОткрытьФормуОбработки(""ВыборКоординат"", Новый Структура(""Значения"", стррПараметры),, Оповещение);
			
		ИначеЕсли Результат.Значение = ""ПоказатьНаКарте"" Тогда
			ПоказатьНаКарте(Модуль, ""Документ"");
		Иначе
			ВызватьИсключение(""Неизвестное значение пункта меню для выбора: "" + Результат.Значение);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКоординатЗавершение(стррРезультат, ДополнительныеПараметры) Экспорт
	
	Модуль = ДополнительныеПараметры;
	
	Если ТипЗнч(стррРезультат) = Тип(""Структура"") Тогда
		Модуль.Широта  = стррРезультат.Широта;
		Модуль.Долгота = стррРезультат.Долгота;
		Модуль.АдресПоГеокодеру = """";		
		ФормаСведенияИзМТОбновить(Модуль);
	КонецЕсли;

КонецПроцедуры

// Процедура показывает на карте два объекта (если это возможно): место создания документа и расположение партнера (торговой точки)
&НаКлиенте
Процедура ПоказатьНаКарте(Модуль, ВидОбъекта)
	
	мМаркеры = Новый Массив;
	стррМаркер1 = ПолучитьМаркер(Модуль, ВидОбъекта);
	Если стррМаркер1 = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, НСтр(""ru = 'Координаты не заполнены.'""));
		Возврат;
	КонецЕсли;
	
	мМаркеры.Добавить(стррМаркер1);
	
	стррМаркер2 = ПолучитьМаркер(Модуль, ?(ВидОбъекта = ""Документ"", ""Партнер"", ""Документ""));
	Если стррМаркер2 <> Неопределено Тогда
		мМаркеры.Добавить(стррМаркер2);
	КонецЕсли; 
	
	стррПараметры = Новый Структура(""ПоказатьТолькоКарту,Маркеры"", Истина, мМаркеры);
	Форма = ОткрытьФормуОбработки(""ПросмотрНаКарте"", стррПараметры, ""АППоказатьНаКарте"");
	Если Форма.СтррКонтекст.Повторно = Истина Тогда // значит форма карты была до этого открыта
		Форма.ВнешнийВызовДобавитьИПоказатьМаркеры(стррПараметры);
	КонецЕсли; 
	
КонецПроцедуры

// Процедура показывает на карте два объекта (если это возможно): место создания документа и расположение партнера (торговой точки)
&НаКлиенте
Функция ПолучитьМаркер(Модуль, ВидОбъекта)
	
	стррМаркер = Новый Структура(""Широта,Долгота,Заголовок,Описание,ВидМаркера"");
	стррМаркер.ВидМаркера = ВидОбъекта;
	
	Если ВидОбъекта = ""Документ"" Тогда
		Если ЗначениеЗаполнено(Модуль.Широта) И ЗначениеЗаполнено(Модуль.Долгота) Тогда
			стррМаркер.Широта  = СтрокуВЧисло(Модуль.Широта);
			стррМаркер.Долгота = СтрокуВЧисло(Модуль.Долгота);
			стррМаркер.Заголовок = НСтр(""ru = 'Место создания документа'"");
			стррМаркер.Описание  = ?(ЗначениеЗаполнено(Модуль.АдресПоГеокодеру), Модуль.АдресПоГеокодеру, НСтр(""ru = 'Адрес неизвестен.'""));
		Иначе		
			Возврат Неопределено;
		КонецЕсли; 
	ИначеЕсли ВидОбъекта = ""Партнер"" Тогда
		Если ЗначениеЗаполнено(Модуль.ШиротаОбъекта) И ЗначениеЗаполнено(Модуль.ДолготаОбъекта) Тогда
			стррМаркер.Широта  = СтрокуВЧисло(Модуль.ШиротаОбъекта);
			стррМаркер.Долгота = СтрокуВЧисло(Модуль.ДолготаОбъекта);
			стррМаркер.Заголовок = Модуль.Партнер;
			стррМаркер.Описание  = ?(ЗначениеЗаполнено(Модуль.АдресОбъекта), Модуль.АдресОбъекта, НСтр(""ru = 'Адрес неизвестен.'""));
		Иначе		
			Возврат Неопределено;
		КонецЕсли; 
	Иначе
		Текст = СтрШаблон_(""Функция ПолучитьМаркер(): неизвестное значение параметра ВидОбъекта (%1)."", ВидОбъекта);
		ВызватьИсключение(Текст);
	КонецЕсли; 
	
	Возврат стррМаркер;
	
КонецФункции

// РеквизитыМТНаФорме
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ОткрытьФормуОбработки(ИмяФормы, стррПараметры = Неопределено, Уникальность = Неопределено, Оповещение = Неопределено)
	
	Если стррПараметры = Неопределено Тогда
		стррПараметры = Новый Структура;
	КонецЕсли; 
	стррПараметры.Вставить(""ВХОбщиеПараметры"", СтррКонтекст.ВХОбщиеПараметры);
	Возврат ОткрытьФорму(СтррКонтекст.ПутьКФорме + ИмяФормы, стррПараметры, ЭтаФорма, Уникальность,,, Оповещение);
	
КонецФункции

// Преобразует строку в число без вызова исключений. Стандартная функция преобразования
//   Число() контролирует отсутствие каких либо символов кроме числовых.
//
&НаКлиентеНаСервереБезКонтекста
Функция СтрокуВЧисло(ИсходнаяСтрока)

	ИсхСтрока = СокрЛП(ИсходнаяСтрока);
	Длина = СтрДлина(ИсхСтрока);
	стрЧисло = """";
	Для Поз = 1 По Длина Цикл
		Символ = Сред(ИсхСтрока, Поз, 1);
		Код = КодСимвола(Символ);
		Если Код >= 48 И Код <= 57 Тогда 
			стрЧисло = стрЧисло + Символ;
		ИначеЕсли Код = 46 Или Код = 44 Тогда // Символ ""."" или "",""
			стрЧисло = стрЧисло + ""."";
		КонецЕсли;
	КонецЦикла;

	Возврат ?(ПустаяСтрока(стрЧисло), 0, Число(стрЧисло));

КонецФункции

&НаКлиенте
Функция МодульКарты()
	
	Если гМодульКарты = Неопределено Тогда
		гМодульКарты	= ПолучитьФорму(СтррКонтекст.ПутьКФорме + ""МодульКарты"", , ЭтаФорма, ""АгентПлюсМодульКартыКлиент"");	
	КонецЕсли; 
	Возврат гМодульКарты;
	
КонецФункции

&НаКлиенте
Функция ВернутьЦвет(ИмяЦвета)
	
	Если гстррЦвета = Неопределено Тогда
		гстррЦвета = Новый Структура(""Авто,Ошибка"", Новый Цвет, Новый Цвет(255,0,0));
	КонецЕсли; 
	Возврат гстррЦвета[ИмяЦвета];
	
КонецФункции

#Область СлужебныеПроцедурыИФункции_ХранилищеНастроек

&НаСервере
Процедура ПрочестьНастройкиИзХранилища()
	
	ТекОбъект = РеквизитФормыВЗначение(""Объект"");
	СтррКонтекст.ПоказыватьАдресКоординат = ТекОбъект.ПрочитатьЗначениеНастройки(""ПоказыватьАдресКоординат""); 
	
КонецПроцедуры
	
// СлужебныеПроцедурыИФункции_ХранилищеНастроек
#КонецОбласти 

// СлужебныеПроцедурыИФункции
#КонецОбласти 
",
{4,2,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",11aafdb3-24f5-4e79-b06e-d7029a5a8b30}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"СтррКонтекст",
{1,1,
{"ru","Стрр контекст"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}