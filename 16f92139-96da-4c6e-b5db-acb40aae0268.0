{3,
{46,0,0,0,0,1,0,1,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","Выполнение плана посещений"}
},0,0,1,1,1,0,1,0,
{3,3699f6a3-9a2a-4c82-a775-6ff4824a08ca,"ОбработкаОповещения",3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,3699f6a3-9a2a-4c82-a775-6ff4824a08ca,0,1,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3},4,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаКоманднаяПанель",
{1,1,
{"ru","Командная панель"}
},
{1,1,
{"ru","Группа командная панель"}
},0,1,0,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},7,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ДекорацияИконка",
{1,1,
{"ru","Декорация иконка"}
},
{1,1,
{"ru","Перейти на главную страницу"}
},1,2,1,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3
YXJlAHBhaW50Lm5ldCA0LjAuMTCtCgrAAAAB1UlEQVQ4T5WTyytEcRTHLfwHbCwl
mjw2CitSlsTfYG8xycICGUIoUUhiShYsMJNHnimTGCbDeC3QmLy5HkVm5PV1zrkP
9zIWfvW59/c7v3O+v3vO+d0YABbiqj02op6YIBTilHARVYTtp79lQQ5lxBMBJqlx
Rd4mIoTdHGMOHtQd42s88J894v3jE6XD+z9FmGki1hCgBZ9sOCQ4lhF5/aAtoG3p
xBxopkIEaMI5y2f3rp7j+C6Cov4ASpzbqJs7RmLDCkYC1zhQnpHXtWEW4HRsLMAF
E+Pr+6ec2r92YTimNK2KjUfzYsiwa1SxAFdbDOXjh5jcv0VOh8/i6JgLwrVzg4zW
NYudcLEAt0oMfd5zhO4jKHYGMLhxKekU9m1hdPsGR7dhFPT4Mb6n4FAJI7dT0jm1
COgpcDA1QMbQ5pU6oTHgu9RmkProAr9SyG73oXLqSE7LbFtH7ayaQnqrF40LIYzR
PLXFyzGSglFEJxXv5OFFOqDb+E5wcPAujPxuv2HXkCJyG7klUbuQHL0Lb4TaRrKz
iJ037O4DuHcVZFEKvNapngnKXUhTP1tHvUj80ET4epodosEn83ue+L7KmkAsUUFI
On/Ae+wjwRYBHdr8x++MmC+4IKQYoZgmOgAAAABJRU5ErkJggg==}
},0,""},1,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{1,9874537f-454c-40ae-83e9-3b9cefbc6d08,"КомандаПоказатьГлавнуюФорму",1,0,9874537f-454c-40ae-83e9-3b9cefbc6d08,0,1}
},1,
{21,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияИконкаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Декорация иконка"}
},0},0,1,
{10,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияИконкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,1},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},2,"ПоказатьГлавнуюФорму",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказатьГлавнуюФормуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,2,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияСмТакже",
{1,1,
{"ru","cм. также:"}
},
{1,1,
{"ru","Смотрите также"}
},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияСмТакжеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","cм. также:"}
},0},0,1,
{10,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияСмТакжеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},2,"ПоказатьТорговыхАгентов",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказатьТорговыхАгентовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,2,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},2,"ПоказатьСпискиТорговыхТочек",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказатьСпискиТорговыхТочекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,2,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{15,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ДекорацияКоманднаяПанель",
{1,0},
{1,0},0,0,1,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,0,
{0},"",-1,-1,1,0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{21,
{16,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияКоманднаяПанельКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,0},0},0,1,
{10,
{17,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияКоманднаяПанельРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{53,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"Справка",
{1,0},1,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},1,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{0,b7c81c62-d6ad-4eae-9cea-0e203182db67},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{54,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СправкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКоманднаяПанельРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{41,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ГруппаКнопки",
{1,1,
{"ru","Группа кнопки"}
},
{1,1,
{"ru","Группа кнопки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0,
{0}
},4,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{43,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"СформироватьОтчет",
{1,0},1,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{44,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СформироватьОтчетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{45,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"СкрытьПараметры",
{1,0},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{46,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СкрытьПараметрыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{47,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"Печать",
{1,0},1,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{48,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПечатьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{49,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ПоказатьНаКарте",
{1,0},1,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{50,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказатьНаКартеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{42,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКнопкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{29,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаПараметрыОтчета",
{1,1,
{"ru","Группа параметры отчета"}
},
{1,1,
{"ru","Группа параметры отчета"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{31,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаПараметрыСлева",
{1,1,
{"ru","Группа параметры слева"}
},
{1,1,
{"ru","Группа параметры слева"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{23,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ПериодОтчета",1,0,
{1,0},
{1,0},
{1,
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ПериодОтчетаПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{24,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПериодОтчетаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{25,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПериодОтчетаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{20,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Пользователь",1,0,
{1,1,
{"ru","Агент"}
},
{1,0},
{1,
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,0,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{2,1960479b-4d89-4eba-8b39-0aa802020558,"АгентНачалоВыбора",ac5a9c5a-5f1d-4fc5-b88c-a187038c16d1,"АгентОткрытие",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1,ac5a9c5a-5f1d-4fc5-b88c-a187038c16d1,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},0,
{3,0,0},0,
{1,0},2,3,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПользовательКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{22,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПользовательРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{32,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПараметрыСлеваРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{33,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаПараметрыСправа",
{1,1,
{"ru","Группа параметры справа"}
},
{1,1,
{"ru","Группа параметры справа"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{35,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ВидыДокументов",1,0,
{1,0},
{1,1,
{"ru","Формировать отчет по выбранным видам документов"}
},
{1,
{6}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,0,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"ВидыДокументовНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{36,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВидыДокументовКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{37,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВидыДокументовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ТолькоПроведенныеДокументы",4,0,
{1,0},
{1,0},
{1,
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТолькоПроведенныеДокументыПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{27,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТолькоПроведенныеДокументыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{28,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТолькоПроведенныеДокументыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{34,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПараметрыСправаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{30,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПараметрыОтчетаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},6,"ТДОтчет",0,0,
{1,0},
{1,0},
{1,
{7}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{12,50,10,1,1,0,0,1,1,0,0,1,0,0,1,
{3,4,
{0}
},1,1,
{1,2988b2a5-c887-4928-94ae-5d0c9c31e999,"ТДОтчетОбработкаРасшифровки",1,0,2988b2a5-c887-4928-94ae-5d0c9c31e999,0,1},0,1,0,0,1,0,0,0,0,1,1,1},
{0,1,0},1,
{21,
{39,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТДОтчетКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{51,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТДОтчетКонтекстноеМенюПоказатьНаКарте",
{1,0},1,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{52,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТДОтчетКонтекстноеМенюПоказатьНаКартеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{40,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТДОтчетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0},"
#Область СовместимостьСПлатформой_8_3_5

// Подставляет параметры в строку. Максимально возможное число параметров - 5.
// Параметры в строке задаются как %<номер параметра>. Нумерация параметров начинается с единицы.
//
// Параметры:
//  СтрокаПодстановки  - Строка - шаблон строки с параметрами (вхождениями вида ""%ИмяПараметра"");
//  Параметр<n>        - Строка - подставляемый параметр.
//
// Возвращаемое значение:
//  Строка   - текстовая строка с подставленными параметрами.
//
&НаКлиентеНаСервереБезКонтекста
Функция СтрШаблон_(СтрокаПодстановки,
	Параметр1, Параметр2 = Неопределено, Параметр3 = Неопределено, Параметр4 = Неопределено, Параметр5 = Неопределено)
	
	Результат = СтрЗаменить(СтрокаПодстановки, ""%1"", Параметр1);
	Результат = СтрЗаменить(Результат, ""%2"", Параметр2);
	Результат = СтрЗаменить(Результат, ""%3"", Параметр3);
	Результат = СтрЗаменить(Результат, ""%4"", Параметр4);
	Результат = СтрЗаменить(Результат, ""%5"", Параметр5);
	
	Возврат Результат;
	
КонецФункции
	
// Разбивает строку на несколько строк по разделителю. Разделитель может иметь любую длину.
//
// Параметры:
//  Строка                 - Строка - текст с разделителями;
//  Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
//  ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
//    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
//     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
//       включаются в результат.
//     Е если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
//       случае разделителя-пробела результатом функции будет массив, содержащий одно значение """" (пустая строка), а
//       при других разделителях результатом функции будет пустой массив.
//  СокращатьНепечатаемыеСимволы - Булево - сокращать непечатаемые символы по краям каждой из найденных подстрок.
//
// Возвращаемое значение:
//  Массив - массив строк.
&НаКлиентеНаСервереБезКонтекста 
Функция СтрРазделить_(Знач Строка, Знач Разделитель = "","", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь)
	
	Результат = Новый Массив;
	
	// Для обеспечения обратной совместимости.
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = "" "", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = "" "" Тогда
				Результат.Добавить("""");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Строка));
		Иначе
			Результат.Добавить(Строка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

///  Объединяет строки из массива в строку с разделителями.
//
// Параметры:
//  Массив      - Массив - массив строк которые необходимо объединить в одну строку;
//  Разделитель - Строка - любой набор символов, который будет использован в качестве разделителя.
//
// Возвращаемое значение:
//  Строка - строка с разделителями.
// 
&НаКлиентеНаСервереБезКонтекста 
Функция СтрСоединить_(Массив, Разделитель = "","", СокращатьНепечатаемыеСимволы = Ложь)

	Результат = """";
	ТекРазделитель = """";
	
	Для Индекс = 0 По Массив.ВГраница() Цикл
		
		Подстрока = Массив[Индекс];
		
		Если СокращатьНепечатаемыеСимволы Тогда
			Подстрока = СокрЛП(Подстрока);
		КонецЕсли;
		
		Если ТипЗнч(Подстрока) <> Тип(""Строка"") Тогда
			Подстрока = Строка(Подстрока);
		КонецЕсли;
		
		Результат = Результат + ТекРазделитель + Подстрока;
		
		Если Индекс = 0 Тогда
			ТекРазделитель = Разделитель;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

// СовместимостьСПлатформой_8_3_5
#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СтррКонтекст = Новый Структура(""СписокВсеВидыДокументов,ОбластьДней"");
	
	СтррКонтекст.Вставить(""СсылкаСписокТТ"", Неопределено);  // идентификатор списка ТТ, закрепленного за выбранным агентом
	СтррКонтекст.Вставить(""НаименованиеСписокТТ"", """"); 		// наименование списка ТТ, закрепленного за выбранным агентом
	СтррКонтекст.Вставить(""ИспользуетсяДляПланированияСписокТТ"", Ложь); // признак использования в списке ТТ детализации до графика или плана посещений

	ТекОбъект = РеквизитФормыВЗначение(""Объект"");
	ТекОбъект.ИнициализироватьКонтекстФормы(СтррКонтекст, Параметры);
	
	СтррКонтекст.Вставить(""НомерВнеПлана"", ТекОбъект.ПланПосещенийНомерПунктаВнеПлана()); // признак номера ТТ вне списка ТТ	
	
	СтррКонтекст.СписокВсеВидыДокументов = ТекОбъект.ПолучитьВсеВидыОбъектовДля1C(""Документ"");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ГруппаКоманднаяПанель.ЦветФона = СтррКонтекст.Цвета.ФонРаздела;
	
	// { Корректируем восстановленные из настроек формы значения

	Если ВидыДокументов.Количество() = 0 Тогда // если список пустой, заполняем его всеми видами документов
		ВидыДокументов = СтррКонтекст.СписокВсеВидыДокументов.Скопировать(); 	
	КонецЕсли; 
	
	Если ПериодОтчета.ДатаНачала = '00010101' Или ПериодОтчета.ДатаОкончания = '00010101' Тогда
		ПериодОтчета.ДатаНачала = НачалоМесяца(ТекущаяДата());
		ПериодОтчета.ДатаОкончания = ТекущаяДата();
	КонецЕсли; 
	
	// }
	
	ОтчетВыключитьАктуальность();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = ""АПНастройкиСброшены"" Тогда
		
		ЭтаФорма.Модифицированность = Ложь;
		Закрыть();
		
	ИначеЕсли ИмяСобытия = ""АППроверкаУникальностиЗапускаОбработкиОбмена"" Тогда
		
		Если Параметр <> СтррКонтекст.ВХОбщиеПараметры Тогда // второй экземпляр обработки справшивает - уже открыта обработка или нет
			Оповестить(""АПЗакрытьОбработкуОбменДанными"", Параметр); // шлем событие закрытия обработки с конкретным ключем сеанса
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

// ОбработчикиСобытийФормы
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСкрытьОтбор(Команда)
	
	Элементы.СкрытьПараметры.Пометка = Не Элементы.СкрытьПараметры.Пометка;
	ФормаОбновитьВидимостьОтборов();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСформироватьОтчет(Команда)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(ЭтаФорма.Элементы.ТДОтчет, ""ФормированиеОтчета"");	
	ПодключитьОбработчикОжидания(""ОтчетСформироватьКлиент"", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСправка(Команда)

	ОткрытьФормуОбработки(""МодульСправки"").ВнешнийВызовОткрытьСправку(ЭтаФорма.ИмяФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПечать(Команда)
	
	Если ТДОтчет.ВысотаТаблицы = 0 Тогда
		ПоказатьПредупреждение(Неопределено, НСтр(""ru = 'Отчет не сформирован, сначала сформируйте отчет.'""));
		Возврат;
	КонецЕсли; 
	
	ТДОтчет.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТДОтчет.ПолеСлева	= 1;
    ТДОтчет.ПолеСправа	= 1;
	ТДОтчет.ПолеСверху	= 4;
	ТДОтчет.ПолеСнизу	= 1;
	
	ТДОтчет.ВерхнийКолонтитул.Выводить			 = Истина;
    ТДОтчет.РазмерКолонтитулаСверху				 = 4;
    ТДОтчет.ВерхнийКолонтитул.ВертикальноеПоложение = ВертикальноеПоложение.Верх;
    ТДОтчет.ВерхнийКолонтитул.НачальнаяСтраница	 = 1;    
    ТДОтчет.ВерхнийКолонтитул.Шрифт				 = Новый Шрифт(""Arial"", 8,,Истина);
	ТДОтчет.ВерхнийКолонтитул.ТекстСправа		 = ""Стр.[&НомерСтраницы] из [&СтраницВсего]"";
	
	ТДОтчет.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьНаКарте(Команда)
	
	Если ТДОтчет.ВысотаТаблицы = 0 Тогда
		ПоказатьПредупреждение(Неопределено, НСтр(""ru = 'Отчет не сформирован, сначала сформируйте отчет.'""));
		Возврат;
	КонецЕсли; 
	
	Расшифровка = Элементы.ТДОтчет.ТекущаяОбласть.Расшифровка;
		
	ТекОбласть = Элементы.ТДОтчет.ТекущаяОбласть;
	стррОбласть = СтррКонтекст.ОбластьДней;
	Если  ТекОбласть.Верх >= стррОбласть.Верх И ТекОбласть.Низ <= стррОбласть.Низ 
		И ТекОбласть.Лево >= стррОбласть.Лево И ТекОбласть.Право <= стррОбласть.Право
	Тогда
	    Дата = ПериодОтчета.ДатаНачала + (ТекОбласть.Лево - стррОбласть.Лево - 1) * 86400;
		ПоказатьМаршрутНаДату(Дата);
	ИначеЕсли Расшифровка = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, НСтр(""ru = 'Для просмотра данных на карте выделите партнера или одну из ячеек дня.'""));
		Возврат;
	КонецЕсли; 
	
	Если ТипЗнч(Расшифровка) = Тип(""СправочникСсылка.Партнеры"") Тогда
		ПоказатьПартнеровПоРасшифровке();
	ИначеЕсли ТипЗнч(Расшифровка) = Тип(""Структура"") Тогда		
		//ПоказатьМаршрутПоРасшифровке();
	КонецЕсли; 

КонецПроцедуры

#Область ОбработчикиКомандФормы_НавигацияПоФормам

&НаКлиенте
Процедура КомандаПоказатьСпискиТорговыхТочек(Команда)
	
	ОткрытьФормуОбработки(""СпискиТорговыхТочек"");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьТорговыхАгентов(Команда)
	
	ОткрытьФормуОбработки(""НастройкиАгентов"");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьГлавнуюФорму(Команда)
	
	ОткрытьФормуОбработки(""ГлавнаяФорма"");
	
КонецПроцедуры

// ОбработчикиКомандФормы_НавигацияПоФормам
#КонецОбласти

// ОбработчикиКомандФормы
#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВидыДокументовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокДляПометки = СтррКонтекст.СписокВсеВидыДокументов.Скопировать(); 
	
	Для Каждого ЭлементСписка Из СписокДляПометки Цикл 
		ЭлементСписка.Пометка = (Неопределено <> ВидыДокументов.НайтиПоЗначению(ЭлементСписка.Значение)); 
	КонецЦикла;
	
	Оповещение = Новый ОписаниеОповещения(""ОповещениеОтметкиСпискаВидовДокументов"", ЭтотОбъект);
	СписокДляПометки.ПоказатьОтметкуЭлементов(Оповещение, НСтр(""ru = 'Выберите документы, включаемые в отчет'""));
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОтметкиСпискаВидовДокументов(Список, ДополнительныеПараметры) Экспорт
	
	Если Список = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокПолучатель = ВидыДокументов;
	СписокПолучатель.Очистить();
	
	Для Каждого Элемент из Список Цикл
		Если Элемент.Пометка Тогда					
			СписокПолучатель.Добавить(Элемент.Значение, Элемент.Представление);
		КонецЕсли;
	КонецЦикла;
	ОтчетВыключитьАктуальность();
	
КонецПроцедуры

&НаКлиенте
Процедура АгентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	стррПараметры = Новый Структура(""ПараметрыВыбора"", Новый Структура(""Пользователь"", Агент));
	Оповещение = Новый ОписаниеОповещения(""ПользовательВыборЗавершение"", ЭтотОбъект);
	ОткрытьФормуОбработки(""ВыборАгента"", стррПараметры, ЭтаФорма.КлючУникальности, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип(""СправочникСсылка.Пользователи"") Тогда
		Агент = Результат;
		ОтчетВыключитьАктуальность();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АгентОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Агент) Тогда
		ОткрытьФормуОбработки(""НастройкиАгентов"");
		Оповестить(""АПНастройкиАгентов_Оповещение"", Новый Структура(""Пользователь"", Агент));
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаПриИзменении(Элемент)
	
	Если ПериодОтчета.ДатаНачала > ПериодОтчета.ДатаОкончания Тогда
		Пром = ПериодОтчета.ДатаОкончания;
		ПериодОтчета.ДатаОкончания = ПериодОтчета.ДатаНачала;
		ПериодОтчета.ДатаНачала = Пром;
	КонецЕсли; 
	ОтчетВыключитьАктуальность();
	
КонецПроцедуры

&НаКлиенте
Процедура ТДОтчетОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если Расшифровка = ""СписокТТ"" Тогда // нужно показать список торговых точек
		СтандартнаяОбработка = Ложь;
		СтррПараметры = Новый Структура(""ID"", СтррКонтекст.СсылкаСписокТТ);
		ОткрытьФормуОбработки(""СписокТорговыхТочек"", СтррПараметры, СтррПараметры.ID);
	ИначеЕсли ТипЗнч(Расшифровка) = Тип(""Структура"") Тогда // нужно показать документы за данный день
		СтандартнаяОбработка = Ложь;
		Список = ПолучитьСписокДокументовДляРасшифовки(Расшифровка);
		ОбработкаВыбора = Новый ОписаниеОповещения(""ВыборДокументаРасшифровкиИзСписка"", ЭтотОбъект, Элемент);
		ПоказатьВыборИзСписка(ОбработкаВыбора, Список, Элемент); 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборДокументаРасшифровкиИзСписка(Результат, Элемент) Экспорт
	
	Если Результат <> Неопределено Тогда
		ПоказатьЗначение(Неопределено, Результат.Значение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТолькоПроведенныеДокументыПриИзменении(Элемент)
	ОтчетВыключитьАктуальность();
КонецПроцедуры

// ОбработчикиСобытийЭлементовФормы
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункции_Прочие

&НаКлиенте
Функция ОткрытьФормуОбработки(ИмяФормы, стррПараметры = Неопределено, Уникальность = Неопределено, Оповещение = Неопределено)
	
	Если стррПараметры = Неопределено Тогда
		стррПараметры = Новый Структура;
	КонецЕсли; 
	стррПараметры.Вставить(""ВХОбщиеПараметры"", СтррКонтекст.ВХОбщиеПараметры);
	Возврат ОткрытьФорму(СтррКонтекст.ПутьКФорме + ИмяФормы, стррПараметры, ЭтаФорма, Уникальность,,, Оповещение);
	
КонецФункции

// СлужебныеПроцедурыИФункции_Прочие
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_РаботаСФормой

&НаКлиенте
Процедура ФормаОбновитьВидимостьОтборов()
	
	ВидимостьОтборов = Не Элементы.СкрытьПараметры.Пометка;
	Элементы.ГруппаПараметрыОтчета.Видимость = Не Элементы.СкрытьПараметры.Пометка;
	
КонецПроцедуры

// СлужебныеПроцедурыИФункции_РаботаСФормой
#КонецОбласти

#Область СлужебныеПроцедурыИФункции_ФормированиеОтчета

// Функция возвращает структуру с основными свойствами списка ТТ закрепленного за агентом - наименование, ссылку и описание ошибки.
&НаСервере
Функция ПрочитатьИПроверитьСписокТорговыхТочекАгента(Агент)

	Возврат РеквизитФормыВЗначение(""Объект"").ПрочитатьИПроверитьСписокТорговыхТочекАгента(Агент);

КонецФункции

&НаКлиенте
Процедура ОтчетВыключитьАктуальность()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(ЭтаФорма.Элементы.ТДОтчет, ""НеАктуальность"");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетСформироватьКлиент()
	
	ЕстьОшибки = Ложь;
	ОчиститьСообщения();
	
	Если ПериодОтчета.ДатаНачала = '00010101' Или ПериодОтчета.ДатаОкончания = '00010101' Тогда
		Текст = НСтр(""ru = 'Укажите период отчета.'"");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, Неопределено, ""ПериодОтчета"");
		ЕстьОшибки = Истина;
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(Агент) Тогда
		Текст = НСтр(""ru = 'Укажите торгового агента.'"");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, Неопределено, ""Пользователь"");
		ЕстьОшибки = Истина;
	Иначе
		стррСвойстваСпискаТТ = ПрочитатьИПроверитьСписокТорговыхТочекАгента(Агент);
		Если стррСвойстваСпискаТТ.КодОшибки <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(стррСвойстваСпискаТТ.ТекстОшибки, Неопределено, ""Пользователь"");
			ЕстьОшибки = Истина;
		Иначе
			ЗаполнитьЗначенияСвойств(СтррКонтекст, стррСвойстваСпискаТТ, ""СсылкаСписокТТ,НаименованиеСписокТТ,ИспользуетсяДляПланированияСписокТТ"");
		КонецЕсли; 
	КонецЕсли; 
	
	Если ВидыДокументов.Количество() = 0 Тогда
		Текст = НСтр(""ru = 'Укажите виды документов для отбора в отчете.'"");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, Неопределено, ""ВидыДокументов"");
		ЕстьОшибки = Истина;
	КонецЕсли; 
	
	Если ЕстьОшибки Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(ЭтаФорма.Элементы.ТДОтчет, ""НеАктуальность"");
		ЭтаФорма.Элементы.ТДОтчет.ОтображениеСостояния.Текст = НСтр(""ru = 'Ошибка в параметрах отчета.'"");
		ЭтаФорма.Элементы.ТДОтчет.Доступность = Ложь;
		Возврат;
	КонецЕсли; 
	
	// Формирование отчета. В реквизите СтррКонтекст.СсылкаСписокТТ указан идентификатор проверенного списка торговых точек агента.
	ОтчетСформироватьСервер();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(ЭтаФорма.Элементы.ТДОтчет, ""НеИспользовать"");
	Элементы.ТДОтчет.Доступность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОтчетСформироватьСервер()

	стррПараметры = Новый Структура;
	стррПараметры.Вставить(""Агент"", Агент);
	стррПараметры.Вставить(""Период"", ПериодОтчета);
	стррПараметры.Вставить(""СсылкаСписокТТ"", СтррКонтекст.СсылкаСписокТТ);
	стррПараметры.Вставить(""ТолькоПроведенныеДокументы"", ТолькоПроведенныеДокументы);
	стррПараметры.Вставить(""списокВидыДокументов"", ВидыДокументов);
	
	ТекОбъект = РеквизитФормыВЗначение(""Объект"");	
	ТЗ = ТекОбъект.ПолучитьПланФактПосещений(стррПараметры);
	
	ДетализацияПланИлиГрафик = СтррКонтекст.ИспользуетсяДляПланированияСписокТТ;
	
	//////////////////////// 
	// Формирование печатной формы
	
	Макет = ТекОбъект.ПолучитьМакетОбработки(""ОтчетПланПосещений"");
	
	мЦветаФона = Новый Массив();
	мЦветаФона.Добавить(Новый Цвет(255,255,255)); // белый - плановая ТТ
	мЦветаФона.Добавить(Новый Цвет(240,240,240)); // серый - плановая ТТ
	мЦветаФона.Добавить(Новый Цвет(253,241,165)); // светло-желтый - внеплановая ТТ
	мЦветаФона.Добавить(Новый Цвет(244,230,170)); // темно-желтый  - внеплановая ТТ
	//мЦветаФона.Добавить(Новый Цвет(204, 255, 204));	// светло-зеленый - выделенный день
	//мЦветаФона.Добавить(Новый Цвет(160, 255, 160));	// темно-зеленый  - выделенный день
	
	стррОбластьДней = Новый Структура(""Лево,Верх,Право,Низ"");
	
#Область ВыводШапкиОтчета
	
	Таб = ТДОтчет;
	
	Таб.Очистить();
	
	Область = Макет.ПолучитьОбласть(""Заголовок|Номер"");
	ПечПараметры = Область.Параметры;	
	ПечПараметры.ПечПериод = Строка(ПериодОтчета);
	ПечПараметры.ПечАгент  = Строка(Агент);
	Таб.Вывести(Область);	
	
	Таб.НачатьГруппуСтрок(""Заголовок"", Истина);
	
	Область = Макет.ПолучитьОбласть(""ЗаголовокДетали|Номер"");
	
	ПечПараметры = Область.Параметры;
	ПечПараметры.ПечВидыДокументов 		 = Строка(ВидыДокументов);
	ПечПараметры.ПечПроведенныеДокументы = ?(ТолькоПроведенныеДокументы, НСтр(""ru = 'только проведенные'""), НСтр(""ru = 'проведенные и не проведенные'""));
	ПечПараметры.ПечСписокТТ 			 = СтррКонтекст.НаименованиеСписокТТ + ?(ДетализацияПланИлиГрафик, """", "" "" + НСтр(""ru = '(без детализации до графика или плана)'""));
	ПечПараметры.СписокТТ 			 	 = ""СписокТТ"";
	
	Таб.Вывести(Область);
	
	Таб.Присоединить(Макет.ПолучитьОбласть(""ЗаголовокДетали|Клиент""));
	Таб.Присоединить(Макет.ПолучитьОбласть(""ЗаголовокДетали|Адрес""));
	
	ВсегоДней = стррПараметры.ВсегоДней;
	
	стррОбластьДней.Лево  = Таб.ШиринаТаблицы;
	стррОбластьДней.Право = стррОбластьДней.Лево + ВсегоДней;
	
	Область = Макет.ПолучитьОбласть(""ЗаголовокДетали|День"");
	Для НомерДня = 1 По ВсегоДней Цикл
		Таб.Присоединить(Область);
	КонецЦикла;
	Таб.Присоединить(Макет.ПолучитьОбласть(""ЗаголовокДетали|Всего""));
	
	Таб.ЗакончитьГруппуСтрок();
	
	ОбластьШапкиНомер = Макет.ПолучитьОбласть(""Шапка|Номер"");	
	Таб.Вывести(ОбластьШапкиНомер);
	
	ОбластьШапкиКлиент = Макет.ПолучитьОбласть(""Шапка|Клиент"");	
	Таб.Присоединить(ОбластьШапкиКлиент);
	
	ОбластьШапкиАдрес = Макет.ПолучитьОбласть(""Шапка|Адрес"");	
	Таб.Присоединить(ОбластьШапкиАдрес);
	
	мДниНедели = СтрРазделить_(НСтр(""ru='пн,вт,ср,чт,пт,СБ,ВС'""), "","");
	ТекДата = ПериодОтчета.ДатаНачала;
	
	ФорматДаты = ?(Месяц(ПериодОтчета.ДатаНачала) <> Месяц(ПериодОтчета.ДатаОкончания) 
					Или Год(ПериодОтчета.ДатаНачала) <> Год(ПериодОтчета.ДатаОкончания),
					""ДФ=""""дд.ММ"""""",	""ДФ=""""дд"""""");

	Для НомерДня = 1 По ВсегоДней Цикл
		
		НомерДняНедели = ДеньНедели(ТекДата);
		ДопОбластьШапки = Макет.ПолучитьОбласть(""Шапка|"" + ?(ВыделитьДень = ТекДата, ""ВыделитьДень"", ИмяСекцииДняНедели(НомерДняНедели)));
		ДопОбластьШапки.Параметры.ДеньНед = мДниНедели[НомерДняНедели-1];
		ДопОбластьШапки.Параметры.ДеньМес = Формат(ТекДата, ФорматДаты);
		Таб.Присоединить(ДопОбластьШапки);
		ТекДата = ТекДата + 86400;
		
	КонецЦикла;
	
	ВсегоОбластьШапки = Макет.ПолучитьОбласть(""Шапка|Всего"");
	Таб.Присоединить(ВсегоОбластьШапки);
	
// ВыводШапкиОтчета
#КонецОбласти 

#Область ВыводТЧОтчета

	стррОбластьДней.Верх = Таб.ВысотаТаблицы;

	ЦветКрасный = Новый Цвет(255, 0, 0);
	ЦветСиний   = Новый Цвет(0, 0, 255);

	НомерВнеПлана = стррКонтекст.НомерВнеПлана;
	
	Номер = 0; // Номер строки в таблицы в печатной форме
	
	тзИтогиДней = Неопределено;
	ОбновитьИтогиДней(ВсегоДней, тзИтогиДней);
	
	стррИтогСтроки = Новый Структура(""План,Факт,ВП"");
	стррДельта     = Новый Структура(""План,Факт,ВП"");
	
	Для Каждого СтрокаТ Из ТЗ Цикл
		
		#Область ВыводГлавныхКолонок
		/////////////////////////////////////////////////////////////////////////////////

		Номер = Номер + 1; // Номер строки таблицы в печатной форме		
		
		ЦветФона = мЦветаФона[?(СтрокаТ.НомерВПлане = НомерВнеПлана, 2, 0) + Номер % 2];
		ОбластьСтр = Макет.ПолучитьОбласть(""Строка|Номер"");
		ОбластьСтр.Параметры.Номер = Номер; 
		ОбластьСтр.ТекущаяОбласть.ЦветФона = ЦветФона;
		Таб.Вывести(ОбластьСтр);
				
		ОбластьСтр = Макет.ПолучитьОбласть(""Строка|Клиент"");		
		ТекПартнер = СтрокаТ.Партнер;
		ОбластьСтр.Параметры.ПечКлиент = ТекПартнер;
		ОбластьСтр.Параметры.ПечКлиентРас  = ТекПартнер; // клиент для расшифровки
		ОбластьСтр.ТекущаяОбласть.ЦветФона = ЦветФона;
		Таб.Присоединить(ОбластьСтр);
		
		ОбластьСтр = Макет.ПолучитьОбласть(""Строка|Адрес"");
		ОбластьСтр.Параметры.ПечАдрес = СтрокаТ.Адрес;
		ОбластьСтр.ТекущаяОбласть.ЦветФона = ЦветФона;
		Таб.Присоединить(ОбластьСтр);
		
		// ВыводГлавныхКолонок
		#КонецОбласти 

		#Область ВыводКолонокДней
		/////////////////////////////////////////////////////////////////////////////////
		
		стррИтогСтроки.План = 0; стррИтогСтроки.Факт = 0; стррИтогСтроки.ВП = 0;
		
		ТекДата = ПериодОтчета.ДатаНачала;	
		Для НомерДня = 1 По ВсегоДней Цикл
			
			НомерДняНедели = ДеньНедели(ТекДата);
			ОбластьСтр = Макет.ПолучитьОбласть(""Строка|"" + ИмяСекцииДняНедели(НомерДняНедели));
			ОбластьСтр.ТекущаяОбласть.ЦветФона = ЦветФона;
			План = СтрокаТ[""П"" + НомерДня]; // число - порядок посещения ТТ (если включен порядок)
			Факт = ЗначениеЗаполнено(СтрокаТ[""Д"" + НомерДня]); // строка времени - факт создания документа для данной ТТ данным агентом
			
			стррДельта.План = 0; стррДельта.Факт = 0; стррДельта.ВП = 0;
			
			Если План <> 0 Тогда
				стррДельта.План = 1;
				Если Факт Тогда
					ОбластьСтр.Параметры.ПечРабота = ""n""; // выполнено посещение по плану
					ОбластьСтр.Параметры.Док = Новый Структура(""День,Партнер"", ТекДата, ТекПартнер); // расшифровка для отображения документов
					стррДельта.Факт = 1;
				Иначе
				    ОбластьСтр.Параметры.ПечРабота = ""o""; // не выполнено посещение по плану
					ОбластьСтр.ТекущаяОбласть.ЦветТекста = ЦветКрасный; 
				КонецЕсли; 
			ИначеЕсли Факт Тогда 
				Если ДетализацияПланИлиГрафик Тогда
				    ОбластьСтр.Параметры.ПечРабота = ""x""; // посещение вне плана
					ОбластьСтр.ТекущаяОбласть.ЦветТекста = ЦветСиний; 
					ОбластьСтр.Параметры.Док = Новый Структура(""День,Партнер"", ТекДата, ТекПартнер); // расшифровка для отображения документов
					стррДельта.ВП = 1;
				Иначе // список ТТ без детализации до графика или плана - все факты считаем выполненными по плану
					Если СтрокаТ.НомерВПлане < НомерВнеПлана Тогда
						ОбластьСтр.Параметры.ПечРабота = ""n""; // выполнено посещение по плану
						ОбластьСтр.Параметры.Док = Новый Структура(""День,Партнер"", ТекДата, ТекПартнер); // расшифровка для отображения документов
						стррДельта.Факт = 1;
					Иначе
					    ОбластьСтр.Параметры.ПечРабота = ""x""; // посещение вне плана
						ОбластьСтр.ТекущаяОбласть.ЦветТекста = ЦветСиний; 
						ОбластьСтр.Параметры.Док = Новый Структура(""День,Партнер"", ТекДата, ТекПартнер); // расшифровка для отображения документов
						стррДельта.ВП = 1;
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли; 
			//Если ВыделитьДень = ТекДата Тогда
			//	ОбластьСтр.ТекущаяОбласть.ЦветФона = мЦветаФона[4 + Номер % 2];
			//КонецЕсли; 
			Таб.Присоединить(ОбластьСтр);
			ОбновитьИтогиДней(НомерДня, тзИтогиДней, стррИтогСтроки, стррДельта);
			ТекДата = ТекДата + 86400;
			
		КонецЦикла; // Для НомерДня = 1 По ВсегоДней Цикл
		
		стррОбластьДней.Низ = Таб.ВысотаТаблицы;
		
		// ВыводКолонокДней
		#КонецОбласти

		#Область ВыводИтогаСтрок
		/////////////////////////////////////////////////////////////////////////////////
		
		ОбластьСтр = Макет.ПолучитьОбласть(""Строка|Всего"");
		ЗаполнитьПараметрыОбласти(ОбластьСтр.Параметры, стррИтогСтроки);
		ОбластьСтр.Области.ОблВсего.ЦветФона = ЦветФона;
		
		Таб.Присоединить(ОбластьСтр);
		
		// ВыводИтогаСтрок		
		#КонецОбласти 
		
	КонецЦикла; // Для Каждого СтрокаТ Из ТЗ Цикл

	#Область ВыводПодвалаСИтогами
	/////////////////////////////////////////////////////////////////////////////////

	Таб.Вывести(Макет.ПолучитьОбласть(""Подвал|Номер""));
	Таб.Присоединить(Макет.ПолучитьОбласть(""Подвал|Клиент""));	
	Таб.Присоединить(Макет.ПолучитьОбласть(""Подвал|Адрес""));
	
	ТекДата = ПериодОтчета.ДатаНачала;	
	Для НомерДня = 1 По ВсегоДней Цикл
		ОбластьСтр = Макет.ПолучитьОбласть(""Подвал|"" + ИмяСекцииДняНедели(НомерДняНедели)); //?(ВыделитьДень = ТекДата, ""ВыделитьДень"", ИмяСекцииДняНедели(НомерДняНедели)));		
		ЗаполнитьПараметрыОбласти(ОбластьСтр.Параметры, тзИтогиДней[НомерДня]);
		Таб.Присоединить(ОбластьСтр);
		ТекДата = ТекДата + 86400;
	КонецЦикла;
	
	ВсегоОбластьИтогов = Макет.ПолучитьОбласть(""Подвал|Всего"");
	ЗаполнитьПараметрыОбласти(ВсегоОбластьИтогов.Параметры, ПолучитьОбщийИтог(тзИтогиДней));
	Таб.Присоединить(ВсегоОбластьИтогов);

	// ВыводПодвалаСИтогами
	#КонецОбласти 
	
// ВыводТЧОтчета
#КонецОбласти 

	Таб.ФиксацияСверху = 6;	
	Таб.ФиксацияСлева  = 2;
	
	СтррКонтекст.ОбластьДней = стррОбластьДней;

КонецПроцедуры // ОтчетСформироватьСервер()

// Функция обновляет итоги отчета в параметрах ТЗ (итоги по дням) и стррИтогиСтроки (итог строки).
&НаСервере
Процедура ОбновитьИтогиДней(НомерДня, ТЗ, стррИтогиСтроки = Неопределено, стррДельта  = Неопределено)
	
	Если ТЗ = Неопределено Тогда // в этом случае в параметере НомерДня передается максимальный номер дня - инициализируем таблицу итогов
		
		ТипЧисло  = Новый ОписаниеТипов(""Число"", Новый КвалификаторыЧисла(5, 0));
		ТЗ = Новый ТаблицаЗначений;
		ТЗ.Колонки.Добавить(""План"", ТипЧисло);
		ТЗ.Колонки.Добавить(""Факт"", ТипЧисло);
		ТЗ.Колонки.Добавить(""ВП"", ТипЧисло);
		Для Индекс = 0 По НомерДня Цикл
			ТЗ.Добавить();
		КонецЦикла; 
		
	Иначе
		
		стррИтогиСтроки.План = стррИтогиСтроки.План + стррДельта.План;
		стррИтогиСтроки.Факт = стррИтогиСтроки.Факт + стррДельта.Факт;
		стррИтогиСтроки.ВП   = стррИтогиСтроки.ВП   + стррДельта.ВП;
		
		СтрокаТ = ТЗ[НомерДня];
		СтрокаТ.План = СтрокаТ.План + стррДельта.План;
		СтрокаТ.Факт = СтрокаТ.Факт + стррДельта.Факт;
		СтрокаТ.ВП   = СтрокаТ.ВП   + стррДельта.ВП;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Процедура ЗаполнитьПараметрыОбласти(ПапаметрыОбласти, стррЗначения)
	
	ЗаполнитьЗначенияСвойств(ПапаметрыОбласти, стррЗначения);
	ПапаметрыОбласти.Выполнение = ?(стррЗначения.План = 0, """", Окр(стррЗначения.Факт * 100 / стррЗначения.План, 2));
	
КонецПроцедуры

// Функция возвращает общий итог для отчета (выводится в правом-нижнем углу отчета).
// Параметры:
// 		ТЗ - ТаблицаЗначений - таблица итогов по дням, подготовленная процедурой ОбновитьИтогиДней().
// 		
// Возвращаемое значение:
//   Структура   - структура с итоговыми значениями плана
//
&НаСервере 
Функция ПолучитьОбщийИтог(ТЗ)
	
	стррРезультат = Новый Структура;
	Для Каждого Колонка Из ТЗ.Колонки Цикл
		стррРезультат.Вставить(Колонка.Имя, ТЗ.Итог(Колонка.Имя));
	КонецЦикла; 
	
	Возврат стррРезультат;
	
КонецФункции

&НаСервере 
Функция ПолучитьСписокДокументовДляРасшифовки(стррРасшифровка)
	
	стррПараметры = Новый Структура;
	стррПараметры.Вставить(""Агент"", Агент);
	стррПараметры.Вставить(""Дата"", стррРасшифровка.День);
	стррПараметры.Вставить(""ТолькоПроведенныеДокументы"", ТолькоПроведенныеДокументы);
	стррПараметры.Вставить(""списокВидыДокументов"", ВидыДокументов);
	
	ТЗ = РеквизитФормыВЗначение(""Объект"").ПолучитьФактПосещенийДляОтчета(стррПараметры);
	Партнер = стррРасшифровка.Партнер;
	
	Список = Новый СписокЗначений;
	
	Для Каждого СтрокаТ Из ТЗ Цикл
		Если СтрокаТ.Партнер = Партнер Тогда
			Список.Добавить(СтрокаТ.Ссылка);
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат Список;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяСекцииДняНедели(НомерДняНедели)
	Если НомерДняНедели = 6 Тогда
		Возврат ""Субб"";
	ИначеЕсли НомерДняНедели = 7 Тогда
		Возврат ""Воскр"";
	Иначе
		Возврат ""День"";
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ВнешнийВызовСформироватьОтчет(стррПараметры) Экспорт
	
	ПериодОтчета 	= стррПараметры.Период;
	Агент      		= стррПараметры.Агент;
	ВидыДокументов 	= стррПараметры.СписокВидыДокументов.Скопировать();
	ТолькоПроведенныеДокументы = стррПараметры.ТолькоПроведенныеДокументы;
	ВыделитьДень	= стррПараметры.ВыделитьДень;
	
	ОтчетСформироватьКлиент();
	
КонецПроцедуры

// СлужебныеПроцедурыИФункции_ФормированиеОтчета
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_ИнтерактивностьОтчета

&НаКлиенте
Процедура ПоказатьМаршрутНаДату(Дата)
	
	//стррРасшифровка = Элементы.ТДОтчет.ТекущаяОбласть.Расшифровка;
	Период = Новый СтандартныйПериод(НачалоДня(Дата), КонецДня(Дата));
	стррПараметры = Новый Структура(""Агент,Период,СписокВидыДокументов,ТолькоПроведенныеДокументы"", 
		Агент, Период, ВидыДокументов, ТолькоПроведенныеДокументы);
	Форма = ОткрытьФормуОбработки(""ОтчетКонтрольПередвиженийАгентов"");
	Форма.ВнешнийВызовПоказатьТрек(стррПараметры)
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПартнеровПоРасшифровке()
	
	ТекОбласть = Элементы.ТДОтчет.ТекущаяОбласть;
	Если ТекОбласть.Верх = ТекОбласть.Низ Тогда // выделена одна ячейка партнера
		мПартнеры = Новый Массив;
		мПартнеры.Добавить(ТекОбласть.Расшифровка);
	Иначе // выделено несколько ячеек с партнерами
		мПартнеры = ПолучитьРасшифрокиОбласти(ТекОбласть.Верх, ТекОбласть.Низ, ТекОбласть.Лево, Тип(""СправочникСсылка.Партнеры""));
	КонецЕсли; 
	Форма = ОткрытьФормуОбработки(""РедакторМеток"");
	Форма.ВнешнийВызовДобавитьИПоказатьПартнеров(мПартнеры);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРасшифрокиОбласти(НачНомерСтроки, КонНомерСтроки, НомерКолонки, типЗначенияРасшифвроки)
	
	мЗначения = Новый Массив;
	Для СтрокаОтчета = НачНомерСтроки По КонНомерСтроки Цикл
		Область = ТДОтчет.ПолучитьОбласть(СтрокаОтчета, НомерКолонки, СтрокаОтчета, НомерКолонки);
		Расшифровка = Область.ТекущаяОбласть.Расшифровка;
		Если ТипЗнч(Расшифровка) = типЗначенияРасшифвроки Тогда
			мЗначения.Добавить(Расшифровка);
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат мЗначения;
	
КонецФункции

// СлужебныеПроцедурыИФункции_ИнтерактивностьОтчета
#КонецОбласти 

// СлужебныеПроцедурыИФункции
#КонецОбласти
",
{4,8,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",11aafdb3-24f5-4e79-b06e-d7029a5a8b30}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"СтррКонтекст",
{1,1,
{"ru","Стрр контекст"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"Агент",
{1,1,
{"ru","Агент"}
},
{"Pattern",
{"#",604931cd-d4a8-48d0-bc59-2ac90e044abb}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"ПериодОтчета",
{1,1,
{"ru","Период отчета"}
},
{"Pattern",
{"#",2fdc88ec-7c9b-43cd-8ba5-873f043bdd88}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"ТолькоПроведенныеДокументы",
{1,1,
{"ru","Только проведенные документы"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"ВидыДокументов",
{1,1,
{"ru","Виды документов"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"ТДОтчет",
{1,1,
{"ru","ТДОтчет"}
},
{"Pattern",
{"#",e603103e-a318-4edc-a014-b1c6cf94d49f}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"ВыделитьДень",
{1,1,
{"ru","Выделить день"}
},
{"Pattern",
{"D","D"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,8,
{8,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьГлавнуюФорму",
{1,1,
{"ru","На главную"}
},
{1,1,
{"ru","Перейти на главную страницу"}
},
{0,
{0,
{"B",1},0}
},
{0,77,8},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаПоказатьГлавнуюФорму",3,0,0,
{0,0},1,0,1,0,0},
{8,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьСпискиТорговыхТочек",
{1,1,
{"ru","Списки торговых точек"}
},
{1,1,
{"ru","Показать список партнеров (клиентов)"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаПоказатьСпискиТорговыхТочек",3,0,0,
{0,0},1,0,1,0,0},
{8,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьТорговыхАгентов",
{1,1,
{"ru","Торговые агенты"}
},
{1,1,
{"ru","Показать торговых агентов"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаПоказатьТорговыхАгентов",3,0,0,
{0,0},1,0,1,0,0},
{8,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СформироватьОтчет",
{1,1,
{"ru","Сформировать"}
},
{1,1,
{"ru","Сформировать отчет"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаСформироватьОтчет",3,0,0,
{0,0},1,0,1,0,0},
{8,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СкрытьПараметры",
{1,1,
{"ru","Скрыть параметры"}
},
{1,1,
{"ru","Скрыть параметры формирования отчета"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаСкрытьОтбор",3,0,0,
{0,0},1,0,1,0,0},
{8,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Печать",
{1,1,
{"ru","Печать"}
},
{1,1,
{"ru","Печать"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{-13},"",-1,-1,1,0,""},"КомандаПечать",2,0,0,
{0,0},1,0,1,0,0},
{8,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьНаКарте",
{1,1,
{"ru","Показать на карте"}
},
{1,1,
{"ru","Показать данные на карте в соответствии с выделенной областью в отчете"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаПоказатьНаКарте",3,0,0,
{0,0},1,0,1,0,0},
{8,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Справка",
{1,1,
{"ru","Справка"}
},
{1,1,
{"ru","Справка"}
},
{0,
{0,
{"B",1},0}
},
{0,49,16},
{4,1,
{0,b7c81c62-d6ad-4eae-9cea-0e203182db67},"",-1,-1,1,0,""},"КомандаСправка",3,0,0,
{0,0},1,0,1,0,0}
},
{0,0},
{0,0},0,0}