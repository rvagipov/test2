{3,
{46,0,1,0,0,1,0,0,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","Быстрая настройка модуля обмена"}
},1,0,1,1,1,0,1,0,
{4,3699f6a3-9a2a-4c82-a775-6ff4824a08ca,"ОбработкаОповещения",3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",52dbb775-1631-4fd5-8c55-1615b5881dac,"ПередЗакрытием",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,3699f6a3-9a2a-4c82-a775-6ff4824a08ca,0,1,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,52dbb775-1631-4fd5-8c55-1615b5881dac,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаОтмена",
{1,0},1,
{0,679b62d9-ff72-4329-bf3a-c0c32b311dd2},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},0,
{"Pattern"},"",2,0,1,
{10,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаОтменаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},2,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ДекорацияБыстраяНастройка",
{1,1,
{"ru","Декорация быстрая настройка"}
},
{1,0},1,4,2,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,3,
{0},"",-1,-1,0,
{
{#base64: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}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{21,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияБыстраяНастройкаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Декорация быстрая настройка"}
},0},0,1,
{10,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияБыстраяНастройкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаОкно",
{1,1,
{"ru","Группа окно"}
},
{1,1,
{"ru","Группа окно"}
},0,1,0,40,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,143c00f7-a42d-4cd7-9189-88e4467dc768,
{51,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},"ТЗСтатусы",0,0,1,
{1,0},
{1,0},
{1,
{3}
},0,1,1,0,0,0,0,0,0,9,0,0,0,1,0,1,0,1,2,2,1,1,0,0,0,0,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,13,
{"U"},
{1,1282f000-23b6-4887-87f4-9e8e79db3d32,"ТЗСтатусыВыбор",1,0,1282f000-23b6-4887-87f4-9e8e79db3d32,0,1},
{16,0ae4bea5-23be-42a7-b69e-97b11b29c453,2bbe4e12-06d2-409b-a972-eea585125d83,37740564-9e86-44a0-bea9-3f485a5a3f91,44ad3ec9-f3c2-4913-9224-5f9fb6418743,49602716-fea6-497f-8047-726404038857,51c99108-107c-43e1-8918-e48835bf2495,58b2a785-23f6-4b0e-a324-9a1323285595,88078230-1f6b-415f-99e4-ad2ff73810cf,8af6ebff-cd02-4bfe-a984-44a292623708,8d772f97-c0ef-47c0-9cb0-efea28c61341,9ef79140-3de6-436a-8dda-610bb963f5db,b0016a68-ec64-4e6d-b905-c71fd62efc4c,b41f5bbc-ba5d-4888-8cd1-db246a371418,c0519548-2a9a-44de-a25e-faf01e089d4d,e7216412-03ac-4a81-99c2-1d7c28e88e31,fa51b106-eae6-44c7-8054-76cbb3100603},1,
{21,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТЗСтатусыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{21,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТЗСтатусыКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{30,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТЗСтатусыГруппаИконка",
{1,1,
{"ru","ТЗСтатусы группа иконка"}
},
{1,1,
{"ru","ТЗСтатусы группа иконка"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,2,1,0,3,
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{0},
{"Pattern"},"",
{1,0},0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{24,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ТЗСтатусыСтатус",1,0,
{1,0},
{1,0},
{2,
{3},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{8,0,0,1,1,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAAEAAAAAQCAYAAACm53kpAAAABGdBTUEAALGPC/xh
BQAAAAlwSFlzAAAOvQAADr0BR/uQrQAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0
IDQuMC4xMzQDW3oAAARaSURBVFhHxdZ/TJVVGAdwoeWi3Vyz9Yf/uFHNTZTwF3Ev
imm1Vmtlqz/6D6vpapQRXDEmLqtVNiixmY4IzJw5ysJwDXEwmIEIQXKBC5dxEbmN
S0i3uyDRWet9+n7P7nn3Xngx7DL747Od+5znnJ3n4bzvyzwR+V/ddkv8jGrXLb+n
bt3yxXZzmt2eN8I2eDPZFUUNGcnv92Zu+sv73GN/tmxI2W6XQ3Z73gjbYCwSahZe
zwJogKvwBvPtigoU7o7reGhl6Eq/T6jjkdUjdnnEPZx5FVYOyIcukAiO8yABVJ4+
rzmYK5FCZ3IQJGKS+XZF4dqXDh8okj86f1KG9uwyzmQkv2eXyz2c7mNaIviLv2sX
79CYTF69pnD8YWWbYK4vkmOe1xzMlUihdtLhb9AN+IL5Uwu6+M6OuLaNK0Lh+hqZ
ON+qcNy+cYXtLeAeablHyQH+shqPjF++orjdbjnb3GL+5hxyepirzxt1+LmAwuzc
Ct2giw/B3cyfWhBefKX4i8uEp03SFt6hhOuq5UJBttjdAu6R9voRKig6fk7Cv0+Y
2IDGprNRMeYgN0+fN+rw/xWK+Tc7QRdPz4Naay3Gn7s1Di+80K9VX8ukzysr73Qo
E+0twljrhpRfrPnEPR7I/px62n0BuRQKm9iAhjONUbHW3iFBbpc+u1lELFDMDrgM
J8HB4izuA770dPH1EAdqrbWYU+nLSi/kv2qMHjukboDZAIwZ69+2WfB+iLoF3CN1
W3nC2pzDEhwdM7V3eCQnJ0e+qTyhxsR4IDgqyL+mz24WEQsUw+J1gY2gm8BC60DP
sRFLQDWHa3Uh+OTF4YqHgiV7ZaRsv4y3NonrrgUKx4xxDp/HqFvAPVJfKZ3veq1M
hoZHTFlZWdMwPhAYFuTPeQO+Al0k/QBsQqYlRrtAFU9cqws56Ur6DE2QwTdzZfCt
7TL27ZdyZM0ShWPGONf97MNSnb5sj7UBa7JKaLDZ0ycDF3828RE4dbo2Klb/Y48g
d84fgduhFqzFngO+7PTvHpgP0xrQ+bgzHi+/3/qzXxTy52xRLlUcVvRv4jxyzVvA
PVa/fIDe3l1eLX3+wetiDnLz9dnNImIRKYhNsF53KwPWglk8cS2LqHQuLfc8mmr0
bn5a8b3wjDFy6KDBLwAfgeCn+1RMzWduMvBJNE44l35gNuCl/eQA/76KOvH29dsq
PHpamMNcfXaziFhYipqpCSVgzVO4tmn9/fHfu5LCnU+kG11PZhhdT61XgiXFqgHE
Bug4c5iLNaO6Aau2fqwlgX9nSZXUNZ8Xj9encMwY5yCRufrs5iAWUwqb2gT+88N/
gafmqbVFyYkP4pk20AgDn0ADnzoD/wgpgb3vKvo355jDXDTA+CTl3kXcY9WWYisH
FMAgSATHjHFO5emzm4NY2BTHJhyHcXBHYtNwLf+KVa6kATDwKMwKc/EIdOsbEAvb
4M3EIqgwOXExbsOij2aBuXqd3Z6zJ/P+Ace79gu6SnomAAAAAElFTkSuQmCC}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,0,
{0},1,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,0,0,1,0},
{0,1,0},1,
{21,
{25,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТЗСтатусыСтатусКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТЗСтатусыСтатусРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{27,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТЗСтатусыОписание",1,0,
{1,0},
{1,0},
{2,
{3},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{28,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТЗСтатусыОписаниеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{29,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТЗСтатусыОписаниеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{31,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТЗСтатусыГруппаИконкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{10,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТЗСтатусыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,0,0,1,
{4,
{15,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТЗСтатусыСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{21,
{16,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТЗСтатусыСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{17,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТЗСтатусыСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{11,0},0,3,3},1,
{4,
{18,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТЗСтатусыСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{21,
{19,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТЗСтатусыСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{20,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТЗСтатусыСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{11,1},0,3,3},1,
{4,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТЗСтатусыУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{21,
{22,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТЗСтатусыУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{23,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТЗСтатусыУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{11,2},0,3,3},0,1,0,0,1,0,3,3,0,1,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияПодвал",
{1,0},
{1,0},1,0,1,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияПодвалКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},0,2,
{1,
{1,0},0},0,1,
{10,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияПодвалРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},1,0,1,
{10,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОкноРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,1,0,100,1,1,0},"
#Область СовместимостьСПлатформой_8_3_5

// Подставляет параметры в строку. Максимально возможное число параметров - 5.
// Параметры в строке задаются как %<номер параметра>. Нумерация параметров начинается с единицы.
//
// Параметры:
//  СтрокаПодстановки  - Строка - шаблон строки с параметрами (вхождениями вида ""%ИмяПараметра"");
//  Параметр<n>        - Строка - подставляемый параметр.
//
// Возвращаемое значение:
//  Строка   - текстовая строка с подставленными параметрами.
//
&НаКлиентеНаСервереБезКонтекста
Функция СтрШаблон_(СтрокаПодстановки,
	Параметр1, Параметр2 = Неопределено, Параметр3 = Неопределено, Параметр4 = Неопределено, Параметр5 = Неопределено)
	
	Результат = СтрЗаменить(СтрокаПодстановки, ""%1"", Параметр1);
	Результат = СтрЗаменить(Результат, ""%2"", Параметр2);
	Результат = СтрЗаменить(Результат, ""%3"", Параметр3);
	Результат = СтрЗаменить(Результат, ""%4"", Параметр4);
	Результат = СтрЗаменить(Результат, ""%5"", Параметр5);
	
	Возврат Результат;
	
КонецФункции
	
// Разбивает строку на несколько строк по разделителю. Разделитель может иметь любую длину.
//
// Параметры:
//  Строка                 - Строка - текст с разделителями;
//  Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
//  ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
//    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
//     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
//       включаются в результат.
//     Е если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
//       случае разделителя-пробела результатом функции будет массив, содержащий одно значение """" (пустая строка), а
//       при других разделителях результатом функции будет пустой массив.
//  СокращатьНепечатаемыеСимволы - Булево - сокращать непечатаемые символы по краям каждой из найденных подстрок.
//
// Возвращаемое значение:
//  Массив - массив строк.
&НаКлиентеНаСервереБезКонтекста 
Функция СтрРазделить_(Знач Строка, Знач Разделитель = "","", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь)
	
	Результат = Новый Массив;
	
	// Для обеспечения обратной совместимости.
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = "" "", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = "" "" Тогда
				Результат.Добавить("""");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Строка));
		Иначе
			Результат.Добавить(Строка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

///  Объединяет строки из массива в строку с разделителями.
//
// Параметры:
//  Массив      - Массив - массив строк которые необходимо объединить в одну строку;
//  Разделитель - Строка - любой набор символов, который будет использован в качестве разделителя.
//
// Возвращаемое значение:
//  Строка - строка с разделителями.
// 
&НаКлиентеНаСервереБезКонтекста 
Функция СтрСоединить_(Массив, Разделитель = "","", СокращатьНепечатаемыеСимволы = Ложь)

	Результат = """";
	ТекРазделитель = """";
	
	Для Индекс = 0 По Массив.ВГраница() Цикл
		
		Подстрока = Массив[Индекс];
		
		Если СокращатьНепечатаемыеСимволы Тогда
			Подстрока = СокрЛП(Подстрока);
		КонецЕсли;
		
		Если ТипЗнч(Подстрока) <> Тип(""Строка"") Тогда
			Подстрока = Строка(Подстрока);
		КонецЕсли;
		
		Результат = Результат + ТекРазделитель + Подстрока;
		
		Если Индекс = 0 Тогда
			ТекРазделитель = Разделитель;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

// СовместимостьСПлатформой_8_3_5
#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтррКонтекст = Новый Структура(""СтатусыСправочников,СтатусНастройкиОбмена,НастройкиЛКЗаданы,Сценарий"");
	ТекОбъект = РеквизитФормыВЗначение(""Объект"");	
	ТекОбъект.ИнициализироватьКонтекстФормы(СтррКонтекст, Параметры);
	
	СтррКонтекст.НастройкиЛКЗаданы = Ложь;
	СтррКонтекст.Сценарий = СтрРазделить_(""ДоступВЛК,КаналОбмена,ЗагрузкаМУ,НастройкиАгентов""); // сценарий быстрой настройки	
	
	ПрочитатьСтатусНастроекСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания(""ЗапускБыстройНастройки"", 0.1, Истина);
	Оповестить(""АПЗакрытьФормуОбработки"", ""*"");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповестить(""АПНастройкиПараметровОбменаИзмененияЗаписаны"", Неопределено); // чтобы обновились статусы на Главной форме
	
КонецПроцедуры

// Принимаются оповещения от ЛК, чтобы через экспортные процедуры вызывать их обработку
// в соответствующих модулях.
// 
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = ""АППрерватьБыструюНастройку"" Тогда
		
		Если ЭтаФорма.Открыта() Тогда
			Закрыть();
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = ""АПНастройкиПараметровОбмена_БыстраяНастройка"" Тогда // загружены из ЛК канады обмена (или была ошибка загрузки)
		
		СтатусСтрокиПопыткаОбновитьИнформацию(""КаналОбмена"", Параметр);
		ШагСценарияКаналОбмена();
		
	ИначеЕсли ИмяСобытия = ""АПМобильныеУстройства_БыстраяНастройка"" Тогда
		
		СтатусСтрокиПопыткаОбновитьИнформацию(""ЗагрузкаМУ"", Параметр);
		Если Параметр <> Неопределено И Параметр.ЕстьОшибки Тогда // были ошибки на предыдущем шаге
			СтатусСтрокиУстановитьЭтап(""ЗагрузкаМУ"", 100); // прерываем шаг сценария и переходим на следующий шаг
		Иначе
			ШагСценарияЗагрузкаМУ();
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

// ОбработчикиСобытийФормы
#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункции_Форма

// СлужебныеПроцедурыИФункции_Форма
#КонецОбласти 

&НаКлиенте
Процедура ЗапускБыстройНастройки()
	
	СтатусНастройкиОбмена = СтррКонтекст.СтатусНастройкиОбмена;
	Если СтатусНастройкиОбмена.КодСостояния = ""НеУказанКаталогДанных"" Тогда // каталог данных устанавливаем сразу
		МодульНастроек = ПолучитьФорму(СтррКонтекст.ПутьКФорме + ""НастройкиМодуля"",, ЭтаФорма, ""АПВнешнийВызов"");
		МодульНастроек.УстановитьКаталогДанныхПоУмолчанию(Ложь);
		ПрочитатьСтатусНастроекСервер();
	КонецЕсли;
	
	ПодключитьОбработчикОжидания(""ШагСценария"" + СтррКонтекст.Сценарий[0], 0.1, Истина);    
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСтатусНастроекСервер()

	ТекОбъект = РеквизитФормыВЗначение(""Объект"");	
	ТекОбъект.ИнициализироватьКонтекстФормы(СтррКонтекст, Параметры);
	
	СтррКонтекст.СтатусНастройкиОбмена = ТекОбъект.НастройкиОбменаГотовыКРаботе();
	СтррКонтекст.СтатусыСправочников = РеквизитФормыВЗначение(""Объект"").СправочникиГотовыКРаботе(""НастройкиАгентов,МобильныеУстройства"");
	
	ЛКЛогин  = ТекОбъект.ПрочитатьЗначениеНастройки(""ЛКЛогин"");
	ЛКПароль = ТекОбъект.ПрочитатьЗначениеНастройки(""ЛКПароль"");
	
	СтррКонтекст.НастройкиЛКЗаданы = Не ПустаяСтрока(ЛКЛогин) И Не ПустаяСтрока(ЛКПароль);
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции_Статусы

&НаКлиенте 
Процедура СтатусСтрокиОбновить(ШагСценария, Статус = Неопределено, Описание = Неопределено, Информация = Неопределено)
	
	мСтроки = ТЗСтатусы.НайтиСтроки(Новый Структура(""ШагСценария"", ШагСценария));
	Если мСтроки.Количество() = 0 Тогда
		СтрокаТ = ТЗСтатусы.Добавить();
		СтрокаТ.ШагСценария = ШагСценария;
	Иначе
		СтрокаТ = мСтроки[0];
	КонецЕсли;
	
	Если Статус <> Неопределено Тогда
		СтрокаТ.Статус = Статус;
		Если Элементы.ТЗСтатусы.ТекущаяСтрока <> СтрокаТ.ПолучитьИдентификатор() Тогда
		    Элементы.ТЗСтатусы.ТекущаяСтрока = СтрокаТ.ПолучитьИдентификатор()
		КонецЕсли; 
	КонецЕсли; 
	
	Если Описание <> Неопределено Тогда
		СтрокаТ.Описание = Описание;
	КонецЕсли; 
	
	Если Информация <> Неопределено Тогда
		СтрокаТ.Информация = Информация;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте 
Функция СтатусСтрокиПолучитьЭтап(ШагСценария)
	
	мСтроки = ТЗСтатусы.НайтиСтроки(Новый Структура(""ШагСценария"", ШагСценария));
	Если мСтроки.Количество() = 0 Тогда
		Возврат 1;
	Иначе
		Возврат мСтроки[0].Этап;
	КонецЕсли;
	
КонецФункции

&НаКлиенте 
Процедура СтатусСтрокиУстановитьЭтап(Знач ШагСценария, Этап, ЖдатьВнешнееСобытие = Ложь)
	
	мСтроки = ТЗСтатусы.НайтиСтроки(Новый Структура(""ШагСценария"", ШагСценария));
	Если мСтроки.Количество() = 1 Тогда
		мСтроки[0].Этап = Этап;
	КонецЕсли;
	
	Если Этап >= 99 Тогда // переходим на следующий шаг сценария
		мСценарий = СтррКонтекст.Сценарий;
		Индекс = мСценарий.Найти(ШагСценария);
		Индекс = Индекс + 1;
		Если Индекс = мСценарий.Количество() Тогда // весь сценарий пройден
			СтатусСтрокиОбновить(""Финал"", 0, НСтр(""ru = 'Быстрая настройка завершена.'""));
			Возврат; // сценарий завершен
		Иначе
			ШагСценария = мСценарий[Индекс];
		КонецЕсли; 
	КонецЕсли; 
	
	Если Не ЖдатьВнешнееСобытие Тогда
		ПодключитьОбработчикОжидания(""ШагСценария"" + ШагСценария, 0.5, Истина);    		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусСтрокиПопыткаОбновитьИнформацию(ШагСценария, стррПараметр)

	Если ТипЗнч(стррПараметр) = Тип(""Структура"") Тогда
		Информация = Неопределено; Описание = Неопределено;
		Если стррПараметр.Свойство(""Описание"") Тогда
			Описание = стррПараметр.Описание;
		КонецЕсли; 
		Если стррПараметр.Свойство(""Сообщения"") Тогда
			Информация = """";
			Для Каждого ТекстСообщения Из стррПараметр.Сообщения Цикл
				Информация = Информация + ?(Информация = """", """", Символы.ПС) + ТекстСообщения;
			КонецЦикла; 
		КонецЕсли;
		Статус = ?(стррПараметр.ЕстьОшибки, 2, Неопределено);
		СтатусСтрокиОбновить(ШагСценария, Статус, Описание, Информация);
	КонецЕсли; 

КонецПроцедуры

// СлужебныеПроцедурыИФункции_Статусы
#КонецОбласти

&НаКлиенте
Процедура ШагСценарияДоступВЛК()
	
	ШагСценария = ""ДоступВЛК"";
	
	Этап = СтатусСтрокиПолучитьЭтап(ШагСценария);
	
	Если Этап = 1 Тогда // проверяем доступ в ЛК
		Если СтррКонтекст.НастройкиЛКЗаданы Тогда
			СтатусСтрокиОбновить(ШагСценария, 1, НСтр(""ru = 'Настроен доступ в """"Личный кабинет"""".'""));
			Этап = 99;  // доступ в ЛК настроен, шаг сценария завершен
		Иначе
			СтатусСтрокиОбновить(ШагСценария, 3, НСтр(""ru = 'Настройка доступа в """"Личный кабинет""""...'""));
		КонецЕсли; 
	ИначеЕсли Этап = 2 Тогда // просим задать пользователя логин и пароль для доступа в ЛК
		МодульЛК = ПолучитьФорму(СтррКонтекст.ПутьКФорме + ""ЛичныйКабинет"", , ЭтаФорма);
		МодульЛК.ВнешнийВызовЗадатьЛогинИПароль();
		Возврат;
	КонецЕсли; 
	
	СтатусСтрокиУстановитьЭтап(ШагСценария, Этап + 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ШагСценарияКаналОбмена()
	
	ШагСценария = ""КаналОбмена"";
	
	Этап = СтатусСтрокиПолучитьЭтап(ШагСценария);
	
	Если Этап = 1 Тогда // проверяем настройку канала обмена
		СтатусНастройкиОбмена = СтррКонтекст.СтатусНастройкиОбмена;
		Если СтатусНастройкиОбмена.КодСостояния = ""НеВыбранСпособ"" Или СтатусНастройкиОбмена.КодСостояния = ""НеЗаполненыРеквизиты"" Тогда
			СтатусСтрокиОбновить(ШагСценария, 3, НСтр(""ru = 'Получение канала обмена из """"Личного кабинета""""...'""));
		Иначе
			СтатусСтрокиОбновить(ШагСценария, 1, НСтр(""ru = 'Канал обмена настроен.'""));
			Этап = 99; // канал настроен, шаг сценария завершен
		КонецЕсли;
	ИначеЕсли Этап = 2 Тогда // получаем канал из ЛК
		// Чтобы правильно обработать следующий шаг сценария после получения события ""АПНастройкиПараметровОбмена_БыстраяНастройка"",
		// заранее обновляем статус до следующего шага.
		СтатусСтрокиУстановитьЭтап(ШагСценария, Этап + 1, Истина); 
		МодульНастроек = ПолучитьФорму(СтррКонтекст.ПутьКФорме + ""НастройкиМодуля"",, ЭтаФорма, ""АПВнешнийВызов"");
		МодульНастроек.ВнешнийВызовЛКЗагрузитьКаналыОбмена(); // асинхронный вызов
		// результат будет возвращен в оповещнии ""АПНастройкиПараметровОбмена_БыстраяНастройка""
		Возврат;
	ИначеЕсли Этап = 3 Тогда // проверяем результат получения канала из ЛК 
		ПрочитатьСтатусНастроекСервер();
		СтатусНастройкиОбмена = СтррКонтекст.СтатусНастройкиОбмена;
		Если СтатусНастройкиОбмена.КодСостояния = ""НеВыбранСпособ"" Или СтатусНастройкиОбмена.КодСостояния = ""НеЗаполненыРеквизиты"" Тогда
			СтатусСтрокиОбновить(ШагСценария, 2, НСтр(""ru = 'Канал обмена не настроен.'""));
		Иначе
			СтатусСтрокиОбновить(ШагСценария, 1, НСтр(""ru = 'Канал обмена настроен.'""));
		КонецЕсли;
		Этап = 99;
	КонецЕсли; 
	
	СтатусСтрокиУстановитьЭтап(ШагСценария, Этап + 1);

КонецПроцедуры

// Загрузка мобильных устройств из ЛК
&НаКлиенте
Процедура ШагСценарияЗагрузкаМУ()
	
	ШагСценария = ""ЗагрузкаМУ"";
	
	Этап = СтатусСтрокиПолучитьЭтап(ШагСценария);
	Если Этап = 1 Тогда
		ПрочитатьСтатусНастроекСервер();
		стррСтатусАгенты = СтррКонтекст.СтатусыСправочников.НастройкиАгентов;
		стррСтатусМУ 	 = СтррКонтекст.СтатусыСправочников.МобильныеУстройства;
		Если стррСтатусАгенты.Готов И стррСтатусМУ.Готов Тогда // справочники агентов и МУ в порядке
			СтатусСтрокиОбновить(ШагСценария, 1, НСтр(""ru = 'МУ и настройки агентов настроены.'""));
			Этап = 99; // МУ и агенты настроены, шаг сценария завершен
		Иначе // даже если замечания только с справочнику агентов, загружаем список МУ, т.к. в ЛК могут быть указаны
			СтатусСтрокиОбновить(ШагСценария, 3, НСтр(""ru = 'Загрузка мобильных устройств из """"Личного кабинета""""...'""));
		КонецЕсли;
	ИначеЕсли Этап = 2 Тогда // загрузка МУ из ЛК
		// Чтобы правильно обработать следующий шаг сценария после получения события ""АПМобильныеУстройства_БыстраяНастройка"",
		// заранее обновляем статус до следующего шага.
		СтатусСтрокиУстановитьЭтап(ШагСценария, Этап + 1, Истина); 
		МодульМУ = ПолучитьФорму(СтррКонтекст.ПутьКФорме + ""МобильныеУстройства"",, ЭтаФорма, ""АПВнешнийВызов"");
		МодульМУ.ВнешнийВызовЛКЗагрузитьМУ(); // результат будет возвращен в оповещнии ""АПМобильныеУстройства_БыстраяНастройка""
		Возврат;
	ИначеЕсли Этап = 3 Тогда // проверка результата загрузки МУ из ЛК - в т.ч. по оповещению ""АПМобильныеУстройства_БыстраяНастройка""
		ПрочитатьСтатусНастроекСервер();		
		стррСтатусМУ 	 = СтррКонтекст.СтатусыСправочников.МобильныеУстройства;
		Если Не стррСтатусМУ.Готов Тогда
			СтатусСтрокиОбновить(ШагСценария, 2, НСтр(""ru = 'Мобильные устройства не загружены.'""));
		Иначе
			СтатусСтрокиОбновить(ШагСценария, 1, НСтр(""ru = 'Мобильные устройства загружены.'""));
		КонецЕсли;
		Этап = 99; // следующий шаг - наведение порядка в настройках справочника агентов
	КонецЕсли; 
	
	СтатусСтрокиУстановитьЭтап(ШагСценария, Этап + 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ШагСценарияНастройкиАгентов()
	
	ШагСценария = ""НастройкиАгентов"";
	
	Этап = СтатусСтрокиПолучитьЭтап(ШагСценария);
	Если Этап = 1 Тогда
		ПрочитатьСтатусНастроекСервер();
		стррСтатусАгенты = СтррКонтекст.СтатусыСправочников.НастройкиАгентов;
		Если стррСтатусАгенты.Готов Тогда // настройки агентов корректны
			СтатусСтрокиОбновить(ШагСценария, 1, НСтр(""ru = 'Установлены настройки для агентов.'""));
			Этап = 99;
		Иначе // нужно привести в порядок настройки агентов
			СтатусСтрокиОбновить(ШагСценария, 3, НСтр(""ru = 'Установка настроек для агентов...'""));
			МодульНА = ПолучитьФорму(СтррКонтекст.ПутьКФорме + ""НастройкиАгентов"",, ЭтаФорма, ""АПВнешнийВызов""); //??? какие параметры передаем ???
			МодульНА.ВнешнийВызовПроставитьНастройки();
		КонецЕсли;
	ИначеЕсли Этап = 2 Тогда // обновлены настройки для агентов в предыдущем шаге
		ПрочитатьСтатусНастроекСервер();
		стррСтатусАгенты = СтррКонтекст.СтатусыСправочников.НастройкиАгентов;
		Если стррСтатусАгенты.Готов Тогда // настройки агентов корректны
			СтатусСтрокиОбновить(ШагСценария, 1, НСтр(""ru = 'Установлены настройки для агентов.'""));
		Иначе // настойки агентов не исправлились
			СтатусСтрокиОбновить(ШагСценария, 2, НСтр(""ru = 'Исправить настройки агентов не удалось.'""), стррСтатусАгенты.Описание);
		КонецЕсли;
		Этап = 99;		
	КонецЕсли;
	
	СтатусСтрокиУстановитьЭтап(ШагСценария, Этап + 1);	
	
КонецПроцедуры

&НаКлиенте
Процедура ТЗСтатусыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтрокаТ = Элемент.ТекущиеДанные;
	Если ЗначениеЗаполнено(СтрокаТ.Информация) Тогда
		ПоказатьПредупреждение(, СтрокаТ.Информация);
	КонецЕсли; 
КонецПроцедуры

// СлужебныеПроцедурыИФункции
#КонецОбласти",
{4,3,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",11aafdb3-24f5-4e79-b06e-d7029a5a8b30}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"СтррКонтекст",
{1,1,
{"ru","Структура дополнительных параметров модуля формы"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"ТЗСтатусы",
{1,1,
{"ru","ТЗСтатусы"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,5,
{5,1,0,"Статус",
{1,1,
{"ru","Статус"}
},
{"Pattern",
{"N",3,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Описание",
{1,1,
{"ru","Описание"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ШагСценария",
{1,1,
{"ru","Шаг сценария"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Этап",
{1,1,
{"ru","Этап"}
},
{"Pattern",
{"N",2,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"Информация",
{1,1,
{"ru","Информация"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}