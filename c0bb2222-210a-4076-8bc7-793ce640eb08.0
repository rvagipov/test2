{3,
{46,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","Личный кабинет"}
},0,0,1,1,1,0,1,0,
{4,3699f6a3-9a2a-4c82-a775-6ff4824a08ca,"ОбработкаОповещения",3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",52dbb775-1631-4fd5-8c55-1615b5881dac,"ПередЗакрытием",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,3699f6a3-9a2a-4c82-a775-6ff4824a08ca,0,1,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,52dbb775-1631-4fd5-8c55-1615b5881dac,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаКоманднаяПанель",
{1,1,
{"ru","Командная панель"}
},
{1,1,
{"ru","Группа командная панель"}
},0,1,0,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},8,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ДекорацияИконка",
{1,1,
{"ru","Декорация иконка"}
},
{1,1,
{"ru","Перейти на главную страницу"}
},1,2,1,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3
YXJlAHBhaW50Lm5ldCA0LjAuMTCtCgrAAAAB1UlEQVQ4T5WTyytEcRTHLfwHbCwl
mjw2CitSlsTfYG8xycICGUIoUUhiShYsMJNHnimTGCbDeC3QmLy5HkVm5PV1zrkP
9zIWfvW59/c7v3O+v3vO+d0YABbiqj02op6YIBTilHARVYTtp79lQQ5lxBMBJqlx
Rd4mIoTdHGMOHtQd42s88J894v3jE6XD+z9FmGki1hCgBZ9sOCQ4lhF5/aAtoG3p
xBxopkIEaMI5y2f3rp7j+C6Cov4ASpzbqJs7RmLDCkYC1zhQnpHXtWEW4HRsLMAF
E+Pr+6ec2r92YTimNK2KjUfzYsiwa1SxAFdbDOXjh5jcv0VOh8/i6JgLwrVzg4zW
NYudcLEAt0oMfd5zhO4jKHYGMLhxKekU9m1hdPsGR7dhFPT4Mb6n4FAJI7dT0jm1
COgpcDA1QMbQ5pU6oTHgu9RmkProAr9SyG73oXLqSE7LbFtH7ayaQnqrF40LIYzR
PLXFyzGSglFEJxXv5OFFOqDb+E5wcPAujPxuv2HXkCJyG7klUbuQHL0Lb4TaRrKz
iJ037O4DuHcVZFEKvNapngnKXUhTP1tHvUj80ET4epodosEn83ue+L7KmkAsUUFI
On/Ae+wjwRYBHdr8x++MmC+4IKQYoZgmOgAAAABJRU5ErkJggg==}
},0,""},1,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{1,9874537f-454c-40ae-83e9-3b9cefbc6d08,"КомандаПоказатьГлавнуюФорму",1,0,9874537f-454c-40ae-83e9-3b9cefbc6d08,0,1}
},1,
{21,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияИконкаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Декорация иконка"}
},0},0,1,
{10,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияИконкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,1},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},2,"ПоказатьГлавнуюФорму",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказатьГлавнуюФормуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,2,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияСмТакже",
{1,1,
{"ru","cм. также:"}
},
{1,1,
{"ru","Смотрите также"}
},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияСмТакжеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","cм. также:"}
},0},0,1,
{10,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияСмТакжеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{43,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},2,"ЛКВойти",
{1,0},1,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{44,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКВойтиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,2,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},2,"ПоказатьНастройкиОбмена",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказатьНастройкиОбменаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,2,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ДекорацияКоманднаяПанель",
{1,0},
{1,0},0,0,1,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,0,
{0},"",-1,-1,1,0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{21,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияКоманднаяПанельКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,0},0},0,1,
{10,
{15,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияКоманднаяПанельРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{16,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},2,"СохранитьВсе",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,2,60,
{-31},700,0,0,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{17,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СохранитьВсеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,2,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{18,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"Справка",
{1,1,
{"ru","?"}
},1,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},1,0,0,0,2,2,3,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{19,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СправкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКоманднаяПанельРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{20,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаЛичныйКабинет",
{1,1,
{"ru","Личный кабинет"}
},
{1,1,
{"ru","Группа личный кабинет"}
},0,1,0,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},5,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{22,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаЛКАвторизация",
{1,1,
{"ru","Авторизация в ""Личном кабинете"""}
},
{1,1,
{"ru","Группа ЛКАвторизация"}
},0,1,0,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,3,
{-23}
},0,1,0,1,
{1,0},0,0,3,3,2,0,1,1},3,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{24,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ДекорацияЛКЛоготип",
{1,1,
{"ru","Декорация ЛКЛоготип"}
},
{1,0},1,9,4,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,3,
{0},"",-1,-1,0,
{
{#base64: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}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{21,
{25,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияЛКЛоготипКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Декорация ЛКЛоготип"}
},0},0,1,
{10,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияЛКЛоготипРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{35,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаЛКАвторизацияПоля",
{1,1,
{"ru","Группа ЛКАвторизация поля"}
},
{1,1,
{"ru","Группа ЛКАвторизация поля"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},5,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{37,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЛКЛогин",2,0,
{1,1,
{"ru","Логин"}
},
{1,0},
{2,
{1},
{0,a75bbcf5-68ee-4be0-9c33-00a33403b18b}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,0,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ЭлементФормыПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЛКЛогинКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{39,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКЛогинРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{90,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаПароль",
{1,1,
{"ru","Группа пароль"}
},
{1,1,
{"ru","Группа пароль"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{40,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЛКПароль",1,0,
{1,1,
{"ru","Пароль"}
},
{1,0},
{2,
{1},
{0,b4481d29-f3eb-4543-88eb-fdf4b9918367}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,0,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ЭлементФормыПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{41,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЛКПарольКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{42,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКПарольРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{87,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ЛКЗапомнитьЛогинИПароль",4,0,
{1,0},
{1,0},
{2,
{1},
{0,073cef95-b9b8-47b8-90b8-f59ce4182680}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,2,512,
{-31},1,80},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},1,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ЭлементФормыПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{88,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЛКЗапомнитьЛогинИПарольКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{89,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКЗапомнитьЛогинИПарольРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{91,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПарольРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{100,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ЛКПроверитьПодключение",
{1,0},1,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{101,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКПроверитьПодключениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{104,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},2,"ЛКЧтоТакоеЛК",
{1,1,
{"ru","Что такое ""Личный кабинет""?"}
},1,
{13,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{105,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКЧтоТакоеЛКРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,2,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{102,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},2,"ЛКНетДоступа",
{1,0},1,
{12,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{103,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКНетДоступаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,2,0},1,0,1,
{10,
{36,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаЛКАвторизацияПоляРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{45,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаЛКТитул",
{1,1,
{"ru","Группа ЛКТитул"}
},
{1,1,
{"ru","Группа ЛКТитул"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},1,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{47,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияЛКТитулОтступ",
{1,0},
{1,0},1,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{48,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияЛКТитулОтступКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,0},0},0,1,
{10,
{49,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияЛКТитулОтступРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},1,0,1,
{10,
{46,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаЛКТитулРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{23,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаЛКАвторизацияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{80,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаФлагРегистрация",
{1,1,
{"ru","Группа флаг регистрация"}
},
{1,1,
{"ru","Группа флаг регистрация"}
},0,1,0,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},3,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{82,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ДекорацияОтступ",
{1,0},
{1,0},1,0,1,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,0,
{0},"",-1,-1,1,0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},7,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{21,
{83,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияОтступКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,0},0},0,1,
{10,
{84,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияОтступРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{52,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ЛКРегистрацияУС",4,0,
{1,0},
{1,0},
{1,
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ЛКРегистрацияУСПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{53,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЛКРегистрацияУСКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{54,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКРегистрацияУСРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{55,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияЛКРегистрацияУчетнойСистемы",
{1,1,
{"ru","Регистрация конфигурации 1С:Предприятия в ""Личном кабинете"" позволяет:
  ♦ Упростить настройку обмена данными между конфигурацией 1С:Предприятия и мобильными устройствами.
  ♦ Автоматически получать обновления модуля обмена данными с учетом версии конфигурации 1С:Предприятия.
  ♦ Обмениваться данными с мобильными устройствами с использованием функционала обмена из ""Личного кабинета"".
  ♦ Сохранять и получать настройки модуля обмена из ""Личного кабинета""."}
},
{1,0},1,80,0,2,2,
{3,3,
{0,ad87bd29-0ad1-4da4-ac62-38e714e0cb9f}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{56,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияЛКРегистрацияУчетнойСистемыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Регистрация конфигурации 1С:Предприятия в ""Личном кабинете"" позволяет:
  ♦ Упростить настройку обмена данными между конфигурацией 1С:Предприятия и мобильными устройствами.
  ♦ Автоматически получать обновления модуля обмена данными с учетом версии конфигурации 1С:Предприятия.
  ♦ Обмениваться данными с мобильными устройствами с использованием функционала обмена из ""Личного кабинета"".
  ♦ Сохранять и получать настройки модуля обмена из ""Личного кабинета""."}
},1},0,1,
{10,
{57,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияЛКРегистрацияУчетнойСистемыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},1,0,1,
{10,
{81,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаФлагРегистрацияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{50,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаЛКРегистрация",
{1,1,
{"ru","Сведения о регистрации учетной системы"}
},
{1,1,
{"ru","Группа ЛКРегистрация"}
},0,1,0,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,1,1,1,
{1,0},0,0,3,3,2,0,1,0},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{58,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаЛКДействияРегистрация",
{1,1,
{"ru","Группа ЛКДействия регистрация"}
},
{1,1,
{"ru","Группа ЛКДействия регистрация"}
},0,1,0,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},5,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{60,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЛКНазваниеУС",1,0,
{1,0},
{1,0},
{2,
{1},
{0,df3355b2-47ce-4a0f-b424-5cd4779f2338}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,1,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ЭлементФормыПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{61,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЛКНазваниеУСКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{62,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКНазваниеУСРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{63,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ЛКЗарегистрировать",
{1,0},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,7,1,
{10,
{64,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКЗарегистрироватьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{65,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЛКИдентификаторУС",1,0,
{1,0},
{1,0},
{2,
{1},
{0,f2adee0e-5005-49f9-9b77-2fb53d705ad1}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,0,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{66,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЛКИдентификаторУСКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{67,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКИдентификаторУСРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{68,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЛКТокенУС",1,0,
{1,1,
{"ru","Токен передачи данных"}
},
{1,0},
{2,
{1},
{0,7be727dd-4b8a-491b-8f8e-6bfe8a46fc0f}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,0,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{69,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЛКТокенУСКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{70,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКТокенУСРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{98,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаДействия",
{1,1,
{"ru","Действия"}
},
{1,1,
{"ru","Действия с учетной системой в ""Личном кабинете"""}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},1,1,1,1,
{1,0},0,0,3,3,2,0,1,0},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{71,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ЛКОтменитьРегистрациюУС",
{1,0},1,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{72,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКОтменитьРегистрациюУСРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{85,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ЛКОбновитьСведенияУС",
{1,0},1,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{86,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКОбновитьСведенияУСРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{92,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"СброситьРегистрациюУС",
{1,0},1,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{93,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СброситьРегистрациюУСРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{99,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаДействияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{59,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаЛКДействияРегистрацияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{51,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаЛКРегистрацияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{96,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ЛКРазблокироватьТокен",
{1,0},1,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},0,
{"Pattern"},"",2,0,1,
{10,
{97,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКРазблокироватьТокенРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{77,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ЛКДекорацияОжиданиеОтвета",
{1,1,
{"ru","Ожидание ответа..."}
},
{1,1,
{"ru","Ожидание ответа..."}
},1,2,1,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2Fy
ZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAc5JREFUeNpi/P//PwMlgJEqBliWrUQW
4wHiHCCOAmJdqNhlIF4MxFOA+DtI4HhXOFiCBUz++wfTrAjEu8Jt1VRcDeQYFMX5
wYL3X37U3XHuYdeao7eTgVxPkBBMAxOI+P//HwjzAPGuFFctlSQXLQZZER6Gupoq
hgvnz4PZqW7aDEA5daCaLSC1KAaAXfDvX36IpbJKkIUSw98/f8AYIvUXzgfJAdVo
AQUz0VzwF4SjHHWkGH4DFcIwCPz5+w9FzE5bEqQ2FmYAOAz+//vHycbCrCUpyMnw
B6rx+fNnQIv+Mbx9+4bh8eNHYDFJSSkGCX4OkHp1FAMY/v39++/vf7itIDBv9iww
vW/PbrhYWVUN2EVA9QyoLvj/79fvP//uP3vzSVGMnwssUVRawTB9ykQGFzcPBlU1
iIV/fv9hePT6M0j9TdQwAJoIxIt3nr0H9gIMp2ZkMygqKaOIHbz8EKR2GWosAKMR
iLu3nLp7ZwfIkL9/sOJNJ28zgNQA1U5BD0QQ9QWI/Rftvbrx1YevKk56sgwifJxg
RW8+fWfYd+kxw46zD+4AuW5QtUiB+B+eEq8BseGOM/fygTgZmjIZoClvLhBPRNZM
vcxECQAIMAAd5hycXl6ujwAAAABJRU5ErkJggg==}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{21,
{78,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЛКДекорацияОжиданиеОтветаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Ожидание ответа..."}
},0},8,1,
{10,
{79,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛКДекорацияОжиданиеОтветаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,3,
{-3}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},1,0,1,
{10,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаЛичныйКабинетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0},"
#Область ГлобальныеПеременные

&НаКлиенте
Перем МодульК; // общий клиентский модуль

// ГлобальныеПеременные
#КонецОбласти

#Область СовместимостьСПлатформой_8_3_5

// Подставляет параметры в строку. Максимально возможное число параметров - 5.
// Параметры в строке задаются как %<номер параметра>. Нумерация параметров начинается с единицы.
//
// Параметры:
//  СтрокаПодстановки  - Строка - шаблон строки с параметрами (вхождениями вида ""%ИмяПараметра"");
//  Параметр<n>        - Строка - подставляемый параметр.
//
// Возвращаемое значение:
//  Строка   - текстовая строка с подставленными параметрами.
//
&НаКлиентеНаСервереБезКонтекста
Функция СтрШаблон_(СтрокаПодстановки,
	Параметр1, Параметр2 = Неопределено, Параметр3 = Неопределено, Параметр4 = Неопределено, Параметр5 = Неопределено)
	
	Результат = СтрЗаменить(СтрокаПодстановки, ""%1"", Параметр1);
	Результат = СтрЗаменить(Результат, ""%2"", Параметр2);
	Результат = СтрЗаменить(Результат, ""%3"", Параметр3);
	Результат = СтрЗаменить(Результат, ""%4"", Параметр4);
	Результат = СтрЗаменить(Результат, ""%5"", Параметр5);
	
	Возврат Результат;
	
КонецФункции
	
// Разбивает строку на несколько строк по разделителю. Разделитель может иметь любую длину.
//
// Параметры:
//  Строка                 - Строка - текст с разделителями;
//  Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
//  ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
//    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
//     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
//       включаются в результат.
//     Е если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
//       случае разделителя-пробела результатом функции будет массив, содержащий одно значение """" (пустая строка), а
//       при других разделителях результатом функции будет пустой массив.
//  СокращатьНепечатаемыеСимволы - Булево - сокращать непечатаемые символы по краям каждой из найденных подстрок.
//
// Возвращаемое значение:
//  Массив - массив строк.
&НаКлиентеНаСервереБезКонтекста 
Функция СтрРазделить_(Знач Строка, Знач Разделитель = "","", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь)
	
	Результат = Новый Массив;
	
	// Для обеспечения обратной совместимости.
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = "" "", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = "" "" Тогда
				Результат.Добавить("""");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Строка));
		Иначе
			Результат.Добавить(Строка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

///  Объединяет строки из массива в строку с разделителями.
//
// Параметры:
//  Массив      - Массив - массив строк которые необходимо объединить в одну строку;
//  Разделитель - Строка - любой набор символов, который будет использован в качестве разделителя.
//
// Возвращаемое значение:
//  Строка - строка с разделителями.
// 
&НаКлиентеНаСервереБезКонтекста 
Функция СтрСоединить_(Массив, Разделитель = "","", СокращатьНепечатаемыеСимволы = Ложь)

	Результат = """";
	ТекРазделитель = """";
	
	Для Индекс = 0 По Массив.ВГраница() Цикл
		
		Подстрока = Массив[Индекс];
		
		Если СокращатьНепечатаемыеСимволы Тогда
			Подстрока = СокрЛП(Подстрока);
		КонецЕсли;
		
		Если ТипЗнч(Подстрока) <> Тип(""Строка"") Тогда
			Подстрока = Строка(Подстрока);
		КонецЕсли;
		
		Результат = Результат + ТекРазделитель + Подстрока;
		
		Если Индекс = 0 Тогда
			ТекРазделитель = Разделитель;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

// СовместимостьСПлатформой_8_3_5
#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтррКонтекст = Новый Структура(""Отладка"");
	
	СтррКонтекст.Отладка = Неопределено; //""МУ""; // параметр отладки, возможные значения: 
	    // - Неопределено - отладка выключена,
		// - ""КО"" - эмуляция получения каналов обмена, 
		// - ""МУ"" - эмуляция получения списка МУ.
	
	стррАдресаЛК = Новый Структура;
	стррАдресаЛК.Вставить(""url0"", ""agentplus.online""); // адрес ЛК - ""agentplus.online"", ""apweb:80"".
	стррАдресаЛК.Вставить(""url1"", ""agentplus.online""); // адрес сервиса чеков ""apweb:80"" ""cp.agentplus.online""   
	СтррОперацииЛК = ПолучитьОперацииЛК(стррАдресаЛК); // структуру со всеми операциями API для работы с ЛК
	
	ТекОбъект = РеквизитФормыВЗначение(""Объект"");	
	ТекОбъект.ИнициализироватьКонтекстФормы(СтррКонтекст, Параметры);
	
	ЛКЗапомнитьЛогинИПароль = Истина;
	
	ВосстановитьНастройкиСервер();
	
	Если ПустаяСтрока(Объект.ЛКЛогин) Тогда // логин еще не указывался, по умолчанию рекомендуем запоминать логин
		Объект.ЛКЗапомнитьЛогинИПароль = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ГруппаКоманднаяПанель.ЦветФона = СтррКонтекст.Цвета.ФонРаздела;	
	УстановитьМодифицированостьФормы(Ложь);
	
	Элементы.ЛКДекорацияОжиданиеОтвета.Видимость = Ложь;
	ЛКРегистрацияУчетнойСистемыОбновитьФорму();
	
	ПодключитьОбработчикОжидания(""ЛКПроверитьЗавершениеОперации"", 1, Истина); // проверяем - есть ли незавершенные операции с ЛК от предыдущего сеанса?
	
	Если СтррКонтекст.Отладка <> Неопределено Тогда
		Сообщить(""Внимание!!! Включен режим отладки: "" + СтррКонтекст.Отладка);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.Модифицированность Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения(""СохранитьВсеПродолжить"", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр(""ru = 'Данные были изменены. Сохранить изменения?'""), РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = ""АПНастройкиСброшены"" Тогда
		
		ЭтаФорма.Модифицированность = Ложь;
		Закрыть();
		
	ИначеЕсли ИмяСобытия = ""АППроверкаУникальностиЗапускаОбработкиОбмена"" Тогда
		
		Если Параметр <> СтррКонтекст.ВХОбщиеПараметры Тогда // второй экземпляр обработки справшивает - уже открыта обработка или нет
			Оповестить(""АПЗакрытьОбработкуОбменДанными"", Параметр); // шлем событие закрытия обработки с конкретным ключем сеанса
		КонецЕсли; 
		
	ИначеЕсли ИмяСобытия = ""АПЗакрытьФормуОбработки"" Тогда
		
		Если Параметр = ""*"" Или Найти("",""+Параметр+"","", "",ЛичныйКабинет,"") <> 0 Тогда
			Если ЭтаФорма.Открыта() Тогда
				ЭтаФорма.Модифицированность = Ложь;
				ЭтаФорма.Закрыть();
			КонецЕсли; 
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

// ОбработчикиСобытийФормы
#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСправка(Команда)

	ОткрытьФормуОбработки(""МодульСправки"").ВнешнийВызовОткрытьСправку(ЭтаФорма.ИмяФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьВсе(Команда)

	СохранитьНастройкиКлиент();
	
КонецПроцедуры

#Область ОбработчикиКомандФормы_КомандыЛК

&НаКлиенте
Процедура КомандаЛКВойтиЧерезБраузер(Команда)
	
	ЗапуститьПриложение(""http://agentplus.online/"");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЛКПроверитьПодключение(Команда)
	
	Если ЛКПроверитьЛогинИПароль() Тогда	
		стррJSON = ЛКОперацияВыполнить(""УСРегистрацияТест"",, Ложь);
		Если стррJSON <> Неопределено Тогда
			Текст = СтрШаблон_(НСтр(""ru='Код ответа %1.'""), стррJSON.КодСостояния) + "" "";
			Если стррJSON.КодСостояния = 400 Тогда
				Если стррJSON.Свойство(""ErrorCode"") Тогда
					Если стррJSON.ErrorCode = 1 Тогда // ошибка ""User with this login and password is not found!""
						Текст = Текст + НСтр(""ru='Неверный логин или пароль.'"");
					Иначе // любой адекватный ответ со свойством ErrorCode считаем прошедшим проверку на логин и пароль
						Текст = НСтр(""ru='Подключение установлено успешно.'"");
					КонецЕсли; 
				Иначе
					Текст =	ЛКОписаниеОшибки(НСтр(""ru='Ошибка подключения.'""), стррJSON.КодСостояния, стррJSON);
				КонецЕсли; 
			ИначеЕсли стррJSON.КодСостояния = 0 Тогда
				Текст = Текст + НСтр(""ru='Ошибка подключения к Интернет или некорректный адрес.'"");
			Иначе
				Текст = ЛКОписаниеОшибки(НСтр(""ru='Ошибка подключения.'""), стррJSON.КодСостояния, стррJSON);
			КонецЕсли; 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЛКЗарегистрироватьУС(Команда)
	
	Если Не ЛКПроверитьЛогинИПароль() Тогда
	ИначеЕсли ПустаяСтрока(Объект.ЛКНазваниеУС) Тогда
		Текст = НСтр(""ru='Укажите название учетной системы для регистрации в """"Личном кабинете"""". Например, """"Основная"""".'"");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,, ""Объект.ЛКНазваниеУС"");
	ИначеЕсли ЭтаФорма.Модифицированность Тогда
		Оповещение = Новый ОписаниеОповещения(""СохранитьВсеПередДействием"", ЭтотОбъект, ""УСРегистрация"");
		ПоказатьВопрос(Оповещение, НСтр(""ru = 'Настройки были изменены. Сохранить изменения?'""), РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		ЛКНачалоПодключения(""УСРегистрация"");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаЛКОбновитьСведенияУС(Команда)
	
	Если Не ЛКПроверитьЛогинИПароль() Тогда
	ИначеЕсли ЭтаФорма.Модифицированность Тогда
		Оповещение = Новый ОписаниеОповещения(""СохранитьВсеПередДействием"", ЭтотОбъект, ""УСОбновитьСведения"");
		ПоказатьВопрос(Оповещение, НСтр(""ru = 'Настройки были изменены. Сохранить изменения?'""), РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		ЛКНачалоПодключения(""УСОбновитьСведения"");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаЛКОтменитьРегистрациюУС(Команда)

	Текст = НСтр(""ru = 'Отменить регистрацию учетной системы в """"Личном кабинете""""?
		|После отмены станут недоступны некоторые сервисы """"Личного кабинета"""" (автоматическое получение обновлений,
		|обмен данными с использованием функционала """"Личного кабинета""""). Продолжить?'"");
	Текст = СтрЗаменить(Текст, Символы.ПС, "" ""); 
	Оповещение = Новый ОписаниеОповещения(""КомандаЛКОтменитьРегистрациюУСПродолжить"", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЛКОтменитьРегистрациюУСПродолжить(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
		
	Если Не ЛКПроверитьЛогинИПароль() Тогда
	ИначеЕсли ЭтаФорма.Модифицированность Тогда
		Оповещение = Новый ОписаниеОповещения(""СохранитьВсеПередДействием"", ЭтотОбъект, ""УСУдалить"");
		ПоказатьВопрос(Оповещение, НСтр(""ru = 'Настройки были изменены. Сохранить изменения?'""), РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		ЛКНачалоПодключения(""УСУдалить"");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСброситьРегистрациюУС(Команда)
	Текст = НСтр(""ru = 'Очистить сведения о регистрации учетной системы? Операция выполнится без обращения к """"Личному кабинету"""". 
		|Не рекомендуется ее применять, если в ЛК сохранились сведения о регистрации текущей учетной системы.
		|Продолжить?'"");
	Текст = СтрЗаменить(Текст, Символы.ПС, "" ""); 
	Оповещение = Новый ОписаниеОповещения(""КомандаСброситьРегистрациюУСПродолжить"", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНетОтмена);
КонецПроцедуры

&НаКлиенте
Процедура КомандаСброситьРегистрациюУСПродолжить(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ЛКИдентификаторУС = """";
		Объект.ЛКТокенУС 		 = """";
		УстановитьМодифицированостьФормы(Истина);
		ЛКРегистрацияУчетнойСистемыОбновитьФорму();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЛКНетДоступа(Команда)
	
	ОткрытьФормуОбработки(""ЛичныйКабинетЗаявка"");
	
КонецПроцедуры

&НаКлиенте
Процедура ЛКНетДоступаПродолжить(РезультатОтвета, ДополнительныеПараметры) Экспорт
	
	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		Сообщить(""Сейчас будет"");
	КОнецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЛКЧтоТакоеЛК(Команда)
	
	Текст = НСтр(""ru='Показать описание """"Личного кабинета""""? Будет открыта страница в веб-браузере.'"");
	Оповещение = Новый ОписаниеОповещения(""ЧтоТакоеЛКПродолжить"", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧтоТакоеЛКПродолжить(РезультатОтвета, ДополнительныеПараметры) Экспорт
	
	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		ЗапуститьПриложение(""http://www.agentplus.ru/cp/"");	
	КонецЕсли;
	
КонецПроцедуры

//  ОбработчикиКомандФормы_КомандыЛК
#КонецОбласти

#Область ОбработчикиКомандФормы_НавигацияПоФормам

&НаКлиенте
Процедура КомандаПоказатьГлавнуюФорму(Команда)
	
	ОткрытьФормуОбработки(""ГлавнаяФорма"");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьНастройкиОбмена(Команда)

	ОткрытьФормуОбработки(""НастройкиМодуля"");

КонецПроцедуры

&НаКлиенте
Функция ОткрытьФормуОбработки(ИмяФормы, стррПараметры = Неопределено, Уникальность = Неопределено, Оповещение = Неопределено)
	
	Если стррПараметры = Неопределено Тогда
		стррПараметры = Новый Структура;
	КонецЕсли; 
	стррПараметры.Вставить(""ВХОбщиеПараметры"", СтррКонтекст.ВХОбщиеПараметры);
	Возврат ОткрытьФорму(СтррКонтекст.ПутьКФорме + ИмяФормы, стррПараметры, ЭтаФорма, Уникальность,,, Оповещение);
	
КонецФункции

// ОбработчикиКомандФормы_НавигацияПоФормам
#КонецОбласти

// ОбработчикиКомандФормы
#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭлементФормыПриИзменении(Элемент)
	
	УстановитьМодифицированостьФормы(Истина);
	
	ПоляУдаленияПробелов = ""ЛКЛогин,ЛКНазваниеУС"";
	
	Имя = Элемент.Имя;	
	Если 0 <> Найти("",""+ПоляУдаленияПробелов+"","", "",""+Имя+"","") Тогда
		Объект[Имя] = СокрЛП(Объект[Имя]);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛКРегистрацияУСПриИзменении(Элемент)
	
	Если ФлагЛКРегистрацияУС И ПустаяСтрока(Объект.ЛКНазваниеУС) Тогда
		Объект.ЛКНазваниеУС = ""Основная"";
	КонецЕсли;
	
	ЛКРегистрацияУчетнойСистемыОбновитьФорму();
	
КонецПроцедуры

// ОбработчикиСобытийЭлементовШапкиФормы
#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункции_ХранилищеНастроек

&НаСервере
Процедура ВосстановитьНастройкиСервер()

	ТекОбъект = РеквизитФормыВЗначение(""Объект"");
	ТекОбъект.ВосстановитьЗначенияНастроекОбработки(НастройкиФормы(ТекОбъект));
	ЗначениеВРеквизитФормы(ТекОбъект, ""Объект"");
	
	Если Не Объект.ЛКЗапомнитьЛогинИПароль Тогда // от предыдущей версии мог остаться логин и пароль в БД
		Объект.ЛКЛогин  = """";
		Объект.ЛКПароль = """";
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Функция НастройкиФормы(ТекОбъект)

	СтрРеквизиты = ""ЛКПодтверждение,""; // добавили реквизит обработки, отсутствующий на форме
	
	Для Каждого ЭлементМетаданных Из ТекОбъект.Метаданные().Реквизиты Цикл
		Если ЭтаФорма.Элементы.Найти(ЭлементМетаданных.Имя) <> Неопределено Тогда
			СтрРеквизиты = СтрРеквизиты + ЭлементМетаданных.Имя + "","";
		КонецЕсли;
	КонецЦикла;
	
	Возврат Лев(СтрРеквизиты, СтрДлина(СтрРеквизиты)-1);

КонецФункции

&НаКлиенте
Процедура СохранитьНастройкиКлиент()
	
	УстановитьМодифицированостьФормы(Ложь);
	СохранитьНастройкиСервер();
	Оповестить(""АПЛКИзменение"", Неопределено);

КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиСервер()

	ТекОбъект = РеквизитФормыВЗначение(""Объект"");
	Если Не Объект.ЛКЗапомнитьЛогинИПароль Тогда // сохраняем в хранилище пустые логин и пароль
		ТекОбъект.ЛКЛогин  = """";
		ТекОбъект.ЛКПароль = """";
	КонецЕсли; 
	ТекОбъект.СохранитьЗначенияНастроекОбработки(НастройкиФормы(ТекОбъект));
	
КонецПроцедуры

&НаСервере
Функция ПрочитатьЗначениеНастройки(ИмяНастройки)
	
	Возврат РеквизитФормыВЗначение(""Объект"").ПрочитатьЗначениеНастройки(ИмяНастройки);
	
КонецФункции 

&НаСервере
Процедура СохранитьЗначениеНастройки(ИмяНастройки, Значение)
	
	РеквизитФормыВЗначение(""Объект"").СохранитьЗначениеНастройки(ИмяНастройки, Значение);
	
КонецПроцедуры

// СлужебныеПроцедурыИФункции_ХранилищеНастроек
#КонецОбласти

#Область СлужебныеПроцедурыИФункции_Форма

&НаКлиенте
Процедура УстановитьМодифицированостьФормы(Режим)
	
	ЭтаФорма.Модифицированность = Режим;
	Элементы.СохранитьВсе.ЦветТекста = СтррКонтекст.Цвета[?(Режим, ""ТекстВнимание"", ""Авто"")];
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВсеПродолжить(РезультатОтвета, ДополнительныеПараметры) Экспорт
	
	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		СохранитьНастройкиКлиент();
		Закрыть();
	ИначеЕсли РезультатОтвета = КодВозвратаДиалога.Нет Тогда
		УстановитьМодифицированостьФормы(Ложь);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УказатьЛогинИлиПарольЛКПродолжить(РезультатОтвета, мПараметры) Экспорт
	
	Оповестить(""АППрерватьБыструюНастройку"", Неопределено);	
	
	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		СообщитьОбУказанииРеквизитов(мПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СообщитьОбУказанииРеквизитов(мПараметры) Экспорт
	
	Если Не ЭтаФорма.Открыта() Тогда
		ЭтаФорма.Открыть();
	Иначе
		ЭтаФорма.Активизировать();
	КонецЕсли; 

	ОчиститьСообщения();
	Для Каждого стррПараметр Из мПараметры  Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтррПараметр.Описание,, ""Объект."" + СтррПараметр.Реквизит);	
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВсеПередДействием(РезультатОтвета, ДополнительныеПараметры) Экспорт
	
	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		СохранитьНастройкиКлиент();
		ЛКНачалоПодключения(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Функция ЛКПроверитьЛогинИПароль()
	
	Если ПустаяСтрока(Объект.ЛКЛогин) Или ПустаяСтрока(Объект.ЛКПароль) Тогда

		Если ПустаяСтрока(Объект.ЛКЛогин) И ПустаяСтрока(Объект.ЛКПароль) Тогда
			Текст = НСтр(""ru='Не заполнены логин и пароль для доступа в """"Личный кабинет"""". Хотите указать логин?'"");
		ИначеЕсли ПустаяСтрока(Объект.ЛКЛогин) Тогда
			Текст = НСтр(""ru='Не заполнен логин для доступа в """"Личный кабинет"""". Хотите указать логин?'"");
		Иначе
			Текст = НСтр(""ru='Не заполнен пароль для доступа в """"Личный кабинет"""". Хотите указать пароль?'"");
		КонецЕсли;
		
		мПараметры = Новый Массив;		
		Если ПустаяСтрока(Объект.ЛКЛогин) Тогда
			мПараметры.Добавить(Новый Структура(""Описание,Реквизит"", НСтр(""ru='Заполните логин для доступа в """"Личный кабинет"""".'""), ""ЛКЛогин""));
		КонецЕсли; 
		Если ПустаяСтрока(Объект.ЛКПароль) Тогда
			мПараметры.Добавить(Новый Структура(""Описание,Реквизит"", НСтр(""ru='Заполните пароль для доступа в """"Личный кабинет"""".'""), ""ЛКПароль""));
		КонецЕсли; 
		
		Оповещение = Новый ОписаниеОповещения(""УказатьЛогинИлиПарольЛКПродолжить"", ЭтотОбъект, мПараметры);
		ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНетОтмена);
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПерейтиВЛКПродолжить(РезультатОтвета, ДополнительныеПараметры) Экспорт
	
	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		Если ЭтаФорма.Открыта() И ЭтаФорма.ВводДоступен() Тогда
			КомандаЛКВойтиЧерезБраузер(Неопределено);
		Иначе
			Открыть();
		КонецЕсли; 
		Если ТипЗнч(ДополнительныеПараметры) = Тип(""Строка"") Тогда // передана строка-подсказка, ее нужно вывести в сообщении
			Сообщить(ДополнительныеПараметры);
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОкноФормыЛКПродолжить(РезультатОтвета, ДополнительныеПараметры) Экспорт
	
	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		Открыть();
	КонецЕсли;
	
КонецПроцедуры

// СлужебныеПроцедурыИФункции_Форма
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_ОписаниеКонфигурации1С

&НаСервере
Функция ПолучитьПоколениеВерсииКонфигурации1С() 
	
	мНомераВерсии = СтрРазделить_(Метаданные.Версия, ""."");
	ВсегоПодВерсий = Мин(мНомераВерсии.Количество(), 2);
	
	Для Поз = 0 По ВсегоПодВерсий - 1 Цикл
		Номер = СокрЛП(мНомераВерсии[Поз]);
		мНомераВерсии[Поз] = ?(Номер = """", ""0"", Номер);
	КонецЦикла;
	
	Если ВсегоПодВерсий > 1 Тогда
		Результат = СокрЛП(мНомераВерсии[0]) + ""."" + СокрЛП(мНомераВерсии[1]);
	ИначеЕсли ВсегоПодВерсий = 1 Тогда
		Результат = СокрЛП(мНомераВерсии[0]) + "".0"";
	Иначе
		Результат = ""0.0"";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Процедура дополняет структуру описанием конфигурации 1С.
//	
//	Параметры:	
//		Структура - Структура - структура для вставки описания конфигурации 1С.
//	
&НаСервере
Функция ПолучитьОписаниеКонфигурации1С(Структура = Неопределено)

	Если Структура = Неопределено Тогда
		Структура = Новый Структура;
	КонецЕсли; 
	
	Структура.Вставить(""ProductName"", 		Метаданные.Имя);
	Структура.Вставить(""ProductAlias"", 		Метаданные.Синоним);
	Структура.Вставить(""ProductGeneration"",	ПолучитьПоколениеВерсииКонфигурации1С());
	Структура.Вставить(""ProductVersion"",  	Метаданные.Версия); 
	Структура.Вставить(""Compatibility"", 	Строка(Метаданные.РежимСовместимости));
	Структура.Вставить(""UICompatibility"",	Строка(Метаданные.РежимСовместимостиИнтерфейса));
	Структура.Вставить(""IsProductModified"",	Ложь);
	
	Возврат Структура;

КонецФункции

&НаСервере
Функция ПолучитьНазваниеУС()
	
	Если Не ПустаяСтрока(Метаданные.Синоним) Тогда
		Результат = Метаданные.Синоним;
	Иначе
		Результат = Метаданные.Имя;
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ОписаниеКонфигурации1СОтличаетсяОтЛК(СтррОписаниеИзЛК)

	СтррОписание1С = ПолучитьОписаниеКонфигурации1С();
	
	ЕстьОтличия = Ложь;
	Для каждого Элемент Из СтррОписание1С Цикл
		ЗначениеВЛК = СтррОписаниеИзЛК[Элемент.Ключ];
		Если Элемент.Значение <> ЗначениеВЛК Тогда
			Если Не ЕстьОтличия Тогда
				ЕстьОтличия = Истина;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр(""ru = 'Отличаются свойства конфигурации:'""));
			КонецЕсли;
			Текст = СтрШаблон_(НСтр(""ru = 'Свойство """"%1"""". Текущее значение: """"%2"""". Значение в ЛК: """"%3"""".'""),
						Элемент.Ключ, Элемент.Значение, ЗначениеВЛК);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат ЕстьОтличия;
	          
КонецФункции

// СлужебныеПроцедурыИФункции_ОписаниеКонфигурации1С
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_РегистрацияУС

&НаКлиенте
Процедура ЛКРегистрацияУчетнойСистемыОбновитьФорму()
	
	Если Не ПустаяСтрока(Объект.ЛКИдентификаторУС) Тогда
		ФлагЛКРегистрацияУС = Истина;
		ЗаголовокГруппы = НСтр(""ru = 'Сведения о регистрации учетной системы'"");
	Иначе
		ЗаголовокГруппы = НСтр(""ru = 'Сведения для регистрации учетной системы'"")
	КонецЕсли;
	
	Элементы.ГруппаЛКДействияРегистрация.Видимость = ФлагЛКРегистрацияУС;
	Элементы.ДекорацияЛКРегистрацияУчетнойСистемы.Видимость = Не ФлагЛКРегистрацияУС;
	
	ВидимостьКнопкиРегистрацииУС = ПустаяСтрока(Объект.ЛКИдентификаторУС);
	
	Элементы.ЛКРегистрацияУС.Видимость 			= ВидимостьКнопкиРегистрацииУС;
	Элементы.ЛКЗарегистрировать.Видимость 		= ВидимостьКнопкиРегистрацииУС;
	Элементы.ЛКОтменитьРегистрациюУС.Видимость 	= Не ВидимостьКнопкиРегистрацииУС;
	Элементы.ЛКОбновитьСведенияУС.Видимость 	= Не ВидимостьКнопкиРегистрацииУС;
	Элементы.ЛКНазваниеУС.ТолькоПросмотр  		= Не ВидимостьКнопкиРегистрацииУС;
	Элементы.СброситьРегистрациюУС.Видимость	= Не ВидимостьКнопкиРегистрацииУС;
	
	Элементы.ЛКИдентификаторУС.Видимость 		= Не ВидимостьКнопкиРегистрацииУС;
	Элементы.ЛКТокенУС.Видимость 				= Не ВидимостьКнопкиРегистрацииУС;
	
	Элементы.ГруппаЛКРегистрация.Заголовок = ЗаголовокГруппы;
	
КонецПроцедуры

&НаКлиенте 
Функция ЛКПроверитьРегистрациюУчетнойСистемы(БыстраяНастройка)
	
	Если ПустаяСтрока(Объект.ЛКИдентификаторУС) Тогда
		Если БыстраяНастройка Тогда // автономно регистриуем УС в ЛК
			Возврат ЛКБыстраяРегистрацияУчетнойСистемы();
		Иначе
			Текст = НСтр(""ru='Не зарегистрирована учетная система в """"Личном кабинете"""". Перейти в """"Личный кабинет"""" для регистрации учетной системы?'"");
			Оповещение = Новый ОписаниеОповещения(""ОткрытьОкноФормыЛКПродолжить"", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНетОтмена);
			Возврат Ложь;
		КонецЕсли; 
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте 
Функция ЛКБыстраяРегистрацияУчетнойСистемы()
	
	Концовка = Формат(ТекущаяДата(), ""ДФ='dd.MM.yyyy HH:mm:ss'"");
	Объект.ЛКНазваниеУС = ПолучитьНазваниеУС() + "" ("" + Концовка + "")"";
	Объект.ЛКЗапомнитьЛогинИПароль = Истина;
	ОперацияУСРегистрация();
	Возврат Не ПустаяСтрока(Объект.ЛКИдентификаторУС);
	
КонецФункции

// СлужебныеПроцедурыИФункции_РегистрацияУС
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_ВебСервисЛК_ОбщиеПроцедурыОпераций

&НаКлиенте 
Процедура ЛКНачалоПодключения(Операция)

	ОчиститьСообщения();
	стррОперация = СтррОперацииЛК[Операция];
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон_(Нстр(""ru = 'Соединение с %1 ...'""), стррОперация.url));
	Элементы.ЛКДекорацияОжиданиеОтвета.Видимость = Истина;
	ПодключитьОбработчикОжидания(""Операция"" + Операция, 1, Истина);

КонецПроцедуры

// Функция возвращает структуру со списком всех операций API ЛК.
&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьОперацииЛК(стррАдресаЛК)
	
	мОперации = Новый Массив;
	
	// В опциях указываются параметры передаваемого запроса в ЛК или признаки обработки его результатов:
	// - СвойстваКонфигурации - передавать сведения о конфигурации 1С.
	// - Авторизация		  - требуется авторизация в ЛК.
	// - БезПодтверждения	  - запрос не требует подтверждения.
	// - Get	  			  - get-запрос (если не указан, то put-запрос).
	
	//					Операция - 0		url - 1	path - 2							Опции - 3							Представление операции - 4
	мОперации.Добавить(""УСРегистрация;		url0;	api/erpsystem/actions/register;		СвойстваКонфигурации;				Регистрация УС в ЛК"");
	мОперации.Добавить(""УСРегистрацияТест;	url0;	api/erpsystem/actions/register;		БезПодтверждения; 					Проверка логина и пароля"");
	мОперации.Добавить(""УСОбновитьСведения;	url0;	api/erpsystem/actions/update;		СвойстваКонфигурации,Авторизация; 	Обновить сведения об УС в ЛК"");
	мОперации.Добавить(""УСУдалить;			url0;	api/erpsystem/actions/delete;		Авторизация;						Удалить сведения об УС из ЛК"");
	мОперации.Добавить(""УСПолучитьСведения;	url0;	api/erpsystem;						Авторизация,БезПодтверждения;		Получить сведения об УС из ЛК"");
	мОперации.Добавить(""КОПолучитьСписок;	url1;	api/my/settings/exchange/channels;	Авторизация,БезПодтверждения,Get;	Получить список каналов обмена из ЛК"");
	мОперации.Добавить(""МУПолучитьСписок;	url1;	api/my/devices;						Авторизация,БезПодтверждения,Get;	Получить список мобильных устройств из ЛК"");
	
	СтррОперации = Новый Структура;
	
	Для каждого стрСписок Из мОперации Цикл
		мЗначения = СтрРазделить_(СтрСписок, "";"",, Истина);
		СтррОперации.Вставить(мЗначения[0], Новый Структура(""url,path,Опции,Представление"", стррАдресаЛК[мЗначения[1]], мЗначения[2], мЗначения[3], мЗначения[4]));
	КонецЦикла; 
	
	Возврат СтррОперации;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЛКОписаниеКодаСостояния(КодСостояния)
	
	Если КодСостояния = 200 Тогда
		Результат = НСтр(""ru = 'Ошибок нет.'""); 
	ИначеЕсли КодСостояния = 400 Тогда
		Результат = НСтр(""ru = 'Неверный запрос.'""); 
	ИначеЕсли КодСостояния = 401 Тогда
		Результат = НСтр(""ru = 'Неавторизованный запрос.'""); 
	ИначеЕсли КодСостояния = 404 Тогда
		Результат = НСтр(""ru = 'Неверный адрес ресурса или команда не поддерживается.'""); 
	ИначеЕсли КодСостояния = 500 Тогда
		Результат = НСтр(""ru = 'Внутренняя ошибка сервера.'""); 
	ИначеЕсли КодСостояния = 503 Тогда
		Результат = НСтр(""ru = 'Сервис недоступен.'""); 
	Иначе
		Результат = """";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
	
&НаКлиентеНаСервереБезКонтекста
Функция ЛКОписаниеОшибки(ЗаголовокОшибки, КодСостояния, стррJSON)
	
	Текст = СтрШаблон_(НСтр(""ru = 'Код ответа %1.'""), КодСостояния) + "" ""; 
	
	ОписаниеОтвета = """";
	Если стррJSON.Свойство(""ErrorCode"") Тогда
		ОписаниеОтвета = ОписаниеОтвета + ""("" + Строка(стррJSON.ErrorCode) + "") "";
	КонецЕсли; 
	Если стррJSON.Свойство(""Message"") Тогда
		ОписаниеОтвета = ОписаниеОтвета + стррJSON.Message + "" "";
	КонецЕсли;
	
	Если ОписаниеОтвета = """" Тогда
		ОписаниеОтвета = ЛКОписаниеКодаСостояния(КодСостояния);
	КонецЕсли; 
	
	Если ОписаниеОтвета <> """" Тогда
	    Текст = Текст + НСтр(""ru = 'Описание: '"") + ОписаниеОтвета; 
	КонецЕсли; 
	
	Возврат ЗаголовокОшибки + "" "" + Текст;
	
КонецФункции

// Функция возвращает структуру JSON, полученную из HTTP-запроса или Неопределено, если произошла ошибка.
// Описание ошибки возвращается в параметре ТекстОшибки.
&НаКлиенте
Функция ЛКОтправитьЗапрос(СтррСвойства, ТекстОшибки)

	IsPutQuery = Не СтррСвойства.Свойство(""Get"");
	Если IsPutQuery Тогда // 
		ТелоЗапроса = ПреобразоватьJSONВСтроку(СтррСвойства.Параметры);
	КонецЕсли; // для Get-запроса тело запроса не используем

	Соединение = Новый HTTPСоединение(СтррСвойства.url);
	
	HTTPЗапрос = Новый HTTPЗапрос(СтррСвойства.АдресРесурса);
	HTTPЗапрос.Заголовки.Вставить(""Content-Type"",""application/json; charset=utf-8"");
	
	Если СтррСвойства.Свойство(""Заголовки"") И ТипЗнч(СтррСвойства.Заголовки) = Тип(""Структура"") Тогда
		Для каждого Элемент Из СтррСвойства.Заголовки Цикл
			HTTPЗапрос.Заголовки.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла; 
	КонецЕсли; 
	
	Если IsPutQuery Тогда
		HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	КонецЕсли; 
	
	ЗаголовокОшибки = ТекстОшибки;
	
	Попытка
		Если IsPutQuery Тогда
			HTTPОтвет = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
		Иначе
			
			Если СтррКонтекст.Отладка = Неопределено Тогда
				HTTPОтвет = Соединение.Получить(HTTPЗапрос);
			Иначе
				HTTPОтвет = Новый Структура(""КодСостояния"", 200);
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтррКонтекст.Отладка = Неопределено Тогда
			ТелоОтвета = HTTPОтвет.ПолучитьТелоКакСтроку();
		Иначе
			ТелоОтвета = ""Отладка!"";
		КонецЕсли;
		
	Исключение
		ТекстОшибки = ЗаголовокОшибки + "" "" + НСтр(""ru = 'Ошибка работы с Интернет.'"");
	КонецПопытки;

	стррJSON = Неопределено;
	
	Если ЗначениеЗаполнено(ТелоОтвета) Тогда
		Попытка
			стррJSON = ПреобразоватьСтрокуВJSON(ТелоОтвета);
		Исключение
			ТекстОшибки = ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли; 
	
	Если стррJSON = Неопределено Тогда
		стррJSON = Новый Структура;
	КонецЕсли; 
	
	стррJSON.Вставить(""КодСостояния"", 0); // 0 - внутренняя ошибка
	
	Если HTTPОтвет <> Неопределено Тогда
		Если HTTPОтвет.КодСостояния = 200 Тогда // успешный ответ от сервера	
			ТекстОшибки = """";
		Иначе
			ТекстОшибки = ЛКОписаниеОшибки(ЗаголовокОшибки, HTTPОтвет.КодСостояния, стррJSON);
		КонецЕсли;
		стррJSON.КодСостояния = HTTPОтвет.КодСостояния;
	КонецЕсли; 
	
	Элементы.ЛКДекорацияОжиданиеОтвета.Видимость = Ложь; // функция после ответа от ЛК скрывает элемент ожидания на форме
	
	Возврат стррJSON;

КонецФункции

// СлужебныеПроцедурыИФункции_ВебСервисЛК_ОбщиеПроцедурыОпераций
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_ВебСервисЛК_СтартОпераций

&НаКлиенте
Процедура ОперацияУСРегистрация()
	
	стррJSON = ЛКОперацияВыполнить(""УСРегистрация"");
	Если стррJSON.КодСостояния = 200 Тогда
		Объект.ЛКИдентификаторУС = стррJSON.Key;
		Объект.ЛКТокенУС 		 = стррJSON.Token;
		СохранитьНастройкиКлиент(); // сохраняем настройки в хранилище
		ЛКОперацияВыполнить(""complete*"");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОперацияУСОбновитьСведения()

	стррJSON = ЛКОперацияВыполнить(""УСПолучитьСведения""); // сначала получаем сведения из ЛК, чтобы их сверить с текущими сведениями УС
	Если стррJSON.КодСостояния = 200 Тогда
		Если Не ОписаниеКонфигурации1СОтличаетсяОтЛК(стррJSON) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр(""ru = 'Описание конфигурации не отличается от описания в ЛК.'""));
			Возврат;
		КонецЕсли; 		
	Иначе
		Возврат; // произошла ошибка
	КонецЕсли;
	
	стррJSON = ЛКОперацияВыполнить(""УСОбновитьСведения"");
	Если стррJSON.КодСостояния = 200 Тогда
		СохранитьНастройкиКлиент(); // сохраняем настройки в хранилище
		ЛКОперацияВыполнить(""complete*"");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОперацияУСУдалить()

	стррJSON = ЛКОперацияВыполнить(""УСУдалить"");	
	Если стррJSON.КодСостояния = 200 Тогда
		СохранитьНастройкиКлиент(); // сохраняем настройки в хранилище
		ЛКОперацияВыполнить(""complete*"");
	ИначеЕсли стррJSON.КодСостояния = 400 И стррJSON.ErrorCode = 4 Тогда // УС с заданным идентификатором (Key) в ЛК не найдена, просто очищаем данные об УС
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр(""ru = 'Ошибка 400 проигнорирована как некритичная...'""));
		ЛКОперацияЗавершить(""УСУдалить"", Истина);
	КонецЕсли;

КонецПроцедуры

// СлужебныеПроцедурыИФункции_ВебСервисЛК_СтартОпераций
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_ВебСервисЛК_РаботаОпераций

// Функция генерирует и выполняет HTTP-запрос к ЛК в соответствии с операцией (в т.ч. и запросы подтверждения операции).
// В случае ошибки работы операции выводит сообщение с описанием причины ошибки.
// 
// Параметры:
// 		Операция - Строка - название операции. Является именем свойства структуры СтррОперацииЛК. 
//					Если указано значение ""complete*"", то это означает команду подтверждания предыдущей операции.
//					Свойства подтверждаемой операции берутся из атрибута Объект.ЛКПодтверждение (тип - Структура).
//
// Возвращаемое значение - структура ответа JSON с обязательным свойством КодСостояния, в котором 
//							возвращается HTTP-код состояния (200 - успешное заврешение).
//
&НаКлиенте
Функция ЛКОперацияВыполнить(Знач Операция, ПоказатьСостояние = Ложь, ВыводитьСообщения = Истина)
	
	Если Операция = ""complete*"" Тогда // подтверждение предыдущей операции
		Операция = Объект.ЛКПодтверждение.Операция;
	Иначе
		Объект.ЛКПодтверждение = Неопределено; 
	КонецЕсли;
	
	Если Не (СтррОперацииЛК.Свойство(Операция)) Тогда
	    ВызватьИсключение(""Процедура ЛКОперацияВыполнить(), неизвестный параметр Операция = "" + Операция);
	КонецЕсли; 
	
	РежимПодтверждения = Объект.ЛКПодтверждение <> Неопределено; // признак запроса ""подтверждение операции""
	
	Если Операция = ""УСРегистрация"" Или Операция = ""УСРегистрацияТест"" Тогда
		СтрПараметры = ""Name,Login,Password"" + ?(РежимПодтверждения, "",Key,Token"", """");
	Иначе
		СтрПараметры = ""Key"";
	КонецЕсли;
	
	стррОперация = СтррОперацииЛК[Операция];
	Если ПоказатьСостояние Тогда
		Состояние(СтрШаблон_(НСтр(""ru = '%1 - Выполняется операция """"%2""""...'""), стррОперация.url, стррОперация.Представление));
	КонецЕсли; 
	
	СтррСвойства = ЛКСвойстваЗапроса(СтрПараметры + ?(РежимПодтверждения, "",Signature"", """"), стррОперация.Опции);
	
	ТекстОшибки = СтрШаблон_(?(РежимПодтверждения, НСтр(""ru = 'Ошибка подтверждения операции """"%1""""!'""), 
		НСтр(""ru = 'Ошибка выполнения операции """"%1""""!'"")), стррОперация.Представление);
		
	СтррСвойства.Вставить(""АдресРесурса"", стррОперация.path + ?(РежимПодтверждения, ""/complete"", """")); // формат адреса ресурса подтверждения: Операция + ""/complete""
	СтррСвойства.Вставить(""url"", стррОперация.url);
	стррJSON = ЛКОтправитьЗапрос(СтррСвойства, ТекстОшибки);
	
	Если стррJSON.КодСостояния <> 200 Тогда	// произошла ошибка 
		Если ВыводитьСообщения Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);		
		КонецЕсли; 
	ИначеЕсли стррJSON.Свойство(""Signature"") И Не РежимПодтверждения Тогда // ошибки нет и нужно запомнить информацию для дальнейшего подтверждения (подпись и операцию).
		Объект.ЛКПодтверждение = Новый Структура(""Signature,Операция"", стррJSON.Signature, Операция);
	КонецЕсли;

	Если РежимПодтверждения Тогда // нужно завершить или отменить операцию (если была ошибка)
		ЛКОперацияЗавершить(Операция, стррJSON.КодСостояния = 200);
	КонецЕсли;
	
	Возврат стррJSON;
	
КонецФункции

// Возвращает заполненную структуру для отправки HTTP-запроса.
//
// Параметры:
// 		СтрПараметры - Строка - список параметров запроса.
// 		СтрОпции - Строка - список опций для свойств запроса (через запятую), значения:
//			СвойстваКонфигурации - добавить в структуру свойства конфигурации 1С.
//			Авторизация 		 - заполнить заголовок авторизации.
//			Get 		 		 - get-запрос (если не указан, то put-запрос).
//
&НаКлиенте
Функция ЛКСвойстваЗапроса(СтрПараметры, СтрОпции)
	
	СтррРезультат = Новый Структура(""Заголовки,Параметры,НужноПодтверждение"");
	
	СтррПараметры = Новый Структура(СтрПараметры);
	Если 0 <> Найти(СтрОпции, ""СвойстваКонфигурации"") Тогда
		ПолучитьОписаниеКонфигурации1С(СтррПараметры); // дополняем структуру свойствами конфигурации
	КонецЕсли; 
	
	СтррИсточник  = Новый Структура(""Name,Login,Password,Key,Token"", 
		Объект.ЛКНазваниеУС, Объект.ЛКЛогин, Объект.ЛКПароль, Объект.ЛКИдентификаторУС, Объект.ЛКТокенУС);
		
	ЗаполнитьЗначенияСвойств(СтррПараметры, СтррИсточник);
	
	Если СтррПараметры.Свойство(""Signature"") Тогда
			СтррПараметры.Signature = Объект.ЛКПодтверждение.Signature;
	КонецЕсли; 
	
	СтррРезультат.Параметры = СтррПараметры;
	
	Если 0 <> Найти(СтрОпции, ""Авторизация"") Тогда
		СтррРезультат.Заголовки = Новый Структура;
		СтррРезультат.Заголовки.Вставить(""Authorization"", ""token "" + Объект.ЛКИдентификаторУС + "":"" + Объект.ЛКТокенУС); 
	КонецЕсли; 
	
	Если 0 <> Найти(СтрОпции, ""Get"") Тогда
		СтррРезультат.Вставить(""Get"");
	КонецЕсли; 
	
	Возврат СтррРезультат;
		
КонецФункции

// Завершающие действия операции в учетной системе.
// Процедура удаляет признак незавершенного подтверждения из хранилища и завершает / отменяет операцию.
// В случае отмены транзакции выводит сообщение об отмене операции.
&НаКлиенте
Процедура ЛКОперацияЗавершить(Операция = Неопределено, ЗавершитьТранзакцию)
	
	Если Операция = Неопределено Тогда
		Если ТипЗнч(Объект.ЛКПодтверждение) = Тип(""Структура"") Тогда
			Операция = Объект.ЛКПодтверждение.Операция;
		Иначе
			ВызватьИсключение(""Отсутствуют данные для подтверждения операции в атрибуте Объект.ЛКПодтверждение!"");			
		КонецЕсли;
	КонецЕсли; 
	
	Если Не СтррОперацииЛК.Свойство(Операция) Тогда
	    ВызватьИсключение(""Неизвестный вид операции для завершения! Процедура ЛКОперацияЗавершить(), параметр Операция = "" + Операция);
	КонецЕсли; 
	
	стррОперация = СтррОперацииЛК[Операция];	
	
	Если Операция = ""УСРегистрация"" Тогда
		Если Не ЗавершитьТранзакцию Тогда
			Объект.ЛКИдентификаторУС = """";
			Объект.ЛКТокенУС		 = """";
		КонецЕсли;
	ИначеЕсли Операция = ""УСУдалить"" Тогда
		Если ЗавершитьТранзакцию Тогда
			Объект.ЛКИдентификаторУС = """";
			Объект.ЛКТокенУС 		 = """";
		КонецЕсли;
	КонецЕсли; 
	
	Объект.ЛКПодтверждение = Неопределено;
	СохранитьНастройкиКлиент(); 
	
	Если ЗавершитьТранзакцию Тогда
		Текст = СтрШаблон_(НСтр(""ru = 'Успешно завершена операция """"%1"""".'""), стррОперация.Представление);	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);		
	КонецЕсли;
	
	ЛКРегистрацияУчетнойСистемыОбновитьФорму();	
	
КонецПроцедуры

// Процедура проверяет завершение операции, если она не была завершена при предыдущем сеансе работы обработки.
&НаКлиенте
Процедура ЛКПроверитьЗавершениеОперации()
	
	Если Объект.ЛКПодтверждение = Неопределено Тогда // подтверждать нечего - незавершенной операции нет.
		Возврат;
	КонецЕсли; 
	
	Операция = Объект.ЛКПодтверждение.Операция;
	
	Если Не СтррОперацииЛК.Свойство(Операция) Тогда
	    ВызватьИсключение(""Неизвестный вид операции для подтверждения! Объект.ЛКПодтверждение.Операция = "" + Операция);
	КонецЕсли; 
	
	стррОперация = СтррОперацииЛК[Операция];	
	
	Текст = СтрШаблон_(НСтр(""ru = 'Не подтверждена операция """"%1"""".'""), стррОперация.Представление);
	
	Оповещение = Новый ОписаниеОповещения(""ЛКПроверитьЗавершениеОперацииПродолжить"", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, Текст + "" "" + НСтр(""ru = 'Подтвердить операцию?'""), РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

// Обработка ответа на вопрос ""Подтвердить операцию?"".
&НаКлиенте
Процедура ЛКПроверитьЗавершениеОперацииПродолжить(РезультатОтвета, ДополнительныйПараметр) Экспорт
	
	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		ЛКОперацияВыполнить(""complete*""); // отправляем запрос на завершение и выполняем завершение
	Иначе
		ЛКОперацияЗавершить(, Ложь); // отменяем действие операции
	КонецЕсли;

КонецПроцедуры

// СлужебныеПроцедурыИФункции_ВебСервисЛК_РаботаОпераций
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_JSON

&НаСервере
Функция ОтладкаПрочитатьЗначениеКаналовОбмена()
	Возврат ЗначениеИзФайла(""D:\Bak\Channels.dat"");
КонецФункции

// Перенос (чтение) данных из строки JSON в структуру.
&НаКлиенте
Функция ПреобразоватьСтрокуВJSON(Строка) Экспорт
	
	Если Строка = ""Отладка!"" Тогда
		Если СтррКонтекст.Отладка = ""КО"" Тогда // эмулируем возврат списка каналов обмена
			мКаналы = ОтладкаПрочитатьЗначениеКаналовОбмена();
			Возврат Новый Структура(""JSON"", мКаналы);
		ИначеЕсли СтррКонтекст.Отладка = ""МУ"" Тогда // эмулируем возврат списка МУ - помещаем в строку массив JSON
			Текст = Новый ЧтениеТекста(""d:\Bak\DevicesJSON.txt"", КодировкаТекста.UTF8);
			Строка = """";
			СтрокаТекста = Текст.ПрочитатьСтроку();
			Пока СтрокаТекста <> Неопределено Цикл // строки читаются до символа перевода строки
				Строка = Строка + СтрокаТекста;
			    СтрокаТекста = Текст.ПрочитатьСтроку();
			КонецЦикла;
		Иначе
			ВызватьИсключение(""Включен неизвестный параметр отдалки: "" + СтррКонтекст.Отладка);
		КонецЕсли; 
	КонецЕсли; 
	
	Результат = Неопределено;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	Попытка
		ЧтениеJSON.УстановитьСтроку(Строка);
		ПромРезультат = ПрочитатьJSON(ЧтениеJSON);
		Если ТипЗнч(ПромРезультат) <> Тип(""Структура"") И ПромРезультат <> Неопределено Тогда
			Результат = Новый Структура(""JSON"", ПромРезультат);
		Иначе
			Результат = ПромРезультат;
		КонецЕсли;
		ЧтениеJSON.Закрыть();
	Исключение
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

// Преобразование данных из структуры JSON в строку JSON.
&НаКлиенте
Функция ПреобразоватьJSONВСтроку(СтррЗначения) Экспорт
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	
	Для Каждого Элемент Из СтррЗначения Цикл
		ЗаписьJSON.ЗаписатьИмяСвойства(Элемент.Ключ);
		ЗаписьJSON.ЗаписатьЗначение(Элемент.Значение);
	КонецЦикла; 
	
	ЗаписьJSON.ЗаписатьКонецОбъекта();	
	
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции

// СлужебныеПроцедурыИФункции_JSON
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_КаналыОбмена

&НаКлиенте 
Процедура КОПредложитьЗадатьКаналыОбменаВЛК()
	
	НазваниеУС = ПрочитатьЗначениеНастройки(""ЛКНазваниеУС"");
	Текст = СтрШаблон_(НСтр(""ru='В """"Личном кабинете"""" не создан канал обмена для учетной системы """"%1"""".'""), НазваниеУС)
		+ Символы.ПС + НСтр(""ru='Задайте в """"Личном кабинете"""" канал обмена для этой учетной системы, или общий канал для всех учетных систем.'"")
		+ Символы.ПС + НСтр(""ru='Перейти в окно настроек """"Личного кабинета""""?'"");
	Оповещение = Новый ОписаниеОповещения(""ПерейтиВЛКПродолжить"", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

// Процедура получает список каналов обмена данными из ЛК.
// 
// Параметры:
// 		БыстраяНастройка - Булево - Если значение Ложь, то результат возвращается через оповещение всех окон 
//									(т.е. подразумевается интерактивное участие пользователя).
// 									Если значение Истина, то результат возвращается ... 
// 									при этом канал обмена выбирается автоматически.
&НаКлиенте
Процедура КОПолучитьКаналыОбменаИзЛК(БыстраяНастройка)
	
	стррJSON = ЛКОперацияВыполнить(""КОПолучитьСписок"", Истина);
	ВыбранныйКанал = Неопределено;
	
	Если стррJSON.КодСостояния = 200 Тогда
		// проверяем указаны ли каналы обмена
		мКаналыОбмена = стррJSON.JSON;
		Если мКаналыОбмена.Количество() = 0 Тогда // предупреждаем что нет каналов и предлагаем перейти в ЛК
			Если БыстраяНастройка Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр(""ru = 'В """"Личном кабинете"""" не задан канал обмена, автоматическая настройка обмена данными пропущена...'""));
			Иначе
				КОПредложитьЗадатьКаналыОбменаВЛК();
			КонецЕсли; 
		ИначеЕсли мКаналыОбмена.Количество() = 1 Тогда
			ВыбранныйКанал = мКаналыОбмена[0];
		Иначе // каналов больше одного, нужно найти ""канал по умолчанию"", если такого нет, предложить выбрать канал из списка
			Для каждого Канал Из мКаналыОбмена Цикл
				Если Канал.IsDefault Тогда
					ВыбранныйКанал = Канал;
				    Прервать;
				КонецЕсли; 
			КонецЦикла; 
			Если ВыбранныйКанал = Неопределено Тогда // нет канала ""по умолчанию"", нужно предложить пользователю выбрать канал из списка
				Если БыстраяНастройка Тогда // выбираем канал автоматически
					ВыбранныйКанал = мКаналыОбмена[0]; // просто выбираем первый канал из списка
				Иначе // нужно предложить пользователю выбрать канал из списка
					ЛКИдентификаторКО = НРег(Строка(ПрочитатьЗначениеНастройки(""ЛКИдентификаторКаналаОбмена"")));
					ВыделитьЭлемент = Неопределено;
					Список = Новый СписокЗначений;
					Для каждого Канал Из мКаналыОбмена Цикл
						Элемент = Список.Добавить(Канал.Id, Канал.Name + "" ("" + СокрЛП(Канал.ExchangeWay) + "")"");
						Если НРег(Канал.Id) = ЛКИдентификаторКО Тогда
							ВыделитьЭлемент = Элемент;
						КонецЕсли; 
					КонецЦикла;
					Оповещение = Новый ОписаниеОповещения(""КОВыборКаналаИзСпискаПродолжить"", ЭтаФорма, мКаналыОбмена);
					Список.ПоказатьВыборЭлемента(Оповещение, НСтр(""ru = 'Выберите канал обмена данными'""), ВыделитьЭлемент);
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли;
	
	Если ВыбранныйКанал <> Неопределено Тогда 
		КООповеститьОВыбранномКанале(ВыбранныйКанал, БыстраяНастройка);
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура КОВыборКаналаИзСпискаПродолжить(ВыбранныйЭлемент, мКаналыОбмена) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		
		ИдКанала = ВыбранныйЭлемент.Значение;
		ВыбранныйКанал = Неопределено;
		Для Каждого Канал Из мКаналыОбмена Цикл
			Если ИдКанала = Канал.Id Тогда
				ВыбранныйКанал = Канал;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		КООповеститьОВыбранномКанале(ВыбранныйКанал);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КООповеститьОВыбранномКанале(Канал, БыстраяНастройка = Ложь)
	
	ИдКанала = Новый УникальныйИдентификатор( ?(ЗначениеЗаполнено(Канал.Id), Канал.Id, ""00000000-0000-0000-0000-000000000000"") );
	СохранитьЗначениеНастройки(""ЛКИдентификаторКаналаОбмена"", ИдКанала);
	
	СтррРезультат = Новый Структура(""ЕстьОшибки,ВидДанных,Результат"");
	СтррРезультат.ВидДанных 	= ""КаналыОбмена"";
	СтррРезультат.ЕстьОшибки 	= Ложь;
	СтррРезультат.Результат 	= Канал;
	
	Источник = ?(БыстраяНастройка, ""БыстраяНастройка"", Неопределено);
	Оповестить(""АПЛКОповещение"", СтррРезультат, Источник);

КонецПроцедуры

// СлужебныеПроцедурыИФункции_КаналыОбмена
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_МобильныеУстройства

&НаКлиенте
Процедура МУПолучитьМобильныеУстройстваИзЛК(БыстраяНастройка)
	
	стррJSON = ЛКОперацияВыполнить(""МУПолучитьСписок"", Истина);
	Если стррJSON.КодСостояния = 200 Тогда
		// проверяем есть ли мобильные устройства в ЛК
		мМУ = стррJSON.JSON;
		Если мМУ.Количество() = 0 И Не БыстраяНастройка Тогда // предупреждаем, что в ЛК нет МУ и предлагаем перейти в ЛК
			МУПредложитьЗадатьМобильныеУстройстваВЛК();
		Иначе 
			МУОповеститьОЗагруженныхМУ(мМУ, БыстраяНастройка);
		КонецЕсли; 
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте 
Функция ОписаниеОтсуствияМУвЛК() Экспорт
	
	Текст = НСтр(""ru='В """"Личном кабинете"""" не заданы мобильные устройства. Вероятная причина - программа """"Агент Плюс:Мобильная торговля"""" еще не устанавливалась на Ваше мобильное устройство.'"")
		+ Символы.ПС + НСтр(""ru='Чтобы мобильное устройство появилось в """"Личном кабинете"""" нужно:'"")
		+ Символы.ПС + ""   "" + НСтр(""ru='1. Зайти в """"Личный кабинет"""" в раздел """"Управление лицензиями"""".'"")
		+ Символы.ПС + ""   "" + НСтр(""ru='2. Убедиться, что в разделе есть свободные лицензии (для свободных лицензий указан код активации).'"")
		+ Символы.ПС + ""   "" + НСтр(""ru='3. Установить на мобильное устройство программу """"Агент Плюс:Мобильная торговля.""""'"")
		+ Символы.ПС + ""   "" + НСтр(""ru='4. При первом запуске программы на мобильном устройстве ввести код активации, который показан в """"Личном кабинете"""".'"");
		
	Возврат Текст;
	
КонецФункции

&НаКлиенте 
Процедура МУПредложитьЗадатьМобильныеУстройстваВЛК()
	
	Текст = ОписаниеОтсуствияМУвЛК();
	ТекстВопроса = ОписаниеОтсуствияМУвЛК() + Символы.ПС + Символы.ПС + НСтр(""ru='Перейти в окно настроек """"Личного кабинета""""?'"");
	Оповещение = Новый ОписаниеОповещения(""ПерейтиВЛКПродолжить"", ЭтотОбъект, Текст);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

// Процедура оповещает окна о полученным из ЛК массиве МУ.
//	Параметры:
//		мМУ - Массив - массив мобильных устройств, загруженных из ЛК
//		БыстраяНастройка - Булево - если Истина, то в параметре Источник метода Оповестить() будет передана 
//				строка ""БыстраяНастройка"" - признак для неинтерактивной обработки оповещения.
//		
&НаКлиенте 
Процедура МУОповеститьОЗагруженныхМУ(мМУ, БыстраяНастройка)
	
	СтррРезультат = Новый Структура(""ЕстьОшибки,ВидДанных,Результат"");
	СтррРезультат.ВидДанных	 = ""МобильныеУстройства"";
	СтррРезультат.ЕстьОшибки = Ложь;
	СтррРезультат.Результат  = мМУ; // Новый Массив; Отладка!!! проверка загрузки пустого списка МУ
	Источник = ?(БыстраяНастройка, ""БыстраяНастройка"", Неопределено); // в случае с ""быстрой настройкой"" может быть передан и пустой массив мМУ
	Оповестить(""АПЛКОповещение"", СтррРезультат, Источник);

КонецПроцедуры

// СлужебныеПроцедурыИФункции_МобильныеУстройства
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_ВнешнийИнтерфейс

&НаКлиенте 
Процедура ВнешнийВызовЗадатьЛогинИПароль() Экспорт
	
	ЛКПроверитьЛогинИПароль();
	
КонецПроцедуры

// Процедура возвращает результат через оповещение ""АПЛКОповещение"".
// Вызывается из внешнего модуля.
// 
// Параметры:
// 		ВидДанных - Строка - возможные значения: 
// 						""КаналыОбмена"" 			- получить массив каналов обмена данными
// 						""МобильныеУстройства"" 	- получить массив мобильных устройств
// 						""ВсеНастройки""			- получить все настройки модуля обмена (пока отладочный параметр)
// 		БыстраяНастройка - Булево - если Истина, то операция выполняется по возможности без интерактивного участия пользователя.
// 
&НаКлиенте 
Процедура ВнешнийВызовЗагрузитьДанныеИзЛК(ВидДанных, БыстраяНастройка = Ложь) Экспорт

	Если Не ЛКПроверитьЛогинИПароль() Тогда
		Возврат;
	КонецЕсли;
	
	Если СтррКонтекст.Отладка <> Неопределено Тогда
		ПоказатьПредупреждение(, ""Внимание!!! Включен режим отладки загрузки данных из ЛК. Режим: "" + СтррКонтекст.Отладка);
	КонецЕсли; 
	
	Если ВидДанных = ""КаналыОбмена"" Тогда // нужно получить список каналов обмена из ЛК
		
		Если ЛКПроверитьРегистрациюУчетнойСистемы(БыстраяНастройка) Тогда // учетная система зарегистрирована в ЛК
			КОПолучитьКаналыОбменаИзЛК(БыстраяНастройка);
		КонецЕсли; 
		
	ИначеЕсли ВидДанных = ""МобильныеУстройства"" Тогда // нужно получить список МУ из ЛК
		
		Если ЛКПроверитьРегистрациюУчетнойСистемы(БыстраяНастройка) Тогда // учетная система зарегистрирована в ЛК		
			МУПолучитьМобильныеУстройстваИзЛК(БыстраяНастройка);
		КонецЕсли;
		
	ИначеЕсли ВидДанных = ""ВсеНастройки"" Тогда // !!! нужно скачать файл настроек обмена - тестовая операция!
		
		Путь = КаталогВременныхФайловДляТранспорта();
		ИмяФайлаНастроек = ""apconfig"";// имя файла без расширения
		ФайлНастроек = Путь + ИмяФайлаНастроек + "".zip"";	
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон_(Нстр(""ru = 'Соединение с %1 ...'""), ""www.agentplus.ru""));
		Соединение = Новый HTTPСоединение(""www.agentplus.ru"");
		
		ФайлЛК = ""/tmp/configs/"" + СокрЛП(Объект.ЛКЛогин) + "".zip"";
		
		ОписаниеОшибки = """";
		Попытка HTTPОтвет = Соединение.Получить(ФайлЛК, ФайлНастроек);
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
		КонецПопытки;
		
		Если Не ПустаяСтрока(ОписаниеОшибки) Тогда
			Если 0 <> Найти(ОписаниеОшибки, ""404"") Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр(""ru = 'В настройках указан либо неправильный логин доступа в ЛК, либо не заполнены настройки в ЛК.'""));
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр(""ru = 'Ошибка получения настроек. '"") + ОписаниеОшибки);
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		Если HTTPОтвет.КодСостояния <> 200 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон_(Нстр(""ru = 'Ошибка работы с Интернет (%1)'""), HTTPОтвет.КодСостояния));
			Возврат;
		КонецЕсли;
		
		Архив = Новый ЧтениеZipФайла(ФайлНастроек, Объект.ЛКПароль);
		
		ФайлНастроекXML = Путь + ИмяФайлаНастроек + "".xml"";
		УдалитьФайлы(ФайлНастроекXML);
		
		Описание = """";
		Попытка Архив.ИзвлечьВсе(Путь);
		Исключение
			Описание = ОписаниеОшибки();
		КонецПопытки;
		
		Архив.Закрыть();
		
		УдалитьФайлы(Путь, ""*.zip""); 
		
		Если Не ПустаяСтрока(Описание) Тогда
			Если 0 <> Найти(Описание, ""пароль"") Тогда
				мПараметры = Новый Массив;
				мПараметры.Добавить(Новый Структура(""Описание,Реквизит"", НСтр(""ru='Укажите пароль доступа к настройкам из Личного кабинета.'""), ""ЛКПароль""));
				Оповещение = Новый ОписаниеОповещения(""УказатьЛогинИлиПарольЛКПродолжить"", ЭтаФорма, мПараметры);
				ПоказатьВопрос(Оповещение, НСтр(""ru='Указан неверный пароль доступа в ЛК. Хотите указать пароль?'""), РежимДиалогаВопрос.ДаНетОтмена);
				Текст = НСтр(""ru = 'Указан неверный пароль.'"");
			Иначе
				Текст = Описание;
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			Возврат;
		КонецЕсли;
		
		Модуль = ОбщийКлиентскийМодуль();
		
		Если Не Модуль.ФайлСуществует(ФайлНастроекXML) Тогда
			Текст = СтрШаблон_(НСтр(""ru = 'Не найден файл настроек в архиве. Файл: %1.'""), ФайлНастроекXML);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			Возврат;
		КонецЕсли;
		
		// имя скачанного файла настроек в переменной ФайлНастроекXML
		Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ФайлНастроекXML));
			
		СтррРезультат = Новый Структура(""ЕстьОшибки,ВидДанных,Результат"");
		СтррРезультат.ВидДанных  = ""ВсеНастройки""; // загрузка всех настроек модуля
		СтррРезультат.ЕстьОшибки = Ложь;
		СтррРезультат.Результат  = ФайлНастроекXML;
		Оповестить(""АПЛКОповещение"", СтррРезультат);
		
	Иначе
		 ВызватьИсключение(""Процедура ВнешнийВызовЗагрузитьДанныеИзЛК(). Неизвестное значение параметра! ВидДанных = "" + ВидДанных);
	КонецЕсли; 
	
КонецПроцедуры // ВнешнийВызовЗагрузитьДанныеИзЛК()

&НаКлиенте 
Функция ОбщийКлиентскийМодуль()

	Если МодульК = Неопределено Тогда
		МодульК	= ПолучитьФорму(СтррКонтекст.ПутьКФорме + ""МодульОбщий"", , ЭтаФорма, ""АгентПлюсМодульОбщийКлиент"");	
	КонецЕсли;
	
	Возврат МодульК;

КонецФункции

&НаСервере
Функция КаталогВременныхФайловДляТранспорта(Подкаталог = """")
	Возврат РеквизитФормыВЗначение(""Объект"").КаталогВременныхФайловДляТранспорта(Подкаталог);
КонецФункции

// СлужебныеПроцедурыИФункции_ВнешнийИнтерфейс
#КонецОбласти

// Убрать!!!
&НаКлиенте
Процедура КомандаЛКРазблокироватьТокен(Команда)
	Элементы.ЛКИдентификаторУС.Доступность = Истина;
	Элементы.ЛКИдентификаторУС.ТолькоПросмотр = Ложь;
	Элементы.ЛКТокенУС.Доступность = Истина;
	Элементы.ЛКТокенУС.ТолькоПросмотр = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНетДоступаВЛКНажатие(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

// СлужебныеПроцедурыИФункции
#КонецОбласти",
{4,4,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",11aafdb3-24f5-4e79-b06e-d7029a5a8b30}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"СтррКонтекст",
{1,1,
{"ru","Структура дополнительных параметров модуля формы"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"ФлагЛКРегистрацияУС",
{1,1,
{"ru","Регистрация учетной системы в ЛК"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"СтррОперацииЛК",
{1,1,
{"ru","Структура названий команд API для взаимодействия с Личным кабинетом"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,13,
{8,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьГлавнуюФорму",
{1,1,
{"ru","На главную"}
},
{1,1,
{"ru","Перейти на главную страницу"}
},
{0,
{0,
{"B",1},0}
},
{0,77,8},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаПоказатьГлавнуюФорму",3,0,0,
{0,0},1,0,1,0,0},
{8,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьНастройкиОбмена",
{1,1,
{"ru","Настройки обмена"}
},
{1,1,
{"ru","Показать настройки модуля обмена"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаПоказатьНастройкиОбмена",3,0,0,
{0,0},1,0,1,0,0},
{8,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СохранитьВсе",
{1,1,
{"ru","Сохранить"}
},
{1,1,
{"ru","Сохранить все изменения"}
},
{0,
{0,
{"B",1},0}
},
{0,83,8},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаСохранитьВсе",3,0,0,
{0,0},1,0,1,0,0},
{8,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЛКВойтиЧерезБраузер",
{1,1,
{"ru","Перейти в ""Личный кабинет"""}
},
{1,1,
{"ru","Вход ""Личный кабинет"" (agentplus.online) через браузер."}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаЛКВойтиЧерезБраузер",3,0,0,
{0,0},1,0,1,0,0},
{8,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЛКЗарегистрироватьУС",
{1,1,
{"ru","Зарегистрировать учетную систему"}
},
{1,1,
{"ru","Зарегистрировать конфигурацию 1С:Предприятия в ""Личном кабинете"""}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаЛКЗарегистрироватьУС",3,0,0,
{0,0},1,0,1,0,0},
{8,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЛКОтменитьРегистрациюУС",
{1,1,
{"ru","Отменить регистрацию учетной системы"}
},
{1,1,
{"ru","Отменить регистрацию учетной системы в ""Личном кабинете""."}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаЛКОтменитьРегистрациюУС",3,0,0,
{0,0},1,0,1,0,0},
{8,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЛКОбновитьСведенияУС",
{1,1,
{"ru","Обновить сведения об учетной системе"}
},
{1,1,
{"ru","Обновить сведения об учетной системе в ""Личном кабинете""."}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаЛКОбновитьСведенияУС",3,0,0,
{0,0},1,0,1,0,0},
{8,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СброситьРегистрациюУС",
{1,1,
{"ru","Сбросить регистрацию учетной системы"}
},
{1,1,
{"ru","Очистить сведения о регистрации учетной системы - в учетной системе очищаются данные о регистрации. Операция выполняется без обращения к ""Личному кабинету""."}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаСброситьРегистрациюУС",3,0,0,
{0,0},1,0,1,0,0},
{8,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЛКРазблокироватьТокен",
{1,1,
{"ru","ЛКРазблокировать токен"}
},
{1,1,
{"ru","ЛКРазблокировать токен"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаЛКРазблокироватьТокен",3,0,0,
{0,0},1,0,1,0,0},
{8,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЛКПроверитьПодключение",
{1,1,
{"ru","Проверить подключение"}
},
{1,1,
{"ru","Проверить подключение к ""Личному кабинету"""}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаЛКПроверитьПодключение",3,0,0,
{0,0},1,0,1,0,0},
{8,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Справка",
{1,1,
{"ru","Справка"}
},
{1,1,
{"ru","Справка"}
},
{0,
{0,
{"B",1},0}
},
{0,49,16},
{4,1,
{0,b7c81c62-d6ad-4eae-9cea-0e203182db67},"",-1,-1,1,0,""},"КомандаСправка",3,0,0,
{0,0},1,0,1,0,0},
{8,
{12,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЛКНетДоступа",
{1,1,
{"ru","У меня нет доступа в ""Личный кабинет"""}
},
{1,1,
{"ru","ЛКНет доступа"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаЛКНетДоступа",3,0,0,
{0,0},1,0,1,0,0},
{8,
{13,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЛКЧтоТакоеЛК",
{1,1,
{"ru","ЛКЧто такое ЛК"}
},
{1,1,
{"ru","ЛКЧто такое ЛК"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КомандаЛКЧтоТакоеЛК",3,0,0,
{0,0},1,0,1,0,0}
},
{0,0},
{0,0},0,0}